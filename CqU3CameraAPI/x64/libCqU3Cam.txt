
libCqU3Cam.so:     file format elf64-x86-64


Disassembly of section .note.gnu.build-id:

00000000000001c8 <.note.gnu.build-id>:
 1c8:	04 00                	add    $0x0,%al
 1ca:	00 00                	add    %al,(%rax)
 1cc:	14 00                	adc    $0x0,%al
 1ce:	00 00                	add    %al,(%rax)
 1d0:	03 00                	add    (%rax),%eax
 1d2:	00 00                	add    %al,(%rax)
 1d4:	47                   	rex.RXB
 1d5:	4e 55                	rex.WRX push %rbp
 1d7:	00 03                	add    %al,(%rbx)
 1d9:	d9 1f                	fstps  (%rdi)
 1db:	e3 cd                	jrcxz  1aa <_init-0xf46>
 1dd:	ef                   	out    %eax,(%dx)
 1de:	3e                   	ds
 1df:	3f                   	(bad)  
 1e0:	46 56                	rex.RX push %rsi
 1e2:	b9 b3 0e 3e 2f       	mov    $0x2f3e0eb3,%ecx
 1e7:	4f c8 92 5f 22       	rex.WRXB enterq $0x5f92,$0x22

Disassembly of section .gnu.hash:

00000000000001f0 <.gnu.hash>:
 1f0:	11 00                	adc    %eax,(%rax)
 1f2:	00 00                	add    %al,(%rax)
 1f4:	12 00                	adc    (%rax),%al
 1f6:	00 00                	add    %al,(%rax)
 1f8:	04 00                	add    $0x0,%al
 1fa:	00 00                	add    %al,(%rax)
 1fc:	08 00                	or     %al,(%rax)
 1fe:	00 00                	add    %al,(%rax)
 200:	00 02                	add    %al,(%rdx)
 202:	06                   	(bad)  
 203:	16                   	(bad)  
 204:	02 00                	add    (%rax),%al
 206:	80 40 38 02          	addb   $0x2,0x38(%rax)
 20a:	14 02                	adc    $0x2,%al
 20c:	00 40 10             	add    %al,0x10(%rax)
 20f:	10 14 2a             	adc    %dl,(%rdx,%rbp,1)
 212:	20 20                	and    %ah,(%rax)
 214:	4b 20 06             	rex.WXB and %al,(%r14)
 217:	09 26                	or     %esp,(%rsi)
 219:	84 08                	test   %cl,(%rax)
 21b:	41                   	rex.B
 21c:	41 0e                	rex.B (bad) 
 21e:	92                   	xchg   %eax,%edx
 21f:	38 12                	cmp    %dl,(%rdx)
 221:	00 00                	add    %al,(%rax)
 223:	00 14 00             	add    %dl,(%rax,%rax,1)
 226:	00 00                	add    %al,(%rax)
 228:	16                   	(bad)  
 229:	00 00                	add    %al,(%rax)
 22b:	00 18                	add    %bl,(%rax)
 22d:	00 00                	add    %al,(%rax)
 22f:	00 19                	add    %bl,(%rcx)
 231:	00 00                	add    %al,(%rax)
 233:	00 00                	add    %al,(%rax)
 235:	00 00                	add    %al,(%rax)
 237:	00 1c 00             	add    %bl,(%rax,%rax,1)
 23a:	00 00                	add    %al,(%rax)
 23c:	1f                   	(bad)  
 23d:	00 00                	add    %al,(%rax)
 23f:	00 23                	add    %ah,(%rbx)
 241:	00 00                	add    %al,(%rax)
 243:	00 24 00             	add    %ah,(%rax,%rax,1)
 246:	00 00                	add    %al,(%rax)
 248:	25 00 00 00 26       	and    $0x26000000,%eax
 24d:	00 00                	add    %al,(%rax)
 24f:	00 29                	add    %ch,(%rcx)
	...
 259:	00 00                	add    %al,(%rax)
 25b:	00 2c 00             	add    %ch,(%rax,%rax,1)
 25e:	00 00                	add    %al,(%rax)
 260:	2d 00 00 00 3e       	sub    $0x3e000000,%eax
 265:	59                   	pop    %rcx
 266:	48                   	rex.W
 267:	42 eb a6             	rex.X jmp 210 <_init-0xee0>
 26a:	b4 63                	mov    $0x63,%ah
 26c:	ea                   	(bad)  
 26d:	d3 ef                	shr    %cl,%edi
 26f:	0e                   	(bad)  
 270:	55                   	push   %rbp
 271:	f4                   	hlt    
 272:	c0 5d b2 02          	rcrb   $0x2,-0x4e(%rbp)
 276:	9d                   	popfq  
 277:	6b b9 8d f1 0e d9 71 	imul   $0x71,-0x26f10e73(%rcx),%edi
 27e:	58                   	pop    %rax
 27f:	1c ba                	sbb    $0xba,%al
 281:	e3 92                	jrcxz  215 <_init-0xedb>
 283:	7c 48                	jl     2cd <_init-0xe23>
 285:	c4                   	(bad)  
 286:	36                   	ss
 287:	d0 fb                	sar    %bl
 289:	42 0c db             	rex.X or $0xdb,%al
 28c:	e8 5e 7f a4 b0       	callq  ffffffffb0a481ef <_end+0xffffffffb084514f>
 291:	dd 68 a7             	(bad)  -0x59(%rax)
 294:	bb e1 66 ce 20       	mov    $0x20ce66e1,%ebx
 299:	1c 43                	sbb    $0x43,%al
 29b:	b9 e0 fc 2c 0e       	mov    $0xe2cfce0,%ecx
 2a0:	42                   	rex.X
 2a1:	45 d5                	rex.RB (bad) 
 2a3:	ec                   	in     (%dx),%al
 2a4:	ad                   	lods   %ds:(%rsi),%eax
 2a5:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 2a6:	2e                   	cs
 2a7:	c8 13 f7 df          	enterq $0xf713,$0xdf
 2ab:	40 f7                	rex (bad) 
 2ad:	8f                   	(bad)  
 2ae:	0f b6 11             	movzbl (%rcx),%edx
 2b1:	d9 1f                	fstps  (%rdi)
 2b3:	cc                   	int3   
 2b4:	6e                   	outsb  %ds:(%rsi),(%dx)
 2b5:	92                   	xchg   %eax,%edx
 2b6:	3c bc                	cmp    $0xbc,%al
 2b8:	de f4                	fdivp  %st,%st(4)
 2ba:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 2bb:	29 89 84 c4 8d 7c    	sub    %ecx,0x7c8dc484(%rcx)
 2c1:	99                   	cltd   
 2c2:	66 4b ca c1 28       	data32 rex.WXB lretq $0x28c1
 2c7:	ce                   	(bad)  
 2c8:	09 9a 25 76 fd 85    	or     %ebx,-0x7a0289db(%rdx)
 2ce:	a8 6b                	test   $0x6b,%al
 2d0:	a0                   	.byte 0xa0
 2d1:	f1                   	icebp  
 2d2:	28 ff                	sub    %bh,%bh
 2d4:	95                   	xchg   %eax,%ebp
 2d5:	8b                   	.byte 0x8b
 2d6:	8d 3f                	lea    (%rdi),%edi

Disassembly of section .dynsym:

00000000000002d8 <.dynsym>:
	...
 2f4:	03 00                	add    (%rax),%eax
 2f6:	09 00                	or     %eax,(%rax)
 2f8:	f0 10 00             	lock adc %al,(%rax)
	...
 307:	00 85 02 00 00 12    	add    %al,0x12000002(%rbp)
	...
 31d:	00 00                	add    %al,(%rax)
 31f:	00 1c 00             	add    %bl,(%rax,%rax,1)
 322:	00 00                	add    %al,(%rax)
 324:	20 00                	and    %al,(%rax)
	...
 336:	00 00                	add    %al,(%rax)
 338:	dd 00                	fldl   (%rax)
 33a:	00 00                	add    %al,(%rax)
 33c:	12 00                	adc    (%rax),%al
	...
 34e:	00 00                	add    %al,(%rax)
 350:	01 00                	add    %eax,(%rax)
 352:	00 00                	add    %al,(%rax)
 354:	20 00                	and    %al,(%rax)
	...
 366:	00 00                	add    %al,(%rax)
 368:	20 01                	and    %al,(%rcx)
 36a:	00 00                	add    %al,(%rax)
 36c:	12 00                	adc    (%rax),%al
	...
 37e:	00 00                	add    %al,(%rax)
 380:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 381:	02 00                	add    (%rax),%al
 383:	00 12                	add    %dl,(%rdx)
	...
 395:	00 00                	add    %al,(%rax)
 397:	00 a6 00 00 00 12    	add    %ah,0x12000000(%rsi)
	...
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 c6                	add    %al,%dh
 3b1:	03 00                	add    (%rax),%eax
 3b3:	00 12                	add    %dl,(%rdx)
	...
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 95 02 00 00 12    	add    %dl,0x12000002(%rbp)
	...
 3dd:	00 00                	add    %al,(%rax)
 3df:	00 b4 03 00 00 12 00 	add    %dh,0x120000(%rbx,%rax,1)
	...
 3f6:	00 00                	add    %al,(%rax)
 3f8:	bb 02 00 00 12       	mov    $0x12000002,%ebx
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 61 00             	add    %ah,0x0(%rcx)
 412:	00 00                	add    %al,(%rax)
 414:	20 00                	and    %al,(%rax)
	...
 426:	00 00                	add    %al,(%rax)
 428:	38 00                	cmp    %al,(%rax)
 42a:	00 00                	add    %al,(%rax)
 42c:	20 00                	and    %al,(%rax)
	...
 43e:	00 00                	add    %al,(%rax)
 440:	f2 02 00             	repnz add (%rax),%al
 443:	00 12                	add    %dl,(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 50 03             	add    %dl,0x3(%rax)
 45a:	00 00                	add    %al,(%rax)
 45c:	12 00                	adc    (%rax),%al
	...
 46e:	00 00                	add    %al,(%rax)
 470:	52                   	push   %rdx
 471:	00 00                	add    %al,(%rax)
 473:	00 22                	add    %ah,(%rdx)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 24 03             	add    %ah,(%rbx,%rax,1)
 48a:	00 00                	add    %al,(%rax)
 48c:	12 00                	adc    (%rax),%al
 48e:	0b 00                	or     (%rax),%eax
 490:	9e                   	sahf   
 491:	18 00                	sbb    %al,(%rax)
 493:	00 00                	add    %al,(%rax)
 495:	00 00                	add    %al,(%rax)
 497:	00 39                	add    %bh,(%rcx)
 499:	00 00                	add    %al,(%rax)
 49b:	00 00                	add    %al,(%rax)
 49d:	00 00                	add    %al,(%rax)
 49f:	00 dd                	add    %bl,%ch
 4a1:	05 00 00 12 00       	add    $0x120000,%eax
 4a6:	0b 00                	or     (%rax),%eax
 4a8:	50                   	push   %rax
 4a9:	20 00                	and    %al,(%rax)
 4ab:	00 00                	add    %al,(%rax)
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 8e 00 00 00 00    	add    %cl,0x0(%rsi)
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 16                	add    %dl,(%rsi)
 4b9:	00 00                	add    %al,(%rax)
 4bb:	00 12                	add    %dl,(%rdx)
 4bd:	00 0c 00             	add    %cl,(%rax,%rax,1)
 4c0:	bc 21 00 00 00       	mov    $0x21,%esp
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 56 01             	add    %dl,0x1(%rsi)
 4d2:	00 00                	add    %al,(%rax)
 4d4:	12 00                	adc    (%rax),%al
 4d6:	0b 00                	or     (%rax),%eax
 4d8:	d3 13                	rcll   %cl,(%rbx)
 4da:	00 00                	add    %al,(%rax)
 4dc:	00 00                	add    %al,(%rax)
 4de:	00 00                	add    %al,(%rax)
 4e0:	8c 00                	mov    %es,(%rax)
 4e2:	00 00                	add    %al,(%rax)
 4e4:	00 00                	add    %al,(%rax)
 4e6:	00 00                	add    %al,(%rax)
 4e8:	75 04                	jne    4ee <_init-0xc02>
 4ea:	00 00                	add    %al,(%rax)
 4ec:	12 00                	adc    (%rax),%al
 4ee:	0b 00                	or     (%rax),%eax
 4f0:	19 1a                	sbb    %ebx,(%rdx)
 4f2:	00 00                	add    %al,(%rax)
 4f4:	00 00                	add    %al,(%rax)
 4f6:	00 00                	add    %al,(%rax)
 4f8:	2e 00 00             	add    %al,%cs:(%rax)
 4fb:	00 00                	add    %al,(%rax)
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 10                	add    %dl,(%rax)
 501:	00 00                	add    %al,(%rax)
 503:	00 12                	add    %dl,(%rdx)
 505:	00 09                	add    %cl,(%rcx)
 507:	00 f0                	add    %dh,%al
 509:	10 00                	adc    %al,(%rax)
	...
 517:	00 cc                	add    %cl,%ah
 519:	06                   	(bad)  
 51a:	00 00                	add    %al,(%rax)
 51c:	10 00                	adc    %al,(%rax)
 51e:	16                   	(bad)  
 51f:	00 98 30 20 00 00    	add    %bl,0x2030(%rax)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 d8                	add    %bl,%al
 531:	06                   	(bad)  
 532:	00 00                	add    %al,(%rax)
 534:	10 00                	adc    %al,(%rax)
 536:	16                   	(bad)  
 537:	00 a0 30 20 00 00    	add    %ah,0x2030(%rax)
	...
 545:	00 00                	add    %al,(%rax)
 547:	00 11                	add    %dl,(%rcx)
 549:	04 00                	add    $0x0,%al
 54b:	00 12                	add    %dl,(%rdx)
 54d:	00 0b                	add    %cl,(%rbx)
 54f:	00 7d 19             	add    %bh,0x19(%rbp)
 552:	00 00                	add    %al,(%rax)
 554:	00 00                	add    %al,(%rax)
 556:	00 00                	add    %al,(%rax)
 558:	6f                   	outsl  %ds:(%rsi),(%dx)
 559:	00 00                	add    %al,(%rax)
 55b:	00 00                	add    %al,(%rax)
 55d:	00 00                	add    %al,(%rax)
 55f:	00 ee                	add    %ch,%dh
 561:	00 00                	add    %al,(%rax)
 563:	00 12                	add    %dl,(%rdx)
 565:	00 0b                	add    %cl,(%rbx)
 567:	00 83 13 00 00 00    	add    %al,0x13(%rbx)
 56d:	00 00                	add    %al,(%rax)
 56f:	00 50 00             	add    %dl,0x0(%rax)
 572:	00 00                	add    %al,(%rax)
 574:	00 00                	add    %al,(%rax)
 576:	00 00                	add    %al,(%rax)
 578:	59                   	pop    %rcx
 579:	02 00                	add    (%rax),%al
 57b:	00 12                	add    %dl,(%rdx)
 57d:	00 0b                	add    %cl,(%rbx)
 57f:	00 d1                	add    %dl,%cl
 581:	17                   	(bad)  
 582:	00 00                	add    %al,(%rax)
 584:	00 00                	add    %al,(%rax)
 586:	00 00                	add    %al,(%rax)
 588:	cd 00                	int    $0x0
 58a:	00 00                	add    %al,(%rax)
 58c:	00 00                	add    %al,(%rax)
 58e:	00 00                	add    %al,(%rax)
 590:	0c 05                	or     $0x5,%al
 592:	00 00                	add    %al,(%rax)
 594:	12 00                	adc    (%rax),%al
 596:	0b 00                	or     (%rax),%eax
 598:	34 1b                	xor    $0x1b,%al
 59a:	00 00                	add    %al,(%rax)
 59c:	00 00                	add    %al,(%rax)
 59e:	00 00                	add    %al,(%rax)
 5a0:	47 01 00             	rex.RXB add %r8d,(%r8)
 5a3:	00 00                	add    %al,(%rax)
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 69 06             	add    %ch,0x6(%rcx)
 5aa:	00 00                	add    %al,(%rax)
 5ac:	12 00                	adc    (%rax),%al
 5ae:	0b 00                	or     (%rax),%eax
 5b0:	8d 21                	lea    (%rcx),%esp
 5b2:	00 00                	add    %al,(%rax)
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 00                	add    %al,(%rax)
 5b8:	2d 00 00 00 00       	sub    $0x0,%eax
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 45 04             	add    %al,0x4(%rbp)
 5c2:	00 00                	add    %al,(%rax)
 5c4:	12 00                	adc    (%rax),%al
 5c6:	0b 00                	or     (%rax),%eax
 5c8:	ec                   	in     (%dx),%al
 5c9:	19 00                	sbb    %eax,(%rax)
 5cb:	00 00                	add    %al,(%rax)
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 2d 00 00 00 00    	add    %ch,0x0(%rip)        # 5d5 <_init-0xb1b>
 5d5:	00 00                	add    %al,(%rax)
 5d7:	00 3d 06 00 00 12    	add    %bh,0x12000006(%rip)        # 120005e3 <_end+0x11dfd543>
 5dd:	00 0b                	add    %cl,(%rbx)
 5df:	00 4e 21             	add    %cl,0x21(%rsi)
 5e2:	00 00                	add    %al,(%rax)
 5e4:	00 00                	add    %al,(%rax)
 5e6:	00 00                	add    %al,(%rax)
 5e8:	3f                   	(bad)  
 5e9:	00 00                	add    %al,(%rax)
 5eb:	00 00                	add    %al,(%rax)
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 c5                	add    %al,%ch
 5f1:	06                   	(bad)  
 5f2:	00 00                	add    %al,(%rax)
 5f4:	10 00                	adc    %al,(%rax)
 5f6:	15 00 98 30 20       	adc    $0x20309800,%eax
	...
 607:	00 e3                	add    %ah,%bl
 609:	01 00                	add    %eax,(%rax)
 60b:	00 12                	add    %dl,(%rdx)
 60d:	00 0b                	add    %cl,(%rbx)
 60f:	00 bb 16 00 00 00    	add    %bh,0x16(%rbx)
 615:	00 00                	add    %al,(%rax)
 617:	00 8b 00 00 00 00    	add    %cl,0x0(%rbx)
 61d:	00 00                	add    %al,(%rax)
 61f:	00 1e                	add    %bl,(%rsi)
 621:	02 00                	add    (%rax),%al
 623:	00 12                	add    %dl,(%rdx)
 625:	00 0b                	add    %cl,(%rbx)
 627:	00 46 17             	add    %al,0x17(%rsi)
 62a:	00 00                	add    %al,(%rax)
 62c:	00 00                	add    %al,(%rax)
 62e:	00 00                	add    %al,(%rax)
 630:	8b 00                	mov    (%rax),%eax
 632:	00 00                	add    %al,(%rax)
 634:	00 00                	add    %al,(%rax)
 636:	00 00                	add    %al,(%rax)
 638:	3f                   	(bad)  
 639:	05 00 00 12 00       	add    $0x120000,%eax
 63e:	0b 00                	or     (%rax),%eax
 640:	7b 1c                	jnp    65e <_init-0xa92>
 642:	00 00                	add    %al,(%rax)
 644:	00 00                	add    %al,(%rax)
 646:	00 00                	add    %al,(%rax)
 648:	47 01 00             	rex.RXB add %r8d,(%r8)
 64b:	00 00                	add    %al,(%rax)
 64d:	00 00                	add    %al,(%rax)
 64f:	00 85 01 00 00 12    	add    %al,0x12000001(%rbp)
 655:	00 0b                	add    %cl,(%rbx)
 657:	00 5f 14             	add    %bl,0x14(%rdi)
 65a:	00 00                	add    %al,(%rax)
 65c:	00 00                	add    %al,(%rax)
 65e:	00 00                	add    %al,(%rax)
 660:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 663:	00 00                	add    %al,(%rax)
 665:	00 00                	add    %al,(%rax)
 667:	00 b5 01 00 00 12    	add    %dh,0x12000001(%rbp)
 66d:	00 0b                	add    %cl,(%rbx)
 66f:	00 ae 14 00 00 00    	add    %ch,0x14(%rsi)
 675:	00 00                	add    %al,(%rax)
 677:	00 0d 02 00 00 00    	add    %cl,0x2(%rip)        # 67f <_init-0xa71>
 67d:	00 00                	add    %al,(%rax)
 67f:	00 a8 05 00 00 12    	add    %ch,0x12000005(%rax)
 685:	00 0b                	add    %cl,(%rbx)
 687:	00 09                	add    %cl,(%rcx)
 689:	1f                   	(bad)  
 68a:	00 00                	add    %al,(%rax)
 68c:	00 00                	add    %al,(%rax)
 68e:	00 00                	add    %al,(%rax)
 690:	47 01 00             	rex.RXB add %r8d,(%r8)
 693:	00 00                	add    %al,(%rax)
 695:	00 00                	add    %al,(%rax)
 697:	00 84 03 00 00 12 00 	add    %al,0x120000(%rbx,%rax,1)
 69e:	0b 00                	or     (%rax),%eax
 6a0:	d7                   	xlat   %ds:(%rbx)
 6a1:	18 00                	sbb    %al,(%rax)
 6a3:	00 00                	add    %al,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 51 00             	add    %dl,0x0(%rcx)
 6aa:	00 00                	add    %al,(%rax)
 6ac:	00 00                	add    %al,(%rax)
 6ae:	00 00                	add    %al,(%rax)
 6b0:	de 03                	fiadd  (%rbx)
 6b2:	00 00                	add    %al,(%rax)
 6b4:	12 00                	adc    (%rax),%al
 6b6:	0b 00                	or     (%rax),%eax
 6b8:	28 19                	sub    %bl,(%rcx)
 6ba:	00 00                	add    %al,(%rax)
 6bc:	00 00                	add    %al,(%rax)
 6be:	00 00                	add    %al,(%rax)
 6c0:	55                   	push   %rbp
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 75 00             	add    %dh,0x0(%rbp)
 6ca:	00 00                	add    %al,(%rax)
 6cc:	12 00                	adc    (%rax),%al
 6ce:	0b 00                	or     (%rax),%eax
 6d0:	f5                   	cmc    
 6d1:	12 00                	adc    (%rax),%al
 6d3:	00 00                	add    %al,(%rax)
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 8e 00 00 00 00    	add    %cl,0x0(%rsi)
 6dd:	00 00                	add    %al,(%rax)
 6df:	00 0d 06 00 00 12    	add    %cl,0x12000006(%rip)        # 120006eb <_end+0x11dfd64b>
 6e5:	00 0b                	add    %cl,(%rbx)
 6e7:	00 de                	add    %bl,%dh
 6e9:	20 00                	and    %al,(%rax)
 6eb:	00 00                	add    %al,(%rax)
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 70 00             	add    %dh,0x0(%rax)
 6f2:	00 00                	add    %al,(%rax)
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	72 05                	jb     6ff <_init-0x9f1>
 6fa:	00 00                	add    %al,(%rax)
 6fc:	12 00                	adc    (%rax),%al
 6fe:	0b 00                	or     (%rax),%eax
 700:	c2 1d 00             	retq   $0x1d
 703:	00 00                	add    %al,(%rax)
 705:	00 00                	add    %al,(%rax)
 707:	00 47 01             	add    %al,0x1(%rdi)
 70a:	00 00                	add    %al,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	d7                   	xlat   %ds:(%rbx)
 711:	04 00                	add    $0x0,%al
 713:	00 12                	add    %dl,(%rdx)
 715:	00 0b                	add    %cl,(%rbx)
 717:	00 75 1a             	add    %dh,0x1a(%rbp)
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	bf 00 00 00 00       	mov    $0x0,%edi
 725:	00 00                	add    %al,(%rax)
 727:	00 a6 04 00 00 12    	add    %ah,0x12000004(%rsi)
 72d:	00 0b                	add    %cl,(%rbx)
 72f:	00 47 1a             	add    %al,0x1a(%rdi)
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	2e 00 00             	add    %al,%cs:(%rax)
 73b:	00 00                	add    %al,(%rax)
 73d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000000740 <.dynstr>:
 740:	00 5f 5f             	add    %bl,0x5f(%rdi)
 743:	67 6d                	insl   (%dx),%es:(%edi)
 745:	6f                   	outsl  %ds:(%rsi),(%dx)
 746:	6e                   	outsb  %ds:(%rsi),(%dx)
 747:	5f                   	pop    %rdi
 748:	73 74                	jae    7be <_init-0x932>
 74a:	61                   	(bad)  
 74b:	72 74                	jb     7c1 <_init-0x92f>
 74d:	5f                   	pop    %rdi
 74e:	5f                   	pop    %rdi
 74f:	00 5f 69             	add    %bl,0x69(%rdi)
 752:	6e                   	outsb  %ds:(%rsi),(%dx)
 753:	69 74 00 5f 66 69 6e 	imul   $0x696e6966,0x5f(%rax,%rax,1),%esi
 75a:	69 
 75b:	00 5f 49             	add    %bl,0x49(%rdi)
 75e:	54                   	push   %rsp
 75f:	4d 5f                	rex.WRB pop %r15
 761:	64                   	fs
 762:	65                   	gs
 763:	72 65                	jb     7ca <_init-0x926>
 765:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 76c:	4d 
 76d:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 76f:	6f                   	outsl  %ds:(%rsi),(%dx)
 770:	6e                   	outsb  %ds:(%rsi),(%dx)
 771:	65                   	gs
 772:	54                   	push   %rsp
 773:	61                   	(bad)  
 774:	62                   	(bad)  
 775:	6c                   	insb   (%dx),%es:(%rdi)
 776:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 77a:	54                   	push   %rsp
 77b:	4d 5f                	rex.WRB pop %r15
 77d:	72 65                	jb     7e4 <_init-0x90c>
 77f:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 786:	4d 
 787:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 789:	6f                   	outsl  %ds:(%rsi),(%dx)
 78a:	6e                   	outsb  %ds:(%rsi),(%dx)
 78b:	65                   	gs
 78c:	54                   	push   %rsp
 78d:	61                   	(bad)  
 78e:	62                   	(bad)  
 78f:	6c                   	insb   (%dx),%es:(%rdi)
 790:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 794:	63 78 61             	movslq 0x61(%rax),%edi
 797:	5f                   	pop    %rdi
 798:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 79e:	7a 65                	jp     805 <_init-0x8eb>
 7a0:	00 5f 4a             	add    %bl,0x4a(%rdi)
 7a3:	76 5f                	jbe    804 <_init-0x8ec>
 7a5:	52                   	push   %rdx
 7a6:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%ebx),%esi
 7ad:	43 6c 
 7af:	61                   	(bad)  
 7b0:	73 73                	jae    825 <_init-0x8cb>
 7b2:	65                   	gs
 7b3:	73 00                	jae    7b5 <_init-0x93b>
 7b5:	5f                   	pop    %rdi
 7b6:	5a                   	pop    %rdx
 7b7:	31 39                	xor    %edi,(%rcx)
 7b9:	43 71 55             	rex.XB jno 811 <_init-0x8df>
 7bc:	33 43 61             	xor    0x61(%rbx),%eax
 7bf:	6d                   	insl   (%dx),%es:(%rdi)
 7c0:	5f                   	pop    %rdi
 7c1:	57                   	push   %rdi
 7c2:	72 53                	jb     817 <_init-0x8d9>
 7c4:	65 6e                	outsb  %gs:(%rsi),(%dx)
 7c6:	73 6f                	jae    837 <_init-0x8b9>
 7c8:	72 52                	jb     81c <_init-0x8d4>
 7ca:	65                   	gs
 7cb:	67 50                	addr32 push %rax
 7cd:	32 30                	xor    (%rax),%dh
 7cf:	6c                   	insb   (%dx),%es:(%rdi)
 7d0:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 7d7:	65                   	gs
 7d8:	76 69                	jbe    843 <_init-0x8ad>
 7da:	63 65 5f             	movslq 0x5f(%rbp),%esp
 7dd:	68 61 6e 64 6c       	pushq  $0x6c646e61
 7e2:	65                   	gs
 7e3:	74 74                	je     859 <_init-0x897>
 7e5:	00 5f 5a             	add    %bl,0x5a(%rdi)
 7e8:	31 39                	xor    %edi,(%rcx)
 7ea:	63 79 75             	movslq 0x75(%rcx),%edi
 7ed:	73 62                	jae    851 <_init-0x89f>
 7ef:	5f                   	pop    %rdi
 7f0:	63 6f 6e             	movslq 0x6e(%rdi),%ebp
 7f3:	74 72                	je     867 <_init-0x889>
 7f5:	6f                   	outsl  %ds:(%rsi),(%dx)
 7f6:	6c                   	insb   (%dx),%es:(%rdi)
 7f7:	5f                   	pop    %rdi
 7f8:	77 72                	ja     86c <_init-0x884>
 7fa:	69 74 65 50 32 30 6c 	imul   $0x696c3032,0x50(%rbp,%riz,2),%esi
 801:	69 
 802:	62                   	(bad)  
 803:	75 73                	jne    878 <_init-0x878>
 805:	62                   	(bad)  
 806:	5f                   	pop    %rdi
 807:	64                   	fs
 808:	65                   	gs
 809:	76 69                	jbe    874 <_init-0x87c>
 80b:	63 65 5f             	movslq 0x5f(%rbp),%esp
 80e:	68 61 6e 64 6c       	pushq  $0x6c646e61
 813:	65                   	gs
 814:	68 68 74 74 50       	pushq  $0x50747468
 819:	68 74 6a 00 5f       	pushq  $0x5f006a74
 81e:	5f                   	pop    %rdi
 81f:	73 74                	jae    895 <_init-0x85b>
 821:	61                   	(bad)  
 822:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 825:	63 68 6b             	movslq 0x6b(%rax),%ebp
 828:	5f                   	pop    %rdi
 829:	66                   	data16
 82a:	61                   	(bad)  
 82b:	69 6c 00 5f 5a 31 39 	imul   $0x4339315a,0x5f(%rax,%rax,1),%ebp
 832:	43 
 833:	71 55                	jno    88a <_init-0x866>
 835:	33 43 61             	xor    0x61(%rbx),%eax
 838:	6d                   	insl   (%dx),%es:(%rdi)
 839:	5f                   	pop    %rdi
 83a:	52                   	push   %rdx
 83b:	64                   	fs
 83c:	53                   	push   %rbx
 83d:	65 6e                	outsb  %gs:(%rsi),(%dx)
 83f:	73 6f                	jae    8b0 <_init-0x840>
 841:	72 52                	jb     895 <_init-0x85b>
 843:	65                   	gs
 844:	67 50                	addr32 push %rax
 846:	32 30                	xor    (%rax),%dh
 848:	6c                   	insb   (%dx),%es:(%rdi)
 849:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 850:	65                   	gs
 851:	76 69                	jbe    8bc <_init-0x834>
 853:	63 65 5f             	movslq 0x5f(%rbp),%esp
 856:	68 61 6e 64 6c       	pushq  $0x6c646e61
 85b:	65                   	gs
 85c:	74 50                	je     8ae <_init-0x842>
 85e:	68 00 5f 5a 31       	pushq  $0x315a5f00
 863:	38 63 79             	cmp    %ah,0x79(%rbx)
 866:	75 73                	jne    8db <_init-0x815>
 868:	62                   	(bad)  
 869:	5f                   	pop    %rdi
 86a:	63 6f 6e             	movslq 0x6e(%rdi),%ebp
 86d:	74 72                	je     8e1 <_init-0x80f>
 86f:	6f                   	outsl  %ds:(%rsi),(%dx)
 870:	6c                   	insb   (%dx),%es:(%rdi)
 871:	5f                   	pop    %rdi
 872:	72 65                	jb     8d9 <_init-0x817>
 874:	61                   	(bad)  
 875:	64                   	fs
 876:	50                   	push   %rax
 877:	32 30                	xor    (%rax),%dh
 879:	6c                   	insb   (%dx),%es:(%rdi)
 87a:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 881:	65                   	gs
 882:	76 69                	jbe    8ed <_init-0x803>
 884:	63 65 5f             	movslq 0x5f(%rbp),%esp
 887:	68 61 6e 64 6c       	pushq  $0x6c646e61
 88c:	65                   	gs
 88d:	68 68 74 74 50       	pushq  $0x50747468
 892:	68 74 6a 00 5f       	pushq  $0x5f006a74
 897:	5a                   	pop    %rdx
 898:	31 37                	xor    %esi,(%rdi)
 89a:	43 71 55             	rex.XB jno 8f2 <_init-0x7fe>
 89d:	33 43 61             	xor    0x61(%rbx),%eax
 8a0:	6d                   	insl   (%dx),%es:(%rdi)
 8a1:	5f                   	pop    %rdi
 8a2:	57                   	push   %rdi
 8a3:	72 46                	jb     8eb <_init-0x805>
 8a5:	70 67                	jo     90e <_init-0x7e2>
 8a7:	61                   	(bad)  
 8a8:	52                   	push   %rdx
 8a9:	65                   	gs
 8aa:	67 50                	addr32 push %rax
 8ac:	32 30                	xor    (%rax),%dh
 8ae:	6c                   	insb   (%dx),%es:(%rdi)
 8af:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 8b6:	65                   	gs
 8b7:	76 69                	jbe    922 <_init-0x7ce>
 8b9:	63 65 5f             	movslq 0x5f(%rbp),%esp
 8bc:	68 61 6e 64 6c       	pushq  $0x6c646e61
 8c1:	65                   	gs
 8c2:	68 68 00 5f 5a       	pushq  $0x5a5f0068
 8c7:	31 37                	xor    %esi,(%rdi)
 8c9:	43 71 55             	rex.XB jno 921 <_init-0x7cf>
 8cc:	33 43 61             	xor    0x61(%rbx),%eax
 8cf:	6d                   	insl   (%dx),%es:(%rdi)
 8d0:	5f                   	pop    %rdi
 8d1:	52                   	push   %rdx
 8d2:	64                   	fs
 8d3:	46 70 67             	rex.RX jo 93d <_init-0x7b3>
 8d6:	61                   	(bad)  
 8d7:	52                   	push   %rdx
 8d8:	65                   	gs
 8d9:	67 50                	addr32 push %rax
 8db:	32 30                	xor    (%rax),%dh
 8dd:	6c                   	insb   (%dx),%es:(%rdi)
 8de:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 8e5:	65                   	gs
 8e6:	76 69                	jbe    951 <_init-0x79f>
 8e8:	63 65 5f             	movslq 0x5f(%rbp),%esp
 8eb:	68 61 6e 64 6c       	pushq  $0x6c646e61
 8f0:	65                   	gs
 8f1:	68 50 68 00 5f       	pushq  $0x5f006850
 8f6:	5a                   	pop    %rdx
 8f7:	31 38                	xor    %edi,(%rax)
 8f9:	43 71 55             	rex.XB jno 951 <_init-0x79f>
 8fc:	33 43 61             	xor    0x61(%rbx),%eax
 8ff:	6d                   	insl   (%dx),%es:(%rdi)
 900:	5f                   	pop    %rdi
 901:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
 903:	69 74 53 65 6e 73 6f 	imul   $0x726f736e,0x65(%rbx,%rdx,2),%esi
 90a:	72 
 90b:	50                   	push   %rax
 90c:	32 30                	xor    (%rax),%dh
 90e:	6c                   	insb   (%dx),%es:(%rdi)
 90f:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 916:	65                   	gs
 917:	76 69                	jbe    982 <_init-0x76e>
 919:	63 65 5f             	movslq 0x5f(%rbp),%esp
 91c:	68 61 6e 64 6c       	pushq  $0x6c646e61
 921:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 925:	33 30                	xor    (%rax),%esi
 927:	43 71 55             	rex.XB jno 97f <_init-0x771>
 92a:	33 43 61             	xor    0x61(%rbx),%eax
 92d:	6d                   	insl   (%dx),%es:(%rdi)
 92e:	5f                   	pop    %rdi
 92f:	53                   	push   %rbx
 930:	65                   	gs
 931:	74 41                	je     974 <_init-0x77c>
 933:	6e                   	outsb  %ds:(%rsi),(%dx)
 934:	61                   	(bad)  
 935:	6c                   	insb   (%dx),%es:(%rdi)
 936:	6f                   	outsl  %ds:(%rsi),(%dx)
 937:	67 47 61             	addr32 rex.RXB (bad) 
 93a:	69 6e 5f 41 75 74 6f 	imul   $0x6f747541,0x5f(%rsi),%ebp
 941:	54                   	push   %rsp
 942:	72 69                	jb     9ad <_init-0x743>
 944:	67 50                	addr32 push %rax
 946:	32 30                	xor    (%rax),%dh
 948:	6c                   	insb   (%dx),%es:(%rdi)
 949:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 950:	65                   	gs
 951:	76 69                	jbe    9bc <_init-0x734>
 953:	63 65 5f             	movslq 0x5f(%rbp),%esp
 956:	68 61 6e 64 6c       	pushq  $0x6c646e61
 95b:	65                   	gs
 95c:	68 00 5f 5a 33       	pushq  $0x335a5f00
 961:	30 43 71             	xor    %al,0x71(%rbx)
 964:	55                   	push   %rbp
 965:	33 43 61             	xor    0x61(%rbx),%eax
 968:	6d                   	insl   (%dx),%es:(%rdi)
 969:	5f                   	pop    %rdi
 96a:	53                   	push   %rbx
 96b:	65                   	gs
 96c:	74 41                	je     9af <_init-0x741>
 96e:	6e                   	outsb  %ds:(%rsi),(%dx)
 96f:	61                   	(bad)  
 970:	6c                   	insb   (%dx),%es:(%rdi)
 971:	6f                   	outsl  %ds:(%rsi),(%dx)
 972:	67 47 61             	addr32 rex.RXB (bad) 
 975:	69 6e 5f 46 70 67 61 	imul   $0x61677046,0x5f(%rsi),%ebp
 97c:	54                   	push   %rsp
 97d:	72 69                	jb     9e8 <_init-0x708>
 97f:	67 50                	addr32 push %rax
 981:	32 30                	xor    (%rax),%dh
 983:	6c                   	insb   (%dx),%es:(%rdi)
 984:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 98b:	65                   	gs
 98c:	76 69                	jbe    9f7 <_init-0x6f9>
 98e:	63 65 5f             	movslq 0x5f(%rbp),%esp
 991:	68 61 6e 64 6c       	pushq  $0x6c646e61
 996:	65                   	gs
 997:	68 00 5f 5a 31       	pushq  $0x315a5f00
 99c:	35 43 71 55 33       	xor    $0x33557143,%eax
 9a1:	43 61                	rex.XB (bad) 
 9a3:	6d                   	insl   (%dx),%es:(%rdi)
 9a4:	5f                   	pop    %rdi
 9a5:	4f 70 65             	rex.WRXB jo a0d <_init-0x6e3>
 9a8:	6e                   	outsb  %ds:(%rsi),(%dx)
 9a9:	55                   	push   %rbp
 9aa:	53                   	push   %rbx
 9ab:	42 50                	rex.X push %rax
 9ad:	50                   	push   %rax
 9ae:	32 30                	xor    (%rax),%dh
 9b0:	6c                   	insb   (%dx),%es:(%rdi)
 9b1:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 9b8:	65                   	gs
 9b9:	76 69                	jbe    a24 <_init-0x6cc>
 9bb:	63 65 5f             	movslq 0x5f(%rbp),%esp
 9be:	68 61 6e 64 6c       	pushq  $0x6c646e61
 9c3:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 9c7:	31 30                	xor    %esi,(%rax)
 9c9:	63 79 75             	movslq 0x75(%rcx),%edi
 9cc:	73 62                	jae    a30 <_init-0x6c0>
 9ce:	5f                   	pop    %rdi
 9cf:	6f                   	outsl  %ds:(%rsi),(%dx)
 9d0:	70 65                	jo     a37 <_init-0x6b9>
 9d2:	6e                   	outsb  %ds:(%rsi),(%dx)
 9d3:	76 00                	jbe    9d5 <_init-0x71b>
 9d5:	5f                   	pop    %rdi
 9d6:	5a                   	pop    %rdx
 9d7:	31 31                	xor    %esi,(%rcx)
 9d9:	63 79 75             	movslq 0x75(%rcx),%edi
 9dc:	73 62                	jae    a40 <_init-0x6b0>
 9de:	5f                   	pop    %rdi
 9df:	63 6c 6f 73          	movslq 0x73(%rdi,%rbp,2),%ebp
 9e3:	65                   	gs
 9e4:	76 00                	jbe    9e6 <_init-0x70a>
 9e6:	5f                   	pop    %rdi
 9e7:	5a                   	pop    %rdx
 9e8:	31 35 63 79 75 73    	xor    %esi,0x73757963(%rip)        # 73758351 <_end+0x735552b1>
 9ee:	62                   	(bad)  
 9ef:	5f                   	pop    %rdi
 9f0:	67                   	addr32
 9f1:	65                   	gs
 9f2:	74 68                	je     a5c <_init-0x694>
 9f4:	61                   	(bad)  
 9f5:	6e                   	outsb  %ds:(%rsi),(%dx)
 9f6:	64                   	fs
 9f7:	6c                   	insb   (%dx),%es:(%rdi)
 9f8:	65 69 00 5f 5a 32 36 	imul   $0x36325a5f,%gs:(%rax),%eax
 9ff:	63 79 75             	movslq 0x75(%rcx),%edi
 a02:	73 62                	jae    a66 <_init-0x68a>
 a04:	5f                   	pop    %rdi
 a05:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
 a09:	65                   	gs
 a0a:	6c                   	insb   (%dx),%es:(%rdi)
 a0b:	5f                   	pop    %rdi
 a0c:	64                   	fs
 a0d:	72 69                	jb     a78 <_init-0x678>
 a0f:	76 65                	jbe    a76 <_init-0x67a>
 a11:	72 5f                	jb     a72 <_init-0x67e>
 a13:	61                   	(bad)  
 a14:	63 74 69 76          	movslq 0x76(%rcx,%rbp,2),%esi
 a18:	65                   	gs
 a19:	50                   	push   %rax
 a1a:	32 30                	xor    (%rax),%dh
 a1c:	6c                   	insb   (%dx),%es:(%rdi)
 a1d:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 a24:	65                   	gs
 a25:	76 69                	jbe    a90 <_init-0x660>
 a27:	63 65 5f             	movslq 0x5f(%rbp),%esp
 a2a:	68 61 6e 64 6c       	pushq  $0x6c646e61
 a2f:	65 69 00 5f 5a 32 31 	imul   $0x31325a5f,%gs:(%rax),%eax
 a36:	63 79 75             	movslq 0x75(%rcx),%edi
 a39:	73 62                	jae    a9d <_init-0x653>
 a3b:	5f                   	pop    %rdi
 a3c:	63 6c 61 69          	movslq 0x69(%rcx,%riz,2),%ebp
 a40:	6d                   	insl   (%dx),%es:(%rdi)
 a41:	5f                   	pop    %rdi
 a42:	69 6e 74 65 72 66 61 	imul   $0x61667265,0x74(%rsi),%ebp
 a49:	63 65 50             	movslq 0x50(%rbp),%esp
 a4c:	32 30                	xor    (%rax),%dh
 a4e:	6c                   	insb   (%dx),%es:(%rdi)
 a4f:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 a56:	65                   	gs
 a57:	76 69                	jbe    ac2 <_init-0x62e>
 a59:	63 65 5f             	movslq 0x5f(%rbp),%esp
 a5c:	68 61 6e 64 6c       	pushq  $0x6c646e61
 a61:	65 69 00 5f 5a 31 36 	imul   $0x36315a5f,%gs:(%rax),%eax
 a68:	43 71 55             	rex.XB jno ac0 <_init-0x630>
 a6b:	33 43 61             	xor    0x61(%rbx),%eax
 a6e:	6d                   	insl   (%dx),%es:(%rdi)
 a6f:	5f                   	pop    %rdi
 a70:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 a72:	6f                   	outsl  %ds:(%rsi),(%dx)
 a73:	73 65                	jae    ada <_init-0x616>
 a75:	55                   	push   %rbp
 a76:	53                   	push   %rbx
 a77:	42 50                	rex.X push %rax
 a79:	32 30                	xor    (%rax),%dh
 a7b:	6c                   	insb   (%dx),%es:(%rdi)
 a7c:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 a83:	65                   	gs
 a84:	76 69                	jbe    aef <_init-0x601>
 a86:	63 65 5f             	movslq 0x5f(%rbp),%esp
 a89:	68 61 6e 64 6c       	pushq  $0x6c646e61
 a8e:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 a92:	32 33                	xor    (%rbx),%dh
 a94:	63 79 75             	movslq 0x75(%rcx),%edi
 a97:	73 62                	jae    afb <_init-0x5f5>
 a99:	5f                   	pop    %rdi
 a9a:	72 65                	jb     b01 <_init-0x5ef>
 a9c:	6c                   	insb   (%dx),%es:(%rdi)
 a9d:	65                   	gs
 a9e:	61                   	(bad)  
 a9f:	73 65                	jae    b06 <_init-0x5ea>
 aa1:	5f                   	pop    %rdi
 aa2:	69 6e 74 65 72 66 61 	imul   $0x61667265,0x74(%rsi),%ebp
 aa9:	63 65 50             	movslq 0x50(%rbp),%esp
 aac:	32 30                	xor    (%rax),%dh
 aae:	6c                   	insb   (%dx),%es:(%rdi)
 aaf:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 ab6:	65                   	gs
 ab7:	76 69                	jbe    b22 <_init-0x5ce>
 ab9:	63 65 5f             	movslq 0x5f(%rbp),%esp
 abc:	68 61 6e 64 6c       	pushq  $0x6c646e61
 ac1:	65 69 00 5f 5a 31 38 	imul   $0x38315a5f,%gs:(%rax),%eax
 ac8:	43 71 55             	rex.XB jno b20 <_init-0x5d0>
 acb:	33 43 61             	xor    0x61(%rbx),%eax
 ace:	6d                   	insl   (%dx),%es:(%rdi)
 acf:	5f                   	pop    %rdi
 ad0:	43 68 65 63 6b 53    	rex.XB pushq $0x536b6365
 ad6:	70 65                	jo     b3d <_init-0x5b3>
 ad8:	65                   	gs
 ad9:	64                   	fs
 ada:	50                   	push   %rax
 adb:	32 30                	xor    (%rax),%dh
 add:	6c                   	insb   (%dx),%es:(%rdi)
 ade:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 ae5:	65                   	gs
 ae6:	76 69                	jbe    b51 <_init-0x59f>
 ae8:	63 65 5f             	movslq 0x5f(%rbp),%esp
 aeb:	68 61 6e 64 6c       	pushq  $0x6c646e61
 af0:	65                   	gs
 af1:	50                   	push   %rax
 af2:	6a 00                	pushq  $0x0
 af4:	6c                   	insb   (%dx),%es:(%rdi)
 af5:	69 62 75 73 62 5f 67 	imul   $0x675f6273,0x75(%rdx),%esp
 afc:	65                   	gs
 afd:	74 5f                	je     b5e <_init-0x592>
 aff:	64                   	fs
 b00:	65                   	gs
 b01:	76 69                	jbe    b6c <_init-0x584>
 b03:	63 65 00             	movslq 0x0(%rbp),%esp
 b06:	6c                   	insb   (%dx),%es:(%rdi)
 b07:	69 62 75 73 62 5f 67 	imul   $0x675f6273,0x75(%rdx),%esp
 b0e:	65                   	gs
 b0f:	74 5f                	je     b70 <_init-0x580>
 b11:	64                   	fs
 b12:	65                   	gs
 b13:	76 69                	jbe    b7e <_init-0x572>
 b15:	63 65 5f             	movslq 0x5f(%rbp),%esp
 b18:	73 70                	jae    b8a <_init-0x566>
 b1a:	65 65 64 00 5f 5a    	gs gs add %bl,%fs:%gs:0x5a(%rdi)
 b20:	32 33                	xor    (%rbx),%dh
 b22:	43 71 55             	rex.XB jno b7a <_init-0x576>
 b25:	33 43 61             	xor    0x61(%rbx),%eax
 b28:	6d                   	insl   (%dx),%es:(%rdi)
 b29:	5f                   	pop    %rdi
 b2a:	53                   	push   %rbx
 b2b:	65                   	gs
 b2c:	74 41                	je     b6f <_init-0x581>
 b2e:	75 74                	jne    ba4 <_init-0x54c>
 b30:	6f                   	outsl  %ds:(%rsi),(%dx)
 b31:	54                   	push   %rsp
 b32:	72 69                	jb     b9d <_init-0x553>
 b34:	67 4d 6f             	rex.WRB outsl %ds:(%esi),(%dx)
 b37:	64                   	fs
 b38:	65                   	gs
 b39:	50                   	push   %rax
 b3a:	32 30                	xor    (%rax),%dh
 b3c:	6c                   	insb   (%dx),%es:(%rdi)
 b3d:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 b44:	65                   	gs
 b45:	76 69                	jbe    bb0 <_init-0x540>
 b47:	63 65 5f             	movslq 0x5f(%rbp),%esp
 b4a:	68 61 6e 64 6c       	pushq  $0x6c646e61
 b4f:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 b53:	32 33                	xor    (%rbx),%dh
 b55:	43 71 55             	rex.XB jno bad <_init-0x543>
 b58:	33 43 61             	xor    0x61(%rbx),%eax
 b5b:	6d                   	insl   (%dx),%es:(%rdi)
 b5c:	5f                   	pop    %rdi
 b5d:	53                   	push   %rbx
 b5e:	65                   	gs
 b5f:	74 46                	je     ba7 <_init-0x549>
 b61:	70 67                	jo     bca <_init-0x526>
 b63:	61                   	(bad)  
 b64:	54                   	push   %rsp
 b65:	72 69                	jb     bd0 <_init-0x520>
 b67:	67 4d 6f             	rex.WRB outsl %ds:(%esi),(%dx)
 b6a:	64                   	fs
 b6b:	65                   	gs
 b6c:	50                   	push   %rax
 b6d:	32 30                	xor    (%rax),%dh
 b6f:	6c                   	insb   (%dx),%es:(%rdi)
 b70:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 b77:	65                   	gs
 b78:	76 69                	jbe    be3 <_init-0x50d>
 b7a:	63 65 5f             	movslq 0x5f(%rbp),%esp
 b7d:	68 61 6e 64 6c       	pushq  $0x6c646e61
 b82:	65                   	gs
 b83:	68 00 5f 5a 31       	pushq  $0x315a5f00
 b88:	39 43 71             	cmp    %eax,0x71(%rbx)
 b8b:	55                   	push   %rbp
 b8c:	33 43 61             	xor    0x61(%rbx),%eax
 b8f:	6d                   	insl   (%dx),%es:(%rdi)
 b90:	5f                   	pop    %rdi
 b91:	53                   	push   %rbx
 b92:	65                   	gs
 b93:	74 46                	je     bdb <_init-0x515>
 b95:	70 67                	jo     bfe <_init-0x4f2>
 b97:	61                   	(bad)  
 b98:	46 72 65             	rex.RX jb c00 <_init-0x4f0>
 b9b:	71 50                	jno    bed <_init-0x503>
 b9d:	32 30                	xor    (%rax),%dh
 b9f:	6c                   	insb   (%dx),%es:(%rdi)
 ba0:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 ba7:	65                   	gs
 ba8:	76 69                	jbe    c13 <_init-0x4dd>
 baa:	63 65 5f             	movslq 0x5f(%rbp),%esp
 bad:	68 61 6e 64 6c       	pushq  $0x6c646e61
 bb2:	65                   	gs
 bb3:	68 00 5f 5a 32       	pushq  $0x325a5f00
 bb8:	30 43 71             	xor    %al,0x71(%rbx)
 bbb:	55                   	push   %rbp
 bbc:	33 43 61             	xor    0x61(%rbx),%eax
 bbf:	6d                   	insl   (%dx),%es:(%rdi)
 bc0:	5f                   	pop    %rdi
 bc1:	53                   	push   %rbx
 bc2:	65                   	gs
 bc3:	74 45                	je     c0a <_init-0x4e6>
 bc5:	78 70                	js     c37 <_init-0x4b9>
 bc7:	6f                   	outsl  %ds:(%rsi),(%dx)
 bc8:	56                   	push   %rsi
 bc9:	61                   	(bad)  
 bca:	6c                   	insb   (%dx),%es:(%rdi)
 bcb:	75 65                	jne    c32 <_init-0x4be>
 bcd:	50                   	push   %rax
 bce:	32 30                	xor    (%rax),%dh
 bd0:	6c                   	insb   (%dx),%es:(%rdi)
 bd1:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 bd8:	65                   	gs
 bd9:	76 69                	jbe    c44 <_init-0x4ac>
 bdb:	63 65 5f             	movslq 0x5f(%rbp),%esp
 bde:	68 61 6e 64 6c       	pushq  $0x6c646e61
 be3:	65                   	gs
 be4:	74 00                	je     be6 <_init-0x50a>
 be6:	5f                   	pop    %rdi
 be7:	5a                   	pop    %rdx
 be8:	32 30                	xor    (%rax),%dh
 bea:	43 71 55             	rex.XB jno c42 <_init-0x4ae>
 bed:	33 43 61             	xor    0x61(%rbx),%eax
 bf0:	6d                   	insl   (%dx),%es:(%rdi)
 bf1:	5f                   	pop    %rdi
 bf2:	53                   	push   %rbx
 bf3:	65                   	gs
 bf4:	74 47                	je     c3d <_init-0x4b3>
 bf6:	61                   	(bad)  
 bf7:	69 6e 56 61 6c 75 65 	imul   $0x65756c61,0x56(%rsi),%ebp
 bfe:	50                   	push   %rax
 bff:	32 30                	xor    (%rax),%dh
 c01:	6c                   	insb   (%dx),%es:(%rdi)
 c02:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 c09:	65                   	gs
 c0a:	76 69                	jbe    c75 <_init-0x47b>
 c0c:	63 65 5f             	movslq 0x5f(%rbp),%esp
 c0f:	68 61 6e 64 6c       	pushq  $0x6c646e61
 c14:	65                   	gs
 c15:	74 00                	je     c17 <_init-0x4d9>
 c17:	5f                   	pop    %rdi
 c18:	5a                   	pop    %rdx
 c19:	32 33                	xor    (%rbx),%dh
 c1b:	43 71 55             	rex.XB jno c73 <_init-0x47d>
 c1e:	33 43 61             	xor    0x61(%rbx),%eax
 c21:	6d                   	insl   (%dx),%es:(%rdi)
 c22:	5f                   	pop    %rdi
 c23:	53                   	push   %rbx
 c24:	65                   	gs
 c25:	74 41                	je     c68 <_init-0x488>
 c27:	75 74                	jne    c9d <_init-0x453>
 c29:	6f                   	outsl  %ds:(%rsi),(%dx)
 c2a:	47 61                	rex.RXB (bad) 
 c2c:	69 6e 45 78 70 6f 50 	imul   $0x506f7078,0x45(%rsi),%ebp
 c33:	32 30                	xor    (%rax),%dh
 c35:	6c                   	insb   (%dx),%es:(%rdi)
 c36:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 c3d:	65                   	gs
 c3e:	76 69                	jbe    ca9 <_init-0x447>
 c40:	63 65 5f             	movslq 0x5f(%rbp),%esp
 c43:	68 61 6e 64 6c       	pushq  $0x6c646e61
 c48:	65                   	gs
 c49:	62 62                	(bad)  
 c4b:	00 5f 5a             	add    %bl,0x5a(%rdi)
 c4e:	32 33                	xor    (%rbx),%dh
 c50:	43 71 55             	rex.XB jno ca8 <_init-0x448>
 c53:	33 43 61             	xor    0x61(%rbx),%eax
 c56:	6d                   	insl   (%dx),%es:(%rdi)
 c57:	5f                   	pop    %rdi
 c58:	52                   	push   %rdx
 c59:	65                   	gs
 c5a:	73 6f                	jae    ccb <_init-0x425>
 c5c:	6c                   	insb   (%dx),%es:(%rdi)
 c5d:	75 5f                	jne    cbe <_init-0x432>
 c5f:	31 32                	xor    %esi,(%rdx)
 c61:	38 30                	cmp    %dh,(%rax)
 c63:	78 37                	js     c9c <_init-0x454>
 c65:	32 30                	xor    (%rax),%dh
 c67:	50                   	push   %rax
 c68:	32 30                	xor    (%rax),%dh
 c6a:	6c                   	insb   (%dx),%es:(%rdi)
 c6b:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 c72:	65                   	gs
 c73:	76 69                	jbe    cde <_init-0x412>
 c75:	63 65 5f             	movslq 0x5f(%rbp),%esp
 c78:	68 61 6e 64 6c       	pushq  $0x6c646e61
 c7d:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 c81:	32 33                	xor    (%rbx),%dh
 c83:	43 71 55             	rex.XB jno cdb <_init-0x415>
 c86:	33 43 61             	xor    0x61(%rbx),%eax
 c89:	6d                   	insl   (%dx),%es:(%rdi)
 c8a:	5f                   	pop    %rdi
 c8b:	52                   	push   %rdx
 c8c:	65                   	gs
 c8d:	73 6f                	jae    cfe <_init-0x3f2>
 c8f:	6c                   	insb   (%dx),%es:(%rdi)
 c90:	75 5f                	jne    cf1 <_init-0x3ff>
 c92:	31 32                	xor    %esi,(%rdx)
 c94:	38 30                	cmp    %dh,(%rax)
 c96:	78 39                	js     cd1 <_init-0x41f>
 c98:	36 30 50 32          	xor    %dl,%ss:0x32(%rax)
 c9c:	30 6c 69 62          	xor    %ch,0x62(%rcx,%rbp,2)
 ca0:	75 73                	jne    d15 <_init-0x3db>
 ca2:	62                   	(bad)  
 ca3:	5f                   	pop    %rdi
 ca4:	64                   	fs
 ca5:	65                   	gs
 ca6:	76 69                	jbe    d11 <_init-0x3df>
 ca8:	63 65 5f             	movslq 0x5f(%rbp),%esp
 cab:	68 61 6e 64 6c       	pushq  $0x6c646e61
 cb0:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 cb4:	32 36                	xor    (%rsi),%dh
 cb6:	43 71 55             	rex.XB jno d0e <_init-0x3e2>
 cb9:	33 43 61             	xor    0x61(%rbx),%eax
 cbc:	6d                   	insl   (%dx),%es:(%rdi)
 cbd:	5f                   	pop    %rdi
 cbe:	52                   	push   %rdx
 cbf:	65                   	gs
 cc0:	73 6f                	jae    d31 <_init-0x3bf>
 cc2:	6c                   	insb   (%dx),%es:(%rdi)
 cc3:	75 5f                	jne    d24 <_init-0x3cc>
 cc5:	36                   	ss
 cc6:	34 30                	xor    $0x30,%al
 cc8:	78 34                	js     cfe <_init-0x3f2>
 cca:	38 30                	cmp    %dh,(%rax)
 ccc:	53                   	push   %rbx
 ccd:	6b 69 70 50          	imul   $0x50,0x70(%rcx),%ebp
 cd1:	32 30                	xor    (%rax),%dh
 cd3:	6c                   	insb   (%dx),%es:(%rdi)
 cd4:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 cdb:	65                   	gs
 cdc:	76 69                	jbe    d47 <_init-0x3a9>
 cde:	63 65 5f             	movslq 0x5f(%rbp),%esp
 ce1:	68 61 6e 64 6c       	pushq  $0x6c646e61
 ce6:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 cea:	32 35 43 71 55 33    	xor    0x33557143(%rip),%dh        # 33557e33 <_end+0x33354d93>
 cf0:	43 61                	rex.XB (bad) 
 cf2:	6d                   	insl   (%dx),%es:(%rdi)
 cf3:	5f                   	pop    %rdi
 cf4:	52                   	push   %rdx
 cf5:	65                   	gs
 cf6:	73 6f                	jae    d67 <_init-0x389>
 cf8:	6c                   	insb   (%dx),%es:(%rdi)
 cf9:	75 5f                	jne    d5a <_init-0x396>
 cfb:	36                   	ss
 cfc:	34 30                	xor    $0x30,%al
 cfe:	78 34                	js     d34 <_init-0x3bc>
 d00:	38 30                	cmp    %dh,(%rax)
 d02:	62                   	(bad)  
 d03:	69 6e 50 32 30 6c 69 	imul   $0x696c3032,0x50(%rsi),%ebp
 d0a:	62                   	(bad)  
 d0b:	75 73                	jne    d80 <_init-0x370>
 d0d:	62                   	(bad)  
 d0e:	5f                   	pop    %rdi
 d0f:	64                   	fs
 d10:	65                   	gs
 d11:	76 69                	jbe    d7c <_init-0x374>
 d13:	63 65 5f             	movslq 0x5f(%rbp),%esp
 d16:	68 61 6e 64 6c       	pushq  $0x6c646e61
 d1b:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 d1f:	31 39                	xor    %edi,(%rcx)
 d21:	43 71 55             	rex.XB jno d79 <_init-0x377>
 d24:	33 43 61             	xor    0x61(%rbx),%eax
 d27:	6d                   	insl   (%dx),%es:(%rdi)
 d28:	5f                   	pop    %rdi
 d29:	53                   	push   %rbx
 d2a:	65                   	gs
 d2b:	74 50                	je     d7d <_init-0x373>
 d2d:	72 6f                	jb     d9e <_init-0x352>
 d2f:	63 54 79 70          	movslq 0x70(%rcx,%rdi,2),%edx
 d33:	65                   	gs
 d34:	50                   	push   %rax
 d35:	32 30                	xor    (%rax),%dh
 d37:	6c                   	insb   (%dx),%es:(%rdi)
 d38:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 d3f:	65                   	gs
 d40:	76 69                	jbe    dab <_init-0x345>
 d42:	63 65 5f             	movslq 0x5f(%rbp),%esp
 d45:	68 61 6e 64 6c       	pushq  $0x6c646e61
 d4a:	65                   	gs
 d4b:	68 00 5f 5a 31       	pushq  $0x315a5f00
 d50:	39 43 71             	cmp    %eax,0x71(%rbx)
 d53:	55                   	push   %rbp
 d54:	33 43 61             	xor    0x61(%rbx),%eax
 d57:	6d                   	insl   (%dx),%es:(%rdi)
 d58:	5f                   	pop    %rdi
 d59:	53                   	push   %rbx
 d5a:	65                   	gs
 d5b:	74 42                	je     d9f <_init-0x351>
 d5d:	69 74 44 65 70 74 68 	imul   $0x50687470,0x65(%rsp,%rax,2),%esi
 d64:	50 
 d65:	32 30                	xor    (%rax),%dh
 d67:	6c                   	insb   (%dx),%es:(%rdi)
 d68:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 d6f:	65                   	gs
 d70:	76 69                	jbe    ddb <_init-0x315>
 d72:	63 65 5f             	movslq 0x5f(%rbp),%esp
 d75:	68 61 6e 64 6c       	pushq  $0x6c646e61
 d7a:	65                   	gs
 d7b:	68 00 5f 5a 31       	pushq  $0x315a5f00
 d80:	36                   	ss
 d81:	43 71 55             	rex.XB jno dd9 <_init-0x317>
 d84:	33 43 61             	xor    0x61(%rbx),%eax
 d87:	6d                   	insl   (%dx),%es:(%rdi)
 d88:	5f                   	pop    %rdi
 d89:	53                   	push   %rbx
 d8a:	74 61                	je     ded <_init-0x303>
 d8c:	72 74                	jb     e02 <_init-0x2ee>
 d8e:	43 61                	rex.XB (bad) 
 d90:	70 50                	jo     de2 <_init-0x30e>
 d92:	32 30                	xor    (%rax),%dh
 d94:	6c                   	insb   (%dx),%es:(%rdi)
 d95:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 d9c:	65                   	gs
 d9d:	76 69                	jbe    e08 <_init-0x2e8>
 d9f:	63 65 5f             	movslq 0x5f(%rbp),%esp
 da2:	68 61 6e 64 6c       	pushq  $0x6c646e61
 da7:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 dab:	32 35 43 71 55 33    	xor    0x33557143(%rip),%dh        # 33557ef4 <_end+0x33354e54>
 db1:	43 61                	rex.XB (bad) 
 db3:	6d                   	insl   (%dx),%es:(%rdi)
 db4:	5f                   	pop    %rdi
 db5:	53                   	push   %rbx
 db6:	65 6e                	outsb  %gs:(%rsi),(%dx)
 db8:	64                   	fs
 db9:	55                   	push   %rbp
 dba:	73 62                	jae    e1e <_init-0x2d2>
 dbc:	53                   	push   %rbx
 dbd:	70 65                	jo     e24 <_init-0x2cc>
 dbf:	65 64 32 46 70       	gs xor %fs:%gs:0x70(%rsi),%al
 dc4:	67 61                	addr32 (bad) 
 dc6:	50                   	push   %rax
 dc7:	32 30                	xor    (%rax),%dh
 dc9:	6c                   	insb   (%dx),%es:(%rdi)
 dca:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 dd1:	65                   	gs
 dd2:	76 69                	jbe    e3d <_init-0x2b3>
 dd4:	63 65 5f             	movslq 0x5f(%rbp),%esp
 dd7:	68 61 6e 64 6c       	pushq  $0x6c646e61
 ddc:	65                   	gs
 ddd:	68 00 6c 69 62       	pushq  $0x62696c00
 de2:	75 73                	jne    e57 <_init-0x299>
 de4:	62                   	(bad)  
 de5:	2d 31 2e 30 2e       	sub    $0x2e302e31,%eax
 dea:	73 6f                	jae    e5b <_init-0x295>
 dec:	2e 30 00             	xor    %al,%cs:(%rax)
 def:	6c                   	insb   (%dx),%es:(%rdi)
 df0:	69 62 63 79 75 73 62 	imul   $0x62737579,0x63(%rdx),%esp
 df7:	2e 73 6f             	jae,pn e69 <_init-0x287>
 dfa:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 dfe:	63 2e                	movslq (%rsi),%ebp
 e00:	73 6f                	jae    e71 <_init-0x27f>
 e02:	2e 36 00 5f 65       	cs add %bl,%cs:%ss:0x65(%rdi)
 e07:	64                   	fs
 e08:	61                   	(bad)  
 e09:	74 61                	je     e6c <_init-0x284>
 e0b:	00 5f 5f             	add    %bl,0x5f(%rdi)
 e0e:	62 73                	(bad)  
 e10:	73 5f                	jae    e71 <_init-0x27f>
 e12:	73 74                	jae    e88 <_init-0x268>
 e14:	61                   	(bad)  
 e15:	72 74                	jb     e8b <_init-0x265>
 e17:	00 5f 65             	add    %bl,0x65(%rdi)
 e1a:	6e                   	outsb  %ds:(%rsi),(%dx)
 e1b:	64 00 47 4c          	add    %al,%fs:0x4c(%rdi)
 e1f:	49                   	rex.WB
 e20:	42                   	rex.X
 e21:	43 5f                	rex.XB pop %r15
 e23:	32 2e                	xor    (%rsi),%ch
 e25:	32 2e                	xor    (%rsi),%ch
 e27:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 e2c:	42                   	rex.X
 e2d:	43 5f                	rex.XB pop %r15
 e2f:	32 2e                	xor    (%rsi),%ch
 e31:	34 00                	xor    $0x0,%al

Disassembly of section .gnu.version:

0000000000000e34 <.gnu.version>:
	...
 e3c:	02 00                	add    (%rax),%al
	...
 e56:	03 00                	add    (%rax),%eax
 e58:	01 00                	add    %eax,(%rax)
 e5a:	01 00                	add    %eax,(%rax)
 e5c:	01 00                	add    %eax,(%rax)
 e5e:	01 00                	add    %eax,(%rax)
 e60:	01 00                	add    %eax,(%rax)
 e62:	01 00                	add    %eax,(%rax)
 e64:	01 00                	add    %eax,(%rax)
 e66:	01 00                	add    %eax,(%rax)
 e68:	01 00                	add    %eax,(%rax)
 e6a:	01 00                	add    %eax,(%rax)
 e6c:	01 00                	add    %eax,(%rax)
 e6e:	01 00                	add    %eax,(%rax)
 e70:	01 00                	add    %eax,(%rax)
 e72:	01 00                	add    %eax,(%rax)
 e74:	01 00                	add    %eax,(%rax)
 e76:	01 00                	add    %eax,(%rax)
 e78:	01 00                	add    %eax,(%rax)
 e7a:	01 00                	add    %eax,(%rax)
 e7c:	01 00                	add    %eax,(%rax)
 e7e:	01 00                	add    %eax,(%rax)
 e80:	01 00                	add    %eax,(%rax)
 e82:	01 00                	add    %eax,(%rax)
 e84:	01 00                	add    %eax,(%rax)
 e86:	01 00                	add    %eax,(%rax)
 e88:	01 00                	add    %eax,(%rax)
 e8a:	01 00                	add    %eax,(%rax)
 e8c:	01 00                	add    %eax,(%rax)
 e8e:	01 00                	add    %eax,(%rax)
 e90:	01 00                	add    %eax,(%rax)

Disassembly of section .gnu.version_r:

0000000000000e98 <.gnu.version_r>:
 e98:	01 00                	add    %eax,(%rax)
 e9a:	02 00                	add    (%rax),%al
 e9c:	bb 06 00 00 10       	mov    $0x10000006,%ebx
 ea1:	00 00                	add    %al,(%rax)
 ea3:	00 00                	add    %al,(%rax)
 ea5:	00 00                	add    %al,(%rax)
 ea7:	00 75 1a             	add    %dh,0x1a(%rbp)
 eaa:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
 eb0:	dd 06                	fldl   (%rsi)
 eb2:	00 00                	add    %al,(%rax)
 eb4:	10 00                	adc    %al,(%rax)
 eb6:	00 00                	add    %al,(%rax)
 eb8:	14 69                	adc    $0x69,%al
 eba:	69 0d 00 00 02 00 e9 	imul   $0x6e9,0x20000(%rip),%ecx        # 20ec4 <__FRAME_END__+0x1e8d4>
 ec1:	06 00 00 
 ec4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000ec8 <.rela.dyn>:
 ec8:	e0 2d                	loopne ef7 <_init-0x1f9>
 eca:	20 00                	and    %al,(%rax)
 ecc:	00 00                	add    %al,(%rax)
 ece:	00 00                	add    %al,(%rax)
 ed0:	08 00                	or     %al,(%rax)
 ed2:	00 00                	add    %al,(%rax)
 ed4:	00 00                	add    %al,(%rax)
 ed6:	00 00                	add    %al,(%rax)
 ed8:	c0 12 00             	rclb   $0x0,(%rdx)
 edb:	00 00                	add    %al,(%rax)
 edd:	00 00                	add    %al,(%rax)
 edf:	00 e8                	add    %ch,%al
 ee1:	2d 20 00 00 00       	sub    $0x20,%eax
 ee6:	00 00                	add    %al,(%rax)
 ee8:	08 00                	or     %al,(%rax)
 eea:	00 00                	add    %al,(%rax)
 eec:	00 00                	add    %al,(%rax)
 eee:	00 00                	add    %al,(%rax)
 ef0:	80 12 00             	adcb   $0x0,(%rdx)
 ef3:	00 00                	add    %al,(%rax)
 ef5:	00 00                	add    %al,(%rax)
 ef7:	00 90 30 20 00 00    	add    %dl,0x2030(%rax)
 efd:	00 00                	add    %al,(%rax)
 eff:	00 08                	add    %cl,(%rax)
 f01:	00 00                	add    %al,(%rax)
 f03:	00 00                	add    %al,(%rax)
 f05:	00 00                	add    %al,(%rax)
 f07:	00 90 30 20 00 00    	add    %dl,0x2030(%rax)
 f0d:	00 00                	add    %al,(%rax)
 f0f:	00 d8                	add    %bl,%al
 f11:	2f                   	(bad)  
 f12:	20 00                	and    %al,(%rax)
 f14:	00 00                	add    %al,(%rax)
 f16:	00 00                	add    %al,(%rax)
 f18:	06                   	(bad)  
 f19:	00 00                	add    %al,(%rax)
 f1b:	00 03                	add    %al,(%rbx)
	...
 f25:	00 00                	add    %al,(%rax)
 f27:	00 e0                	add    %ah,%al
 f29:	2f                   	(bad)  
 f2a:	20 00                	and    %al,(%rax)
 f2c:	00 00                	add    %al,(%rax)
 f2e:	00 00                	add    %al,(%rax)
 f30:	06                   	(bad)  
 f31:	00 00                	add    %al,(%rax)
 f33:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # f39 <_init-0x1b7>
 f39:	00 00                	add    %al,(%rax)
 f3b:	00 00                	add    %al,(%rax)
 f3d:	00 00                	add    %al,(%rax)
 f3f:	00 e8                	add    %ch,%al
 f41:	2f                   	(bad)  
 f42:	20 00                	and    %al,(%rax)
 f44:	00 00                	add    %al,(%rax)
 f46:	00 00                	add    %al,(%rax)
 f48:	06                   	(bad)  
 f49:	00 00                	add    %al,(%rax)
 f4b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # f51 <_init-0x19f>
 f51:	00 00                	add    %al,(%rax)
 f53:	00 00                	add    %al,(%rax)
 f55:	00 00                	add    %al,(%rax)
 f57:	00 f0                	add    %dh,%al
 f59:	2f                   	(bad)  
 f5a:	20 00                	and    %al,(%rax)
 f5c:	00 00                	add    %al,(%rax)
 f5e:	00 00                	add    %al,(%rax)
 f60:	06                   	(bad)  
 f61:	00 00                	add    %al,(%rax)
 f63:	00 0e                	add    %cl,(%rsi)
	...
 f6d:	00 00                	add    %al,(%rax)
 f6f:	00 f8                	add    %bh,%al
 f71:	2f                   	(bad)  
 f72:	20 00                	and    %al,(%rax)
 f74:	00 00                	add    %al,(%rax)
 f76:	00 00                	add    %al,(%rax)
 f78:	06                   	(bad)  
 f79:	00 00                	add    %al,(%rax)
 f7b:	00 11                	add    %dl,(%rcx)
	...

Disassembly of section .rela.plt:

0000000000000f88 <.rela.plt>:
     f88:	18 30                	sbb    %dh,(%rax)
     f8a:	20 00                	and    %al,(%rax)
     f8c:	00 00                	add    %al,(%rax)
     f8e:	00 00                	add    %al,(%rax)
     f90:	07                   	(bad)  
     f91:	00 00                	add    %al,(%rax)
     f93:	00 02                	add    %al,(%rdx)
	...
     f9d:	00 00                	add    %al,(%rax)
     f9f:	00 20                	add    %ah,(%rax)
     fa1:	30 20                	xor    %ah,(%rax)
     fa3:	00 00                	add    %al,(%rax)
     fa5:	00 00                	add    %al,(%rax)
     fa7:	00 07                	add    %al,(%rdi)
     fa9:	00 00                	add    %al,(%rax)
     fab:	00 2a                	add    %ch,(%rdx)
	...
     fb5:	00 00                	add    %al,(%rax)
     fb7:	00 28                	add    %ch,(%rax)
     fb9:	30 20                	xor    %ah,(%rax)
     fbb:	00 00                	add    %al,(%rax)
     fbd:	00 00                	add    %al,(%rax)
     fbf:	00 07                	add    %al,(%rdi)
     fc1:	00 00                	add    %al,(%rax)
     fc3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
     fce:	00 00                	add    %al,(%rax)
     fd0:	30 30                	xor    %dh,(%rax)
     fd2:	20 00                	and    %al,(%rax)
     fd4:	00 00                	add    %al,(%rax)
     fd6:	00 00                	add    %al,(%rax)
     fd8:	07                   	(bad)  
     fd9:	00 00                	add    %al,(%rax)
     fdb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # fe1 <_init-0x10f>
     fe1:	00 00                	add    %al,(%rax)
     fe3:	00 00                	add    %al,(%rax)
     fe5:	00 00                	add    %al,(%rax)
     fe7:	00 38                	add    %bh,(%rax)
     fe9:	30 20                	xor    %ah,(%rax)
     feb:	00 00                	add    %al,(%rax)
     fed:	00 00                	add    %al,(%rax)
     fef:	00 07                	add    %al,(%rdi)
     ff1:	00 00                	add    %al,(%rax)
     ff3:	00 06                	add    %al,(%rsi)
	...
     ffd:	00 00                	add    %al,(%rax)
     fff:	00 40 30             	add    %al,0x30(%rax)
    1002:	20 00                	and    %al,(%rax)
    1004:	00 00                	add    %al,(%rax)
    1006:	00 00                	add    %al,(%rax)
    1008:	07                   	(bad)  
    1009:	00 00                	add    %al,(%rax)
    100b:	00 07                	add    %al,(%rdi)
	...
    1015:	00 00                	add    %al,(%rax)
    1017:	00 48 30             	add    %cl,0x30(%rax)
    101a:	20 00                	and    %al,(%rax)
    101c:	00 00                	add    %al,(%rax)
    101e:	00 00                	add    %al,(%rax)
    1020:	07                   	(bad)  
    1021:	00 00                	add    %al,(%rax)
    1023:	00 08                	add    %cl,(%rax)
	...
    102d:	00 00                	add    %al,(%rax)
    102f:	00 50 30             	add    %dl,0x30(%rax)
    1032:	20 00                	and    %al,(%rax)
    1034:	00 00                	add    %al,(%rax)
    1036:	00 00                	add    %al,(%rax)
    1038:	07                   	(bad)  
    1039:	00 00                	add    %al,(%rax)
    103b:	00 09                	add    %cl,(%rcx)
	...
    1045:	00 00                	add    %al,(%rax)
    1047:	00 58 30             	add    %bl,0x30(%rax)
    104a:	20 00                	and    %al,(%rax)
    104c:	00 00                	add    %al,(%rax)
    104e:	00 00                	add    %al,(%rax)
    1050:	07                   	(bad)  
    1051:	00 00                	add    %al,(%rax)
    1053:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 1059 <_init-0x97>
    1059:	00 00                	add    %al,(%rax)
    105b:	00 00                	add    %al,(%rax)
    105d:	00 00                	add    %al,(%rax)
    105f:	00 60 30             	add    %ah,0x30(%rax)
    1062:	20 00                	and    %al,(%rax)
    1064:	00 00                	add    %al,(%rax)
    1066:	00 00                	add    %al,(%rax)
    1068:	07                   	(bad)  
    1069:	00 00                	add    %al,(%rax)
    106b:	00 0a                	add    %cl,(%rdx)
	...
    1075:	00 00                	add    %al,(%rax)
    1077:	00 68 30             	add    %ch,0x30(%rax)
    107a:	20 00                	and    %al,(%rax)
    107c:	00 00                	add    %al,(%rax)
    107e:	00 00                	add    %al,(%rax)
    1080:	07                   	(bad)  
    1081:	00 00                	add    %al,(%rax)
    1083:	00 0b                	add    %cl,(%rbx)
	...
    108d:	00 00                	add    %al,(%rax)
    108f:	00 70 30             	add    %dh,0x30(%rax)
    1092:	20 00                	and    %al,(%rax)
    1094:	00 00                	add    %al,(%rax)
    1096:	00 00                	add    %al,(%rax)
    1098:	07                   	(bad)  
    1099:	00 00                	add    %al,(%rax)
    109b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
    10a6:	00 00                	add    %al,(%rax)
    10a8:	78 30                	js     10da <_init-0x16>
    10aa:	20 00                	and    %al,(%rax)
    10ac:	00 00                	add    %al,(%rax)
    10ae:	00 00                	add    %al,(%rax)
    10b0:	07                   	(bad)  
    10b1:	00 00                	add    %al,(%rax)
    10b3:	00 0f                	add    %cl,(%rdi)
	...
    10bd:	00 00                	add    %al,(%rax)
    10bf:	00 80 30 20 00 00    	add    %al,0x2030(%rax)
    10c5:	00 00                	add    %al,(%rax)
    10c7:	00 07                	add    %al,(%rdi)
    10c9:	00 00                	add    %al,(%rax)
    10cb:	00 10                	add    %dl,(%rax)
	...
    10d5:	00 00                	add    %al,(%rax)
    10d7:	00 88 30 20 00 00    	add    %cl,0x2030(%rax)
    10dd:	00 00                	add    %al,(%rax)
    10df:	00 07                	add    %al,(%rdi)
    10e1:	00 00                	add    %al,(%rax)
    10e3:	00 11                	add    %dl,(%rcx)
	...

Disassembly of section .init:

00000000000010f0 <_init>:
    10f0:	48 83 ec 08          	sub    $0x8,%rsp
    10f4:	48 8b 05 e5 1e 20 00 	mov    0x201ee5(%rip),%rax        # 202fe0 <_DYNAMIC+0x1e8>
    10fb:	48 85 c0             	test   %rax,%rax
    10fe:	74 05                	je     1105 <_init+0x15>
    1100:	e8 4b 00 00 00       	callq  1150 <__gmon_start__@plt>
    1105:	48 83 c4 08          	add    $0x8,%rsp
    1109:	c3                   	retq   

Disassembly of section .plt:

0000000000001110 <_Z10cyusb_openv@plt-0x10>:
    1110:	ff 35 f2 1e 20 00    	pushq  0x201ef2(%rip)        # 203008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1116:	ff 25 f4 1e 20 00    	jmpq   *0x201ef4(%rip)        # 203010 <_GLOBAL_OFFSET_TABLE_+0x10>
    111c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001120 <_Z10cyusb_openv@plt>:
    1120:	ff 25 f2 1e 20 00    	jmpq   *0x201ef2(%rip)        # 203018 <_GLOBAL_OFFSET_TABLE_+0x18>
    1126:	68 00 00 00 00       	pushq  $0x0
    112b:	e9 e0 ff ff ff       	jmpq   1110 <_init+0x20>

0000000000001130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>:
    1130:	ff 25 ea 1e 20 00    	jmpq   *0x201eea(%rip)        # 203020 <_GLOBAL_OFFSET_TABLE_+0x20>
    1136:	68 01 00 00 00       	pushq  $0x1
    113b:	e9 d0 ff ff ff       	jmpq   1110 <_init+0x20>

0000000000001140 <__stack_chk_fail@plt>:
    1140:	ff 25 e2 1e 20 00    	jmpq   *0x201ee2(%rip)        # 203028 <_GLOBAL_OFFSET_TABLE_+0x28>
    1146:	68 02 00 00 00       	pushq  $0x2
    114b:	e9 c0 ff ff ff       	jmpq   1110 <_init+0x20>

0000000000001150 <__gmon_start__@plt>:
    1150:	ff 25 da 1e 20 00    	jmpq   *0x201eda(%rip)        # 203030 <_GLOBAL_OFFSET_TABLE_+0x30>
    1156:	68 03 00 00 00       	pushq  $0x3
    115b:	e9 b0 ff ff ff       	jmpq   1110 <_init+0x20>

0000000000001160 <_Z18cyusb_control_readP20libusb_device_handlehhttPhtj@plt>:
    1160:	ff 25 d2 1e 20 00    	jmpq   *0x201ed2(%rip)        # 203038 <_GLOBAL_OFFSET_TABLE_+0x38>
    1166:	68 04 00 00 00       	pushq  $0x4
    116b:	e9 a0 ff ff ff       	jmpq   1110 <_init+0x20>

0000000000001170 <_Z15cyusb_gethandlei@plt>:
    1170:	ff 25 ca 1e 20 00    	jmpq   *0x201eca(%rip)        # 203040 <_GLOBAL_OFFSET_TABLE_+0x40>
    1176:	68 05 00 00 00       	pushq  $0x5
    117b:	e9 90 ff ff ff       	jmpq   1110 <_init+0x20>

0000000000001180 <_Z19cyusb_control_writeP20libusb_device_handlehhttPhtj@plt>:
    1180:	ff 25 c2 1e 20 00    	jmpq   *0x201ec2(%rip)        # 203048 <_GLOBAL_OFFSET_TABLE_+0x48>
    1186:	68 06 00 00 00       	pushq  $0x6
    118b:	e9 80 ff ff ff       	jmpq   1110 <_init+0x20>

0000000000001190 <libusb_get_device_speed@plt>:
    1190:	ff 25 ba 1e 20 00    	jmpq   *0x201eba(%rip)        # 203050 <_GLOBAL_OFFSET_TABLE_+0x50>
    1196:	68 07 00 00 00       	pushq  $0x7
    119b:	e9 70 ff ff ff       	jmpq   1110 <_init+0x20>

00000000000011a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>:
    11a0:	ff 25 b2 1e 20 00    	jmpq   *0x201eb2(%rip)        # 203058 <_GLOBAL_OFFSET_TABLE_+0x58>
    11a6:	68 08 00 00 00       	pushq  $0x8
    11ab:	e9 60 ff ff ff       	jmpq   1110 <_init+0x20>

00000000000011b0 <_Z11cyusb_closev@plt>:
    11b0:	ff 25 aa 1e 20 00    	jmpq   *0x201eaa(%rip)        # 203060 <_GLOBAL_OFFSET_TABLE_+0x60>
    11b6:	68 09 00 00 00       	pushq  $0x9
    11bb:	e9 50 ff ff ff       	jmpq   1110 <_init+0x20>

00000000000011c0 <libusb_get_device@plt>:
    11c0:	ff 25 a2 1e 20 00    	jmpq   *0x201ea2(%rip)        # 203068 <_GLOBAL_OFFSET_TABLE_+0x68>
    11c6:	68 0a 00 00 00       	pushq  $0xa
    11cb:	e9 40 ff ff ff       	jmpq   1110 <_init+0x20>

00000000000011d0 <_Z26cyusb_kernel_driver_activeP20libusb_device_handlei@plt>:
    11d0:	ff 25 9a 1e 20 00    	jmpq   *0x201e9a(%rip)        # 203070 <_GLOBAL_OFFSET_TABLE_+0x70>
    11d6:	68 0b 00 00 00       	pushq  $0xb
    11db:	e9 30 ff ff ff       	jmpq   1110 <_init+0x20>

00000000000011e0 <_Z21cyusb_claim_interfaceP20libusb_device_handlei@plt>:
    11e0:	ff 25 92 1e 20 00    	jmpq   *0x201e92(%rip)        # 203078 <_GLOBAL_OFFSET_TABLE_+0x78>
    11e6:	68 0c 00 00 00       	pushq  $0xc
    11eb:	e9 20 ff ff ff       	jmpq   1110 <_init+0x20>

00000000000011f0 <_Z23cyusb_release_interfaceP20libusb_device_handlei@plt>:
    11f0:	ff 25 8a 1e 20 00    	jmpq   *0x201e8a(%rip)        # 203080 <_GLOBAL_OFFSET_TABLE_+0x80>
    11f6:	68 0d 00 00 00       	pushq  $0xd
    11fb:	e9 10 ff ff ff       	jmpq   1110 <_init+0x20>

0000000000001200 <__cxa_finalize@plt>:
    1200:	ff 25 82 1e 20 00    	jmpq   *0x201e82(%rip)        # 203088 <_GLOBAL_OFFSET_TABLE_+0x88>
    1206:	68 0e 00 00 00       	pushq  $0xe
    120b:	e9 00 ff ff ff       	jmpq   1110 <_init+0x20>

Disassembly of section .text:

0000000000001210 <deregister_tm_clones>:
    1210:	48 8d 05 88 1e 20 00 	lea    0x201e88(%rip),%rax        # 20309f <_edata+0x7>
    1217:	48 8d 3d 7a 1e 20 00 	lea    0x201e7a(%rip),%rdi        # 203098 <_edata>
    121e:	55                   	push   %rbp
    121f:	48 29 f8             	sub    %rdi,%rax
    1222:	48 89 e5             	mov    %rsp,%rbp
    1225:	48 83 f8 0e          	cmp    $0xe,%rax
    1229:	77 02                	ja     122d <deregister_tm_clones+0x1d>
    122b:	5d                   	pop    %rbp
    122c:	c3                   	retq   
    122d:	48 8b 05 a4 1d 20 00 	mov    0x201da4(%rip),%rax        # 202fd8 <_DYNAMIC+0x1e0>
    1234:	48 85 c0             	test   %rax,%rax
    1237:	74 f2                	je     122b <deregister_tm_clones+0x1b>
    1239:	5d                   	pop    %rbp
    123a:	ff e0                	jmpq   *%rax
    123c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001240 <register_tm_clones>:
    1240:	48 8d 05 51 1e 20 00 	lea    0x201e51(%rip),%rax        # 203098 <_edata>
    1247:	48 8d 3d 4a 1e 20 00 	lea    0x201e4a(%rip),%rdi        # 203098 <_edata>
    124e:	55                   	push   %rbp
    124f:	48 29 f8             	sub    %rdi,%rax
    1252:	48 89 e5             	mov    %rsp,%rbp
    1255:	48 c1 f8 03          	sar    $0x3,%rax
    1259:	48 89 c2             	mov    %rax,%rdx
    125c:	48 c1 ea 3f          	shr    $0x3f,%rdx
    1260:	48 01 d0             	add    %rdx,%rax
    1263:	48 d1 f8             	sar    %rax
    1266:	75 02                	jne    126a <register_tm_clones+0x2a>
    1268:	5d                   	pop    %rbp
    1269:	c3                   	retq   
    126a:	48 8b 15 7f 1d 20 00 	mov    0x201d7f(%rip),%rdx        # 202ff0 <_DYNAMIC+0x1f8>
    1271:	48 85 d2             	test   %rdx,%rdx
    1274:	74 f2                	je     1268 <register_tm_clones+0x28>
    1276:	5d                   	pop    %rbp
    1277:	48 89 c6             	mov    %rax,%rsi
    127a:	ff e2                	jmpq   *%rdx
    127c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001280 <__do_global_dtors_aux>:
    1280:	80 3d 11 1e 20 00 00 	cmpb   $0x0,0x201e11(%rip)        # 203098 <_edata>
    1287:	75 27                	jne    12b0 <__do_global_dtors_aux+0x30>
    1289:	48 83 3d 67 1d 20 00 	cmpq   $0x0,0x201d67(%rip)        # 202ff8 <_DYNAMIC+0x200>
    1290:	00 
    1291:	55                   	push   %rbp
    1292:	48 89 e5             	mov    %rsp,%rbp
    1295:	74 0c                	je     12a3 <__do_global_dtors_aux+0x23>
    1297:	48 8b 3d f2 1d 20 00 	mov    0x201df2(%rip),%rdi        # 203090 <__dso_handle>
    129e:	e8 5d ff ff ff       	callq  1200 <__cxa_finalize@plt>
    12a3:	e8 68 ff ff ff       	callq  1210 <deregister_tm_clones>
    12a8:	5d                   	pop    %rbp
    12a9:	c6 05 e8 1d 20 00 01 	movb   $0x1,0x201de8(%rip)        # 203098 <_edata>
    12b0:	f3 c3                	repz retq 
    12b2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
    12b9:	1f 84 00 00 00 00 00 

00000000000012c0 <frame_dummy>:
    12c0:	48 83 3d 28 1b 20 00 	cmpq   $0x0,0x201b28(%rip)        # 202df0 <__JCR_END__>
    12c7:	00 
    12c8:	74 26                	je     12f0 <frame_dummy+0x30>
    12ca:	48 8b 05 17 1d 20 00 	mov    0x201d17(%rip),%rax        # 202fe8 <_DYNAMIC+0x1f0>
    12d1:	48 85 c0             	test   %rax,%rax
    12d4:	74 1a                	je     12f0 <frame_dummy+0x30>
    12d6:	55                   	push   %rbp
    12d7:	48 8d 3d 12 1b 20 00 	lea    0x201b12(%rip),%rdi        # 202df0 <__JCR_END__>
    12de:	48 89 e5             	mov    %rsp,%rbp
    12e1:	ff d0                	callq  *%rax
    12e3:	5d                   	pop    %rbp
    12e4:	e9 57 ff ff ff       	jmpq   1240 <register_tm_clones>
    12e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12f0:	e9 4b ff ff ff       	jmpq   1240 <register_tm_clones>

00000000000012f5 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett>:
    12f5:	55                   	push   %rbp
    12f6:	48 89 e5             	mov    %rsp,%rbp
    12f9:	53                   	push   %rbx
    12fa:	48 83 ec 48          	sub    $0x48,%rsp
    12fe:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    1302:	89 f1                	mov    %esi,%ecx
    1304:	89 d0                	mov    %edx,%eax
    1306:	66 89 4d c4          	mov    %cx,-0x3c(%rbp)
    130a:	66 89 45 c0          	mov    %ax,-0x40(%rbp)
    130e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1315:	00 00 
    1317:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    131b:	31 c0                	xor    %eax,%eax
    131d:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    1324:	00 
    1325:	66 c7 45 d8 00 00    	movw   $0x0,-0x28(%rbp)
    132b:	c6 45 d0 30          	movb   $0x30,-0x30(%rbp)
    132f:	0f b7 4d c4          	movzwl -0x3c(%rbp),%ecx
    1333:	0f b7 55 c0          	movzwl -0x40(%rbp),%edx
    1337:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    133b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    133f:	c7 44 24 08 64 00 00 	movl   $0x64,0x8(%rsp)
    1346:	00 
    1347:	c7 04 24 02 00 00 00 	movl   $0x2,(%rsp)
    134e:	49 89 f1             	mov    %rsi,%r9
    1351:	41 89 c8             	mov    %ecx,%r8d
    1354:	89 d1                	mov    %edx,%ecx
    1356:	ba f1 00 00 00       	mov    $0xf1,%edx
    135b:	be 40 00 00 00       	mov    $0x40,%esi
    1360:	48 89 c7             	mov    %rax,%rdi
    1363:	e8 18 fe ff ff       	callq  1180 <_Z19cyusb_control_writeP20libusb_device_handlehhttPhtj@plt>
    1368:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    136c:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    1373:	00 00 
    1375:	74 05                	je     137c <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett+0x87>
    1377:	e8 c4 fd ff ff       	callq  1140 <__stack_chk_fail@plt>
    137c:	48 83 c4 48          	add    $0x48,%rsp
    1380:	5b                   	pop    %rbx
    1381:	5d                   	pop    %rbp
    1382:	c3                   	retq   

0000000000001383 <_Z19CqU3Cam_RdSensorRegP20libusb_device_handletPh>:
    1383:	55                   	push   %rbp
    1384:	48 89 e5             	mov    %rsp,%rbp
    1387:	48 83 ec 30          	sub    $0x30,%rsp
    138b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    138f:	89 f0                	mov    %esi,%eax
    1391:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1395:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
    1399:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
    139d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    13a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13a5:	c7 44 24 08 64 00 00 	movl   $0x64,0x8(%rsp)
    13ac:	00 
    13ad:	c7 04 24 02 00 00 00 	movl   $0x2,(%rsp)
    13b4:	49 89 c9             	mov    %rcx,%r9
    13b7:	41 89 d0             	mov    %edx,%r8d
    13ba:	b9 00 00 00 00       	mov    $0x0,%ecx
    13bf:	ba f2 00 00 00       	mov    $0xf2,%edx
    13c4:	be 40 00 00 00       	mov    $0x40,%esi
    13c9:	48 89 c7             	mov    %rax,%rdi
    13cc:	e8 8f fd ff ff       	callq  1160 <_Z18cyusb_control_readP20libusb_device_handlehhttPhtj@plt>
    13d1:	c9                   	leaveq 
    13d2:	c3                   	retq   

00000000000013d3 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh>:
    13d3:	55                   	push   %rbp
    13d4:	48 89 e5             	mov    %rsp,%rbp
    13d7:	53                   	push   %rbx
    13d8:	48 83 ec 48          	sub    $0x48,%rsp
    13dc:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    13e0:	89 f1                	mov    %esi,%ecx
    13e2:	89 d0                	mov    %edx,%eax
    13e4:	88 4d c4             	mov    %cl,-0x3c(%rbp)
    13e7:	88 45 c0             	mov    %al,-0x40(%rbp)
    13ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    13f1:	00 00 
    13f3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    13f7:	31 c0                	xor    %eax,%eax
    13f9:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    1400:	00 
    1401:	66 c7 45 d8 00 00    	movw   $0x0,-0x28(%rbp)
    1407:	c6 45 d0 30          	movb   $0x30,-0x30(%rbp)
    140b:	0f b6 4d c4          	movzbl -0x3c(%rbp),%ecx
    140f:	0f b6 55 c0          	movzbl -0x40(%rbp),%edx
    1413:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    1417:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    141b:	c7 44 24 08 64 00 00 	movl   $0x64,0x8(%rsp)
    1422:	00 
    1423:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    142a:	49 89 f1             	mov    %rsi,%r9
    142d:	41 89 c8             	mov    %ecx,%r8d
    1430:	89 d1                	mov    %edx,%ecx
    1432:	ba f3 00 00 00       	mov    $0xf3,%edx
    1437:	be 40 00 00 00       	mov    $0x40,%esi
    143c:	48 89 c7             	mov    %rax,%rdi
    143f:	e8 3c fd ff ff       	callq  1180 <_Z19cyusb_control_writeP20libusb_device_handlehhttPhtj@plt>
    1444:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    1448:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    144f:	00 00 
    1451:	74 05                	je     1458 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh+0x85>
    1453:	e8 e8 fc ff ff       	callq  1140 <__stack_chk_fail@plt>
    1458:	48 83 c4 48          	add    $0x48,%rsp
    145c:	5b                   	pop    %rbx
    145d:	5d                   	pop    %rbp
    145e:	c3                   	retq   

000000000000145f <_Z17CqU3Cam_RdFpgaRegP20libusb_device_handlehPh>:
    145f:	55                   	push   %rbp
    1460:	48 89 e5             	mov    %rsp,%rbp
    1463:	48 83 ec 30          	sub    $0x30,%rsp
    1467:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    146b:	89 f0                	mov    %esi,%eax
    146d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1471:	88 45 f4             	mov    %al,-0xc(%rbp)
    1474:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
    1478:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    147c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1480:	c7 44 24 08 64 00 00 	movl   $0x64,0x8(%rsp)
    1487:	00 
    1488:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
    148f:	49 89 c9             	mov    %rcx,%r9
    1492:	41 89 d0             	mov    %edx,%r8d
    1495:	b9 00 00 00 00       	mov    $0x0,%ecx
    149a:	ba f4 00 00 00       	mov    $0xf4,%edx
    149f:	be 40 00 00 00       	mov    $0x40,%esi
    14a4:	48 89 c7             	mov    %rax,%rdi
    14a7:	e8 b4 fc ff ff       	callq  1160 <_Z18cyusb_control_readP20libusb_device_handlehhttPhtj@plt>
    14ac:	c9                   	leaveq 
    14ad:	c3                   	retq   

00000000000014ae <_Z18CqU3Cam_InitSensorP20libusb_device_handle>:
    14ae:	55                   	push   %rbp
    14af:	48 89 e5             	mov    %rsp,%rbp
    14b2:	48 83 ec 10          	sub    $0x10,%rsp
    14b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    14ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    14be:	ba 10 00 00 00       	mov    $0x10,%edx
    14c3:	be 28 30 00 00       	mov    $0x3028,%esi
    14c8:	48 89 c7             	mov    %rax,%rdi
    14cb:	e8 60 fc ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    14d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    14d4:	ba 0c 00 00 00       	mov    $0xc,%edx
    14d9:	be 2a 30 00 00       	mov    $0x302a,%esi
    14de:	48 89 c7             	mov    %rax,%rdi
    14e1:	e8 4a fc ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    14e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    14ea:	ba 01 00 00 00       	mov    $0x1,%edx
    14ef:	be 2c 30 00 00       	mov    $0x302c,%esi
    14f4:	48 89 c7             	mov    %rax,%rdi
    14f7:	e8 34 fc ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    14fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1500:	ba 01 00 00 00       	mov    $0x1,%edx
    1505:	be 2e 30 00 00       	mov    $0x302e,%esi
    150a:	48 89 c7             	mov    %rax,%rdi
    150d:	e8 1e fc ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1516:	ba 20 00 00 00       	mov    $0x20,%edx
    151b:	be 30 30 00 00       	mov    $0x3030,%esi
    1520:	48 89 c7             	mov    %rax,%rdi
    1523:	e8 08 fc ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    152c:	ba 00 00 00 00       	mov    $0x0,%edx
    1531:	be 32 30 00 00       	mov    $0x3032,%esi
    1536:	48 89 c7             	mov    %rax,%rdi
    1539:	e8 f2 fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    153e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1542:	ba 80 00 00 00       	mov    $0x80,%edx
    1547:	be b0 30 00 00       	mov    $0x30b0,%esi
    154c:	48 89 c7             	mov    %rax,%rdi
    154f:	e8 dc fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1558:	ba d8 00 00 00       	mov    $0xd8,%edx
    155d:	be 1a 30 00 00       	mov    $0x301a,%esi
    1562:	48 89 c7             	mov    %rax,%rdi
    1565:	e8 c6 fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    156a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    156e:	ba dc 10 00 00       	mov    $0x10dc,%edx
    1573:	be 1a 30 00 00       	mov    $0x301a,%esi
    1578:	48 89 c7             	mov    %rax,%rdi
    157b:	e8 b0 fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1580:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1584:	ba 7c 00 00 00       	mov    $0x7c,%edx
    1589:	be 02 30 00 00       	mov    $0x3002,%esi
    158e:	48 89 c7             	mov    %rax,%rdi
    1591:	e8 9a fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1596:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    159a:	ba 02 00 00 00       	mov    $0x2,%edx
    159f:	be 04 30 00 00       	mov    $0x3004,%esi
    15a4:	48 89 c7             	mov    %rax,%rdi
    15a7:	e8 84 fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    15ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15b0:	ba 4b 03 00 00       	mov    $0x34b,%edx
    15b5:	be 06 30 00 00       	mov    $0x3006,%esi
    15ba:	48 89 c7             	mov    %rax,%rdi
    15bd:	e8 6e fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    15c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15c6:	ba 01 05 00 00       	mov    $0x501,%edx
    15cb:	be 08 30 00 00       	mov    $0x3008,%esi
    15d0:	48 89 c7             	mov    %rax,%rdi
    15d3:	e8 58 fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    15d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15dc:	ba fd 02 00 00       	mov    $0x2fd,%edx
    15e1:	be 0a 30 00 00       	mov    $0x300a,%esi
    15e6:	48 89 c7             	mov    %rax,%rdi
    15e9:	e8 42 fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    15ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15f2:	ba 6c 05 00 00       	mov    $0x56c,%edx
    15f7:	be 0c 30 00 00       	mov    $0x300c,%esi
    15fc:	48 89 c7             	mov    %rax,%rdi
    15ff:	e8 2c fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1608:	ba 80 00 00 00       	mov    $0x80,%edx
    160d:	be 12 30 00 00       	mov    $0x3012,%esi
    1612:	48 89 c7             	mov    %rax,%rdi
    1615:	e8 16 fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    161a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    161e:	ba 8d 00 00 00       	mov    $0x8d,%edx
    1623:	be 14 30 00 00       	mov    $0x3014,%esi
    1628:	48 89 c7             	mov    %rax,%rdi
    162b:	e8 00 fb ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1634:	ba 01 00 00 00       	mov    $0x1,%edx
    1639:	be a6 30 00 00       	mov    $0x30a6,%esi
    163e:	48 89 c7             	mov    %rax,%rdi
    1641:	e8 ea fa ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    164a:	ba 00 00 00 00       	mov    $0x0,%edx
    164f:	be 40 30 00 00       	mov    $0x3040,%esi
    1654:	48 89 c7             	mov    %rax,%rdi
    1657:	e8 d4 fa ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    165c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1660:	ba 82 19 00 00       	mov    $0x1982,%edx
    1665:	be 64 30 00 00       	mov    $0x3064,%esi
    166a:	48 89 c7             	mov    %rax,%rdi
    166d:	e8 be fa ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1676:	ba 03 00 00 00       	mov    $0x3,%edx
    167b:	be 00 31 00 00       	mov    $0x3100,%esi
    1680:	48 89 c7             	mov    %rax,%rdi
    1683:	e8 a8 fa ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1688:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    168c:	ba 3c 00 00 00       	mov    $0x3c,%edx
    1691:	be 5e 30 00 00       	mov    $0x305e,%esi
    1696:	48 89 c7             	mov    %rax,%rdi
    1699:	e8 92 fa ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    169e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    16a2:	ba 00 01 00 00       	mov    $0x100,%edx
    16a7:	be 46 30 00 00       	mov    $0x3046,%esi
    16ac:	48 89 c7             	mov    %rax,%rdi
    16af:	e8 7c fa ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    16b4:	b8 00 00 00 00       	mov    $0x0,%eax
    16b9:	c9                   	leaveq 
    16ba:	c3                   	retq   

00000000000016bb <_Z30CqU3Cam_SetAnalogGain_AutoTrigP20libusb_device_handleh>:
    16bb:	55                   	push   %rbp
    16bc:	48 89 e5             	mov    %rsp,%rbp
    16bf:	48 83 ec 10          	sub    $0x10,%rsp
    16c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    16c7:	89 f0                	mov    %esi,%eax
    16c9:	88 45 f4             	mov    %al,-0xc(%rbp)
    16cc:	80 7d f4 01          	cmpb   $0x1,-0xc(%rbp)
    16d0:	75 18                	jne    16ea <_Z30CqU3Cam_SetAnalogGain_AutoTrigP20libusb_device_handleh+0x2f>
    16d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    16d6:	ba 80 00 00 00       	mov    $0x80,%edx
    16db:	be b0 30 00 00       	mov    $0x30b0,%esi
    16e0:	48 89 c7             	mov    %rax,%rdi
    16e3:	e8 48 fa ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    16e8:	eb 5a                	jmp    1744 <_Z30CqU3Cam_SetAnalogGain_AutoTrigP20libusb_device_handleh+0x89>
    16ea:	80 7d f4 02          	cmpb   $0x2,-0xc(%rbp)
    16ee:	75 18                	jne    1708 <_Z30CqU3Cam_SetAnalogGain_AutoTrigP20libusb_device_handleh+0x4d>
    16f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    16f4:	ba 90 00 00 00       	mov    $0x90,%edx
    16f9:	be b0 30 00 00       	mov    $0x30b0,%esi
    16fe:	48 89 c7             	mov    %rax,%rdi
    1701:	e8 2a fa ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1706:	eb 3c                	jmp    1744 <_Z30CqU3Cam_SetAnalogGain_AutoTrigP20libusb_device_handleh+0x89>
    1708:	80 7d f4 03          	cmpb   $0x3,-0xc(%rbp)
    170c:	75 18                	jne    1726 <_Z30CqU3Cam_SetAnalogGain_AutoTrigP20libusb_device_handleh+0x6b>
    170e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1712:	ba a0 00 00 00       	mov    $0xa0,%edx
    1717:	be b0 30 00 00       	mov    $0x30b0,%esi
    171c:	48 89 c7             	mov    %rax,%rdi
    171f:	e8 0c fa ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1724:	eb 1e                	jmp    1744 <_Z30CqU3Cam_SetAnalogGain_AutoTrigP20libusb_device_handleh+0x89>
    1726:	80 7d f4 04          	cmpb   $0x4,-0xc(%rbp)
    172a:	75 18                	jne    1744 <_Z30CqU3Cam_SetAnalogGain_AutoTrigP20libusb_device_handleh+0x89>
    172c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1730:	ba b0 00 00 00       	mov    $0xb0,%edx
    1735:	be b0 30 00 00       	mov    $0x30b0,%esi
    173a:	48 89 c7             	mov    %rax,%rdi
    173d:	e8 ee f9 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1742:	eb 00                	jmp    1744 <_Z30CqU3Cam_SetAnalogGain_AutoTrigP20libusb_device_handleh+0x89>
    1744:	c9                   	leaveq 
    1745:	c3                   	retq   

0000000000001746 <_Z30CqU3Cam_SetAnalogGain_FpgaTrigP20libusb_device_handleh>:
    1746:	55                   	push   %rbp
    1747:	48 89 e5             	mov    %rsp,%rbp
    174a:	48 83 ec 10          	sub    $0x10,%rsp
    174e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1752:	89 f0                	mov    %esi,%eax
    1754:	88 45 f4             	mov    %al,-0xc(%rbp)
    1757:	80 7d f4 01          	cmpb   $0x1,-0xc(%rbp)
    175b:	75 18                	jne    1775 <_Z30CqU3Cam_SetAnalogGain_FpgaTrigP20libusb_device_handleh+0x2f>
    175d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1761:	ba 80 04 00 00       	mov    $0x480,%edx
    1766:	be b0 30 00 00       	mov    $0x30b0,%esi
    176b:	48 89 c7             	mov    %rax,%rdi
    176e:	e8 bd f9 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1773:	eb 5a                	jmp    17cf <_Z30CqU3Cam_SetAnalogGain_FpgaTrigP20libusb_device_handleh+0x89>
    1775:	80 7d f4 02          	cmpb   $0x2,-0xc(%rbp)
    1779:	75 18                	jne    1793 <_Z30CqU3Cam_SetAnalogGain_FpgaTrigP20libusb_device_handleh+0x4d>
    177b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    177f:	ba 90 04 00 00       	mov    $0x490,%edx
    1784:	be b0 30 00 00       	mov    $0x30b0,%esi
    1789:	48 89 c7             	mov    %rax,%rdi
    178c:	e8 9f f9 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1791:	eb 3c                	jmp    17cf <_Z30CqU3Cam_SetAnalogGain_FpgaTrigP20libusb_device_handleh+0x89>
    1793:	80 7d f4 03          	cmpb   $0x3,-0xc(%rbp)
    1797:	75 18                	jne    17b1 <_Z30CqU3Cam_SetAnalogGain_FpgaTrigP20libusb_device_handleh+0x6b>
    1799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    179d:	ba a0 04 00 00       	mov    $0x4a0,%edx
    17a2:	be b0 30 00 00       	mov    $0x30b0,%esi
    17a7:	48 89 c7             	mov    %rax,%rdi
    17aa:	e8 81 f9 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    17af:	eb 1e                	jmp    17cf <_Z30CqU3Cam_SetAnalogGain_FpgaTrigP20libusb_device_handleh+0x89>
    17b1:	80 7d f4 04          	cmpb   $0x4,-0xc(%rbp)
    17b5:	75 18                	jne    17cf <_Z30CqU3Cam_SetAnalogGain_FpgaTrigP20libusb_device_handleh+0x89>
    17b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17bb:	ba b0 04 00 00       	mov    $0x4b0,%edx
    17c0:	be b0 30 00 00       	mov    $0x30b0,%esi
    17c5:	48 89 c7             	mov    %rax,%rdi
    17c8:	e8 63 f9 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    17cd:	eb 00                	jmp    17cf <_Z30CqU3Cam_SetAnalogGain_FpgaTrigP20libusb_device_handleh+0x89>
    17cf:	c9                   	leaveq 
    17d0:	c3                   	retq   

00000000000017d1 <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle>:
    17d1:	55                   	push   %rbp
    17d2:	48 89 e5             	mov    %rsp,%rbp
    17d5:	48 83 ec 20          	sub    $0x20,%rsp
    17d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    17dd:	e8 3e f9 ff ff       	callq  1120 <_Z10cyusb_openv@plt>
    17e2:	89 45 f8             	mov    %eax,-0x8(%rbp)
    17e5:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
    17e9:	79 0a                	jns    17f5 <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle+0x24>
    17eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    17f0:	e9 a7 00 00 00       	jmpq   189c <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle+0xcb>
    17f5:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
    17f9:	75 0f                	jne    180a <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle+0x39>
    17fb:	e8 b0 f9 ff ff       	callq  11b0 <_Z11cyusb_closev@plt>
    1800:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    1805:	e9 92 00 00 00       	jmpq   189c <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle+0xcb>
    180a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1811:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1815:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    181c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    181f:	89 c7                	mov    %eax,%edi
    1821:	e8 4a f9 ff ff       	callq  1170 <_Z15cyusb_gethandlei@plt>
    1826:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    182a:	48 89 02             	mov    %rax,(%rdx)
    182d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1831:	48 8b 00             	mov    (%rax),%rax
    1834:	48 85 c0             	test   %rax,%rax
    1837:	75 0c                	jne    1845 <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle+0x74>
    1839:	e8 72 f9 ff ff       	callq  11b0 <_Z11cyusb_closev@plt>
    183e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    1843:	eb 57                	jmp    189c <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle+0xcb>
    1845:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1849:	48 8b 00             	mov    (%rax),%rax
    184c:	be 00 00 00 00       	mov    $0x0,%esi
    1851:	48 89 c7             	mov    %rax,%rdi
    1854:	e8 77 f9 ff ff       	callq  11d0 <_Z26cyusb_kernel_driver_activeP20libusb_device_handlei@plt>
    1859:	89 45 f8             	mov    %eax,-0x8(%rbp)
    185c:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
    1860:	74 0c                	je     186e <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle+0x9d>
    1862:	e8 49 f9 ff ff       	callq  11b0 <_Z11cyusb_closev@plt>
    1867:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    186c:	eb 2e                	jmp    189c <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle+0xcb>
    186e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1872:	48 8b 00             	mov    (%rax),%rax
    1875:	be 00 00 00 00       	mov    $0x0,%esi
    187a:	48 89 c7             	mov    %rax,%rdi
    187d:	e8 5e f9 ff ff       	callq  11e0 <_Z21cyusb_claim_interfaceP20libusb_device_handlei@plt>
    1882:	89 45 f8             	mov    %eax,-0x8(%rbp)
    1885:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
    1889:	74 0c                	je     1897 <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle+0xc6>
    188b:	e8 20 f9 ff ff       	callq  11b0 <_Z11cyusb_closev@plt>
    1890:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    1895:	eb 05                	jmp    189c <_Z15CqU3Cam_OpenUSBPP20libusb_device_handle+0xcb>
    1897:	b8 00 00 00 00       	mov    $0x0,%eax
    189c:	c9                   	leaveq 
    189d:	c3                   	retq   

000000000000189e <_Z16CqU3Cam_CloseUSBP20libusb_device_handle>:
    189e:	55                   	push   %rbp
    189f:	48 89 e5             	mov    %rsp,%rbp
    18a2:	48 83 ec 20          	sub    $0x20,%rsp
    18a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    18aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    18ae:	be 00 00 00 00       	mov    $0x0,%esi
    18b3:	48 89 c7             	mov    %rax,%rdi
    18b6:	e8 35 f9 ff ff       	callq  11f0 <_Z23cyusb_release_interfaceP20libusb_device_handlei@plt>
    18bb:	89 45 fc             	mov    %eax,-0x4(%rbp)
    18be:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    18c2:	74 07                	je     18cb <_Z16CqU3Cam_CloseUSBP20libusb_device_handle+0x2d>
    18c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    18c9:	eb 0a                	jmp    18d5 <_Z16CqU3Cam_CloseUSBP20libusb_device_handle+0x37>
    18cb:	e8 e0 f8 ff ff       	callq  11b0 <_Z11cyusb_closev@plt>
    18d0:	b8 00 00 00 00       	mov    $0x0,%eax
    18d5:	c9                   	leaveq 
    18d6:	c3                   	retq   

00000000000018d7 <_Z18CqU3Cam_CheckSpeedP20libusb_device_handlePj>:
    18d7:	55                   	push   %rbp
    18d8:	48 89 e5             	mov    %rsp,%rbp
    18db:	48 83 ec 20          	sub    $0x20,%rsp
    18df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    18e3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    18e7:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    18ee:	00 
    18ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    18f3:	48 89 c7             	mov    %rax,%rdi
    18f6:	e8 c5 f8 ff ff       	callq  11c0 <libusb_get_device@plt>
    18fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    18ff:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1904:	75 07                	jne    190d <_Z18CqU3Cam_CheckSpeedP20libusb_device_handlePj+0x36>
    1906:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    190b:	eb 19                	jmp    1926 <_Z18CqU3Cam_CheckSpeedP20libusb_device_handlePj+0x4f>
    190d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1911:	48 89 c7             	mov    %rax,%rdi
    1914:	e8 77 f8 ff ff       	callq  1190 <libusb_get_device_speed@plt>
    1919:	89 c2                	mov    %eax,%edx
    191b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    191f:	89 10                	mov    %edx,(%rax)
    1921:	b8 00 00 00 00       	mov    $0x0,%eax
    1926:	c9                   	leaveq 
    1927:	c3                   	retq   

0000000000001928 <_Z23CqU3Cam_SetAutoTrigModeP20libusb_device_handle>:
    1928:	55                   	push   %rbp
    1929:	48 89 e5             	mov    %rsp,%rbp
    192c:	48 83 ec 10          	sub    $0x10,%rsp
    1930:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1938:	ba 80 00 00 00       	mov    $0x80,%edx
    193d:	be b0 30 00 00       	mov    $0x30b0,%esi
    1942:	48 89 c7             	mov    %rax,%rdi
    1945:	e8 e6 f7 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    194a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    194e:	ba dc 10 00 00       	mov    $0x10dc,%edx
    1953:	be 1a 30 00 00       	mov    $0x301a,%esi
    1958:	48 89 c7             	mov    %rax,%rdi
    195b:	e8 d0 f7 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1964:	ba 00 00 00 00       	mov    $0x0,%edx
    1969:	be 00 00 00 00       	mov    $0x0,%esi
    196e:	48 89 c7             	mov    %rax,%rdi
    1971:	e8 2a f8 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1976:	b8 00 00 00 00       	mov    $0x0,%eax
    197b:	c9                   	leaveq 
    197c:	c3                   	retq   

000000000000197d <_Z23CqU3Cam_SetFpgaTrigModeP20libusb_device_handleh>:
    197d:	55                   	push   %rbp
    197e:	48 89 e5             	mov    %rsp,%rbp
    1981:	48 83 ec 10          	sub    $0x10,%rsp
    1985:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1989:	89 f0                	mov    %esi,%eax
    198b:	88 45 f4             	mov    %al,-0xc(%rbp)
    198e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1992:	ba 80 04 00 00       	mov    $0x480,%edx
    1997:	be b0 30 00 00       	mov    $0x30b0,%esi
    199c:	48 89 c7             	mov    %rax,%rdi
    199f:	e8 8c f7 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    19a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19a8:	ba d8 19 00 00       	mov    $0x19d8,%edx
    19ad:	be 1a 30 00 00       	mov    $0x301a,%esi
    19b2:	48 89 c7             	mov    %rax,%rdi
    19b5:	e8 76 f7 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    19ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19be:	ba 01 00 00 00       	mov    $0x1,%edx
    19c3:	be 00 00 00 00       	mov    $0x0,%esi
    19c8:	48 89 c7             	mov    %rax,%rdi
    19cb:	e8 d0 f7 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    19d0:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
    19d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19d8:	be 05 00 00 00       	mov    $0x5,%esi
    19dd:	48 89 c7             	mov    %rax,%rdi
    19e0:	e8 bb f7 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    19e5:	b8 00 00 00 00       	mov    $0x0,%eax
    19ea:	c9                   	leaveq 
    19eb:	c3                   	retq   

00000000000019ec <_Z19CqU3Cam_SetFpgaFreqP20libusb_device_handleh>:
    19ec:	55                   	push   %rbp
    19ed:	48 89 e5             	mov    %rsp,%rbp
    19f0:	48 83 ec 10          	sub    $0x10,%rsp
    19f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19f8:	89 f0                	mov    %esi,%eax
    19fa:	88 45 f4             	mov    %al,-0xc(%rbp)
    19fd:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
    1a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a05:	be 05 00 00 00       	mov    $0x5,%esi
    1a0a:	48 89 c7             	mov    %rax,%rdi
    1a0d:	e8 8e f7 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1a12:	b8 00 00 00 00       	mov    $0x0,%eax
    1a17:	c9                   	leaveq 
    1a18:	c3                   	retq   

0000000000001a19 <_Z20CqU3Cam_SetExpoValueP20libusb_device_handlet>:
    1a19:	55                   	push   %rbp
    1a1a:	48 89 e5             	mov    %rsp,%rbp
    1a1d:	48 83 ec 10          	sub    $0x10,%rsp
    1a21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a25:	89 f0                	mov    %esi,%eax
    1a27:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
    1a2b:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
    1a2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a33:	be 12 30 00 00       	mov    $0x3012,%esi
    1a38:	48 89 c7             	mov    %rax,%rdi
    1a3b:	e8 f0 f6 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1a40:	b8 00 00 00 00       	mov    $0x0,%eax
    1a45:	c9                   	leaveq 
    1a46:	c3                   	retq   

0000000000001a47 <_Z20CqU3Cam_SetGainValueP20libusb_device_handlet>:
    1a47:	55                   	push   %rbp
    1a48:	48 89 e5             	mov    %rsp,%rbp
    1a4b:	48 83 ec 10          	sub    $0x10,%rsp
    1a4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a53:	89 f0                	mov    %esi,%eax
    1a55:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
    1a59:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
    1a5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a61:	be 5e 30 00 00       	mov    $0x305e,%esi
    1a66:	48 89 c7             	mov    %rax,%rdi
    1a69:	e8 c2 f6 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1a6e:	b8 00 00 00 00       	mov    $0x0,%eax
    1a73:	c9                   	leaveq 
    1a74:	c3                   	retq   

0000000000001a75 <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb>:
    1a75:	55                   	push   %rbp
    1a76:	48 89 e5             	mov    %rsp,%rbp
    1a79:	48 83 ec 10          	sub    $0x10,%rsp
    1a7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a81:	89 f1                	mov    %esi,%ecx
    1a83:	89 d0                	mov    %edx,%eax
    1a85:	88 4d f4             	mov    %cl,-0xc(%rbp)
    1a88:	88 45 f0             	mov    %al,-0x10(%rbp)
    1a8b:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
    1a8f:	74 1e                	je     1aaf <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0x3a>
    1a91:	80 7d f0 00          	cmpb   $0x0,-0x10(%rbp)
    1a95:	74 18                	je     1aaf <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0x3a>
    1a97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a9b:	ba 03 00 00 00       	mov    $0x3,%edx
    1aa0:	be 00 31 00 00       	mov    $0x3100,%esi
    1aa5:	48 89 c7             	mov    %rax,%rdi
    1aa8:	e8 83 f6 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1aad:	eb 7e                	jmp    1b2d <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0xb8>
    1aaf:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
    1ab3:	74 23                	je     1ad8 <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0x63>
    1ab5:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
    1ab9:	83 f0 01             	xor    $0x1,%eax
    1abc:	84 c0                	test   %al,%al
    1abe:	74 18                	je     1ad8 <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0x63>
    1ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ac4:	ba 02 00 00 00       	mov    $0x2,%edx
    1ac9:	be 00 31 00 00       	mov    $0x3100,%esi
    1ace:	48 89 c7             	mov    %rax,%rdi
    1ad1:	e8 5a f6 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1ad6:	eb 55                	jmp    1b2d <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0xb8>
    1ad8:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
    1adc:	83 f0 01             	xor    $0x1,%eax
    1adf:	84 c0                	test   %al,%al
    1ae1:	74 1e                	je     1b01 <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0x8c>
    1ae3:	80 7d f0 00          	cmpb   $0x0,-0x10(%rbp)
    1ae7:	74 18                	je     1b01 <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0x8c>
    1ae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1aed:	ba 01 00 00 00       	mov    $0x1,%edx
    1af2:	be 00 31 00 00       	mov    $0x3100,%esi
    1af7:	48 89 c7             	mov    %rax,%rdi
    1afa:	e8 31 f6 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1aff:	eb 2c                	jmp    1b2d <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0xb8>
    1b01:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
    1b05:	83 f0 01             	xor    $0x1,%eax
    1b08:	84 c0                	test   %al,%al
    1b0a:	74 21                	je     1b2d <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0xb8>
    1b0c:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
    1b10:	83 f0 01             	xor    $0x1,%eax
    1b13:	84 c0                	test   %al,%al
    1b15:	74 16                	je     1b2d <_Z23CqU3Cam_SetAutoGainExpoP20libusb_device_handlebb+0xb8>
    1b17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b1b:	ba 00 00 00 00       	mov    $0x0,%edx
    1b20:	be 00 31 00 00       	mov    $0x3100,%esi
    1b25:	48 89 c7             	mov    %rax,%rdi
    1b28:	e8 03 f6 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1b2d:	b8 00 00 00 00       	mov    $0x0,%eax
    1b32:	c9                   	leaveq 
    1b33:	c3                   	retq   

0000000000001b34 <_Z23CqU3Cam_Resolu_1280x720P20libusb_device_handle>:
    1b34:	55                   	push   %rbp
    1b35:	48 89 e5             	mov    %rsp,%rbp
    1b38:	48 83 ec 10          	sub    $0x10,%rsp
    1b3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1b40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b44:	ba 20 00 00 00       	mov    $0x20,%edx
    1b49:	be 30 30 00 00       	mov    $0x3030,%esi
    1b4e:	48 89 c7             	mov    %rax,%rdi
    1b51:	e8 da f5 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1b56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b5a:	ba 7c 00 00 00       	mov    $0x7c,%edx
    1b5f:	be 02 30 00 00       	mov    $0x3002,%esi
    1b64:	48 89 c7             	mov    %rax,%rdi
    1b67:	e8 c4 f5 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1b6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b70:	ba 02 00 00 00       	mov    $0x2,%edx
    1b75:	be 04 30 00 00       	mov    $0x3004,%esi
    1b7a:	48 89 c7             	mov    %rax,%rdi
    1b7d:	e8 ae f5 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b86:	ba 4b 03 00 00       	mov    $0x34b,%edx
    1b8b:	be 06 30 00 00       	mov    $0x3006,%esi
    1b90:	48 89 c7             	mov    %rax,%rdi
    1b93:	e8 98 f5 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b9c:	ba 01 05 00 00       	mov    $0x501,%edx
    1ba1:	be 08 30 00 00       	mov    $0x3008,%esi
    1ba6:	48 89 c7             	mov    %rax,%rdi
    1ba9:	e8 82 f5 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1bae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1bb2:	ba fd 02 00 00       	mov    $0x2fd,%edx
    1bb7:	be 0a 30 00 00       	mov    $0x300a,%esi
    1bbc:	48 89 c7             	mov    %rax,%rdi
    1bbf:	e8 6c f5 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1bc8:	ba 6c 05 00 00       	mov    $0x56c,%edx
    1bcd:	be 0c 30 00 00       	mov    $0x300c,%esi
    1bd2:	48 89 c7             	mov    %rax,%rdi
    1bd5:	e8 56 f5 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1bde:	ba 01 00 00 00       	mov    $0x1,%edx
    1be3:	be a6 30 00 00       	mov    $0x30a6,%esi
    1be8:	48 89 c7             	mov    %rax,%rdi
    1beb:	e8 40 f5 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1bf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1bf4:	ba 00 00 00 00       	mov    $0x0,%edx
    1bf9:	be 32 30 00 00       	mov    $0x3032,%esi
    1bfe:	48 89 c7             	mov    %rax,%rdi
    1c01:	e8 2a f5 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1c0a:	ba 05 00 00 00       	mov    $0x5,%edx
    1c0f:	be 01 00 00 00       	mov    $0x1,%esi
    1c14:	48 89 c7             	mov    %rax,%rdi
    1c17:	e8 84 f5 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1c20:	ba 00 00 00 00       	mov    $0x0,%edx
    1c25:	be 02 00 00 00       	mov    $0x2,%esi
    1c2a:	48 89 c7             	mov    %rax,%rdi
    1c2d:	e8 6e f5 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1c32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1c36:	ba 02 00 00 00       	mov    $0x2,%edx
    1c3b:	be 03 00 00 00       	mov    $0x3,%esi
    1c40:	48 89 c7             	mov    %rax,%rdi
    1c43:	e8 58 f5 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1c48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1c4c:	ba d0 00 00 00       	mov    $0xd0,%edx
    1c51:	be 04 00 00 00       	mov    $0x4,%esi
    1c56:	48 89 c7             	mov    %rax,%rdi
    1c59:	e8 42 f5 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1c5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1c62:	ba 00 00 00 00       	mov    $0x0,%edx
    1c67:	be 06 00 00 00       	mov    $0x6,%esi
    1c6c:	48 89 c7             	mov    %rax,%rdi
    1c6f:	e8 2c f5 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1c74:	b8 00 00 00 00       	mov    $0x0,%eax
    1c79:	c9                   	leaveq 
    1c7a:	c3                   	retq   

0000000000001c7b <_Z23CqU3Cam_Resolu_1280x960P20libusb_device_handle>:
    1c7b:	55                   	push   %rbp
    1c7c:	48 89 e5             	mov    %rsp,%rbp
    1c7f:	48 83 ec 10          	sub    $0x10,%rsp
    1c83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1c87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1c8b:	ba 20 00 00 00       	mov    $0x20,%edx
    1c90:	be 30 30 00 00       	mov    $0x3030,%esi
    1c95:	48 89 c7             	mov    %rax,%rdi
    1c98:	e8 93 f4 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1c9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ca1:	ba 04 00 00 00       	mov    $0x4,%edx
    1ca6:	be 02 30 00 00       	mov    $0x3002,%esi
    1cab:	48 89 c7             	mov    %rax,%rdi
    1cae:	e8 7d f4 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1cb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1cb7:	ba 02 00 00 00       	mov    $0x2,%edx
    1cbc:	be 04 30 00 00       	mov    $0x3004,%esi
    1cc1:	48 89 c7             	mov    %rax,%rdi
    1cc4:	e8 67 f4 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ccd:	ba c3 03 00 00       	mov    $0x3c3,%edx
    1cd2:	be 06 30 00 00       	mov    $0x3006,%esi
    1cd7:	48 89 c7             	mov    %rax,%rdi
    1cda:	e8 51 f4 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1cdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ce3:	ba 01 05 00 00       	mov    $0x501,%edx
    1ce8:	be 08 30 00 00       	mov    $0x3008,%esi
    1ced:	48 89 c7             	mov    %rax,%rdi
    1cf0:	e8 3b f4 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1cf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1cf9:	ba fd 03 00 00       	mov    $0x3fd,%edx
    1cfe:	be 0a 30 00 00       	mov    $0x300a,%esi
    1d03:	48 89 c7             	mov    %rax,%rdi
    1d06:	e8 25 f4 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1d0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d0f:	ba 6c 05 00 00       	mov    $0x56c,%edx
    1d14:	be 0c 30 00 00       	mov    $0x300c,%esi
    1d19:	48 89 c7             	mov    %rax,%rdi
    1d1c:	e8 0f f4 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1d21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d25:	ba 01 00 00 00       	mov    $0x1,%edx
    1d2a:	be a6 30 00 00       	mov    $0x30a6,%esi
    1d2f:	48 89 c7             	mov    %rax,%rdi
    1d32:	e8 f9 f3 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1d37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d3b:	ba 00 00 00 00       	mov    $0x0,%edx
    1d40:	be 32 30 00 00       	mov    $0x3032,%esi
    1d45:	48 89 c7             	mov    %rax,%rdi
    1d48:	e8 e3 f3 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1d4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d51:	ba 05 00 00 00       	mov    $0x5,%edx
    1d56:	be 01 00 00 00       	mov    $0x1,%esi
    1d5b:	48 89 c7             	mov    %rax,%rdi
    1d5e:	e8 3d f4 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1d63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d67:	ba 00 00 00 00       	mov    $0x0,%edx
    1d6c:	be 02 00 00 00       	mov    $0x2,%esi
    1d71:	48 89 c7             	mov    %rax,%rdi
    1d74:	e8 27 f4 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1d79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d7d:	ba 03 00 00 00       	mov    $0x3,%edx
    1d82:	be 03 00 00 00       	mov    $0x3,%esi
    1d87:	48 89 c7             	mov    %rax,%rdi
    1d8a:	e8 11 f4 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1d8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d93:	ba c0 00 00 00       	mov    $0xc0,%edx
    1d98:	be 04 00 00 00       	mov    $0x4,%esi
    1d9d:	48 89 c7             	mov    %rax,%rdi
    1da0:	e8 fb f3 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1da9:	ba 00 00 00 00       	mov    $0x0,%edx
    1dae:	be 06 00 00 00       	mov    $0x6,%esi
    1db3:	48 89 c7             	mov    %rax,%rdi
    1db6:	e8 e5 f3 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1dbb:	b8 00 00 00 00       	mov    $0x0,%eax
    1dc0:	c9                   	leaveq 
    1dc1:	c3                   	retq   

0000000000001dc2 <_Z26CqU3Cam_Resolu_640x480SkipP20libusb_device_handle>:
    1dc2:	55                   	push   %rbp
    1dc3:	48 89 e5             	mov    %rsp,%rbp
    1dc6:	48 83 ec 10          	sub    $0x10,%rsp
    1dca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1dce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1dd2:	ba 2a 00 00 00       	mov    $0x2a,%edx
    1dd7:	be 30 30 00 00       	mov    $0x3030,%esi
    1ddc:	48 89 c7             	mov    %rax,%rdi
    1ddf:	e8 4c f3 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1de4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1de8:	ba 04 00 00 00       	mov    $0x4,%edx
    1ded:	be 02 30 00 00       	mov    $0x3002,%esi
    1df2:	48 89 c7             	mov    %rax,%rdi
    1df5:	e8 36 f3 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1dfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1dfe:	ba 02 00 00 00       	mov    $0x2,%edx
    1e03:	be 04 30 00 00       	mov    $0x3004,%esi
    1e08:	48 89 c7             	mov    %rax,%rdi
    1e0b:	e8 20 f3 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1e10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1e14:	ba c3 03 00 00       	mov    $0x3c3,%edx
    1e19:	be 06 30 00 00       	mov    $0x3006,%esi
    1e1e:	48 89 c7             	mov    %rax,%rdi
    1e21:	e8 0a f3 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1e2a:	ba 01 05 00 00       	mov    $0x501,%edx
    1e2f:	be 08 30 00 00       	mov    $0x3008,%esi
    1e34:	48 89 c7             	mov    %rax,%rdi
    1e37:	e8 f4 f2 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1e3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1e40:	ba fb 01 00 00       	mov    $0x1fb,%edx
    1e45:	be 0a 30 00 00       	mov    $0x300a,%esi
    1e4a:	48 89 c7             	mov    %rax,%rdi
    1e4d:	e8 de f2 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1e56:	ba 6c 05 00 00       	mov    $0x56c,%edx
    1e5b:	be 0c 30 00 00       	mov    $0x300c,%esi
    1e60:	48 89 c7             	mov    %rax,%rdi
    1e63:	e8 c8 f2 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1e68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1e6c:	ba 03 00 00 00       	mov    $0x3,%edx
    1e71:	be a6 30 00 00       	mov    $0x30a6,%esi
    1e76:	48 89 c7             	mov    %rax,%rdi
    1e79:	e8 b2 f2 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1e82:	ba 00 00 00 00       	mov    $0x0,%edx
    1e87:	be 32 30 00 00       	mov    $0x3032,%esi
    1e8c:	48 89 c7             	mov    %rax,%rdi
    1e8f:	e8 9c f2 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1e98:	ba 02 00 00 00       	mov    $0x2,%edx
    1e9d:	be 01 00 00 00       	mov    $0x1,%esi
    1ea2:	48 89 c7             	mov    %rax,%rdi
    1ea5:	e8 f6 f2 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1eaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1eae:	ba 80 00 00 00       	mov    $0x80,%edx
    1eb3:	be 02 00 00 00       	mov    $0x2,%esi
    1eb8:	48 89 c7             	mov    %rax,%rdi
    1ebb:	e8 e0 f2 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1ec0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ec4:	ba 01 00 00 00       	mov    $0x1,%edx
    1ec9:	be 03 00 00 00       	mov    $0x3,%esi
    1ece:	48 89 c7             	mov    %rax,%rdi
    1ed1:	e8 ca f2 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1ed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1eda:	ba e0 00 00 00       	mov    $0xe0,%edx
    1edf:	be 04 00 00 00       	mov    $0x4,%esi
    1ee4:	48 89 c7             	mov    %rax,%rdi
    1ee7:	e8 b4 f2 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1eec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ef0:	ba 01 00 00 00       	mov    $0x1,%edx
    1ef5:	be 06 00 00 00       	mov    $0x6,%esi
    1efa:	48 89 c7             	mov    %rax,%rdi
    1efd:	e8 9e f2 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1f02:	b8 00 00 00 00       	mov    $0x0,%eax
    1f07:	c9                   	leaveq 
    1f08:	c3                   	retq   

0000000000001f09 <_Z25CqU3Cam_Resolu_640x480binP20libusb_device_handle>:
    1f09:	55                   	push   %rbp
    1f0a:	48 89 e5             	mov    %rsp,%rbp
    1f0d:	48 83 ec 10          	sub    $0x10,%rsp
    1f11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1f15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1f19:	ba 20 00 00 00       	mov    $0x20,%edx
    1f1e:	be 30 30 00 00       	mov    $0x3030,%esi
    1f23:	48 89 c7             	mov    %rax,%rdi
    1f26:	e8 05 f2 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1f2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1f2f:	ba 04 00 00 00       	mov    $0x4,%edx
    1f34:	be 02 30 00 00       	mov    $0x3002,%esi
    1f39:	48 89 c7             	mov    %rax,%rdi
    1f3c:	e8 ef f1 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1f41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1f45:	ba 02 00 00 00       	mov    $0x2,%edx
    1f4a:	be 04 30 00 00       	mov    $0x3004,%esi
    1f4f:	48 89 c7             	mov    %rax,%rdi
    1f52:	e8 d9 f1 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1f57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1f5b:	ba c3 03 00 00       	mov    $0x3c3,%edx
    1f60:	be 06 30 00 00       	mov    $0x3006,%esi
    1f65:	48 89 c7             	mov    %rax,%rdi
    1f68:	e8 c3 f1 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1f6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1f71:	ba 01 05 00 00       	mov    $0x501,%edx
    1f76:	be 08 30 00 00       	mov    $0x3008,%esi
    1f7b:	48 89 c7             	mov    %rax,%rdi
    1f7e:	e8 ad f1 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1f83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1f87:	ba fb 03 00 00       	mov    $0x3fb,%edx
    1f8c:	be 0a 30 00 00       	mov    $0x300a,%esi
    1f91:	48 89 c7             	mov    %rax,%rdi
    1f94:	e8 97 f1 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1f99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1f9d:	ba 6c 05 00 00       	mov    $0x56c,%edx
    1fa2:	be 0c 30 00 00       	mov    $0x300c,%esi
    1fa7:	48 89 c7             	mov    %rax,%rdi
    1faa:	e8 81 f1 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1faf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1fb3:	ba 01 00 00 00       	mov    $0x1,%edx
    1fb8:	be a6 30 00 00       	mov    $0x30a6,%esi
    1fbd:	48 89 c7             	mov    %rax,%rdi
    1fc0:	e8 6b f1 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1fc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1fc9:	ba 02 00 00 00       	mov    $0x2,%edx
    1fce:	be 32 30 00 00       	mov    $0x3032,%esi
    1fd3:	48 89 c7             	mov    %rax,%rdi
    1fd6:	e8 55 f1 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    1fdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1fdf:	ba 02 00 00 00       	mov    $0x2,%edx
    1fe4:	be 01 00 00 00       	mov    $0x1,%esi
    1fe9:	48 89 c7             	mov    %rax,%rdi
    1fec:	e8 af f1 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    1ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ff5:	ba 80 00 00 00       	mov    $0x80,%edx
    1ffa:	be 02 00 00 00       	mov    $0x2,%esi
    1fff:	48 89 c7             	mov    %rax,%rdi
    2002:	e8 99 f1 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    2007:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    200b:	ba 01 00 00 00       	mov    $0x1,%edx
    2010:	be 03 00 00 00       	mov    $0x3,%esi
    2015:	48 89 c7             	mov    %rax,%rdi
    2018:	e8 83 f1 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    201d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2021:	ba e0 00 00 00       	mov    $0xe0,%edx
    2026:	be 04 00 00 00       	mov    $0x4,%esi
    202b:	48 89 c7             	mov    %rax,%rdi
    202e:	e8 6d f1 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    2033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2037:	ba 00 00 00 00       	mov    $0x0,%edx
    203c:	be 06 00 00 00       	mov    $0x6,%esi
    2041:	48 89 c7             	mov    %rax,%rdi
    2044:	e8 57 f1 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    2049:	b8 00 00 00 00       	mov    $0x0,%eax
    204e:	c9                   	leaveq 
    204f:	c3                   	retq   

0000000000002050 <_Z19CqU3Cam_SetProcTypeP20libusb_device_handleh>:
    2050:	55                   	push   %rbp
    2051:	48 89 e5             	mov    %rsp,%rbp
    2054:	48 83 ec 10          	sub    $0x10,%rsp
    2058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    205c:	89 f0                	mov    %esi,%eax
    205e:	88 45 f4             	mov    %al,-0xc(%rbp)
    2061:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
    2065:	75 18                	jne    207f <_Z19CqU3Cam_SetProcTypeP20libusb_device_handleh+0x2f>
    2067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    206b:	ba 00 00 00 00       	mov    $0x0,%edx
    2070:	be 40 30 00 00       	mov    $0x3040,%esi
    2075:	48 89 c7             	mov    %rax,%rdi
    2078:	e8 b3 f0 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    207d:	eb 58                	jmp    20d7 <_Z19CqU3Cam_SetProcTypeP20libusb_device_handleh+0x87>
    207f:	80 7d f4 01          	cmpb   $0x1,-0xc(%rbp)
    2083:	75 18                	jne    209d <_Z19CqU3Cam_SetProcTypeP20libusb_device_handleh+0x4d>
    2085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2089:	ba 00 40 00 00       	mov    $0x4000,%edx
    208e:	be 40 30 00 00       	mov    $0x3040,%esi
    2093:	48 89 c7             	mov    %rax,%rdi
    2096:	e8 95 f0 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    209b:	eb 3a                	jmp    20d7 <_Z19CqU3Cam_SetProcTypeP20libusb_device_handleh+0x87>
    209d:	80 7d f4 02          	cmpb   $0x2,-0xc(%rbp)
    20a1:	75 18                	jne    20bb <_Z19CqU3Cam_SetProcTypeP20libusb_device_handleh+0x6b>
    20a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    20a7:	ba 00 80 00 00       	mov    $0x8000,%edx
    20ac:	be 40 30 00 00       	mov    $0x3040,%esi
    20b1:	48 89 c7             	mov    %rax,%rdi
    20b4:	e8 77 f0 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    20b9:	eb 1c                	jmp    20d7 <_Z19CqU3Cam_SetProcTypeP20libusb_device_handleh+0x87>
    20bb:	80 7d f4 03          	cmpb   $0x3,-0xc(%rbp)
    20bf:	75 16                	jne    20d7 <_Z19CqU3Cam_SetProcTypeP20libusb_device_handleh+0x87>
    20c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    20c5:	ba 00 c0 00 00       	mov    $0xc000,%edx
    20ca:	be 40 30 00 00       	mov    $0x3040,%esi
    20cf:	48 89 c7             	mov    %rax,%rdi
    20d2:	e8 59 f0 ff ff       	callq  1130 <_Z19CqU3Cam_WrSensorRegP20libusb_device_handlett@plt>
    20d7:	b8 00 00 00 00       	mov    $0x0,%eax
    20dc:	c9                   	leaveq 
    20dd:	c3                   	retq   

00000000000020de <_Z19CqU3Cam_SetBitDepthP20libusb_device_handleh>:
    20de:	55                   	push   %rbp
    20df:	48 89 e5             	mov    %rsp,%rbp
    20e2:	48 83 ec 10          	sub    $0x10,%rsp
    20e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    20ea:	89 f0                	mov    %esi,%eax
    20ec:	88 45 f4             	mov    %al,-0xc(%rbp)
    20ef:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
    20f3:	75 18                	jne    210d <_Z19CqU3Cam_SetBitDepthP20libusb_device_handleh+0x2f>
    20f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    20f9:	ba 00 00 00 00       	mov    $0x0,%edx
    20fe:	be 07 00 00 00       	mov    $0x7,%esi
    2103:	48 89 c7             	mov    %rax,%rdi
    2106:	e8 95 f0 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    210b:	eb 3a                	jmp    2147 <_Z19CqU3Cam_SetBitDepthP20libusb_device_handleh+0x69>
    210d:	80 7d f4 01          	cmpb   $0x1,-0xc(%rbp)
    2111:	75 18                	jne    212b <_Z19CqU3Cam_SetBitDepthP20libusb_device_handleh+0x4d>
    2113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2117:	ba 01 00 00 00       	mov    $0x1,%edx
    211c:	be 07 00 00 00       	mov    $0x7,%esi
    2121:	48 89 c7             	mov    %rax,%rdi
    2124:	e8 77 f0 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    2129:	eb 1c                	jmp    2147 <_Z19CqU3Cam_SetBitDepthP20libusb_device_handleh+0x69>
    212b:	80 7d f4 02          	cmpb   $0x2,-0xc(%rbp)
    212f:	75 16                	jne    2147 <_Z19CqU3Cam_SetBitDepthP20libusb_device_handleh+0x69>
    2131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2135:	ba 02 00 00 00       	mov    $0x2,%edx
    213a:	be 07 00 00 00       	mov    $0x7,%esi
    213f:	48 89 c7             	mov    %rax,%rdi
    2142:	e8 59 f0 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    2147:	b8 00 00 00 00       	mov    $0x0,%eax
    214c:	c9                   	leaveq 
    214d:	c3                   	retq   

000000000000214e <_Z16CqU3Cam_StartCapP20libusb_device_handle>:
    214e:	55                   	push   %rbp
    214f:	48 89 e5             	mov    %rsp,%rbp
    2152:	48 83 ec 10          	sub    $0x10,%rsp
    2156:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    215a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    215e:	ba 00 00 00 00       	mov    $0x0,%edx
    2163:	be 09 00 00 00       	mov    $0x9,%esi
    2168:	48 89 c7             	mov    %rax,%rdi
    216b:	e8 30 f0 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    2170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2174:	ba 01 00 00 00       	mov    $0x1,%edx
    2179:	be 09 00 00 00       	mov    $0x9,%esi
    217e:	48 89 c7             	mov    %rax,%rdi
    2181:	e8 1a f0 ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    2186:	b8 00 00 00 00       	mov    $0x0,%eax
    218b:	c9                   	leaveq 
    218c:	c3                   	retq   

000000000000218d <_Z25CqU3Cam_SendUsbSpeed2FpgaP20libusb_device_handleh>:
    218d:	55                   	push   %rbp
    218e:	48 89 e5             	mov    %rsp,%rbp
    2191:	48 83 ec 10          	sub    $0x10,%rsp
    2195:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2199:	89 f0                	mov    %esi,%eax
    219b:	88 45 f4             	mov    %al,-0xc(%rbp)
    219e:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
    21a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    21a6:	be 08 00 00 00       	mov    $0x8,%esi
    21ab:	48 89 c7             	mov    %rax,%rdi
    21ae:	e8 ed ef ff ff       	callq  11a0 <_Z17CqU3Cam_WrFpgaRegP20libusb_device_handlehh@plt>
    21b3:	b8 00 00 00 00       	mov    $0x0,%eax
    21b8:	c9                   	leaveq 
    21b9:	c3                   	retq   

Disassembly of section .fini:

00000000000021bc <_fini>:
    21bc:	48 83 ec 08          	sub    $0x8,%rsp
    21c0:	48 83 c4 08          	add    $0x8,%rsp
    21c4:	c3                   	retq   

Disassembly of section .eh_frame_hdr:

00000000000021c8 <.eh_frame_hdr>:
    21c8:	01 1b                	add    %ebx,(%rbx)
    21ca:	03 3b                	add    (%rbx),%edi
    21cc:	d4                   	(bad)  
    21cd:	00 00                	add    %al,(%rax)
    21cf:	00 19                	add    %bl,(%rcx)
    21d1:	00 00                	add    %al,(%rax)
    21d3:	00 48 ef             	add    %cl,-0x11(%rax)
    21d6:	ff                   	(bad)  
    21d7:	ff f0                	push   %rax
    21d9:	00 00                	add    %al,(%rax)
    21db:	00 2d f1 ff ff 18    	add    %ch,0x18fffff1(%rip)        # 190021d2 <_end+0x18dff132>
    21e1:	01 00                	add    %eax,(%rax)
    21e3:	00 bb f1 ff ff 40    	add    %bh,0x40fffff1(%rbx)
    21e9:	01 00                	add    %eax,(%rax)
    21eb:	00 0b                	add    %cl,(%rbx)
    21ed:	f2 ff                	repnz (bad) 
    21ef:	ff 60 01             	jmpq   *0x1(%rax)
    21f2:	00 00                	add    %al,(%rax)
    21f4:	97                   	xchg   %eax,%edi
    21f5:	f2 ff                	repnz (bad) 
    21f7:	ff 88 01 00 00 e6    	decl   -0x19ffffff(%rax)
    21fd:	f2 ff                	repnz (bad) 
    21ff:	ff a8 01 00 00 f3    	ljmpq  *-0xcffffff(%rax)
    2205:	f4                   	hlt    
    2206:	ff                   	(bad)  
    2207:	ff c8                	dec    %eax
    2209:	01 00                	add    %eax,(%rax)
    220b:	00 7e f5             	add    %bh,-0xb(%rsi)
    220e:	ff                   	(bad)  
    220f:	ff                   	(bad)  
    2210:	e8 01 00 00 09       	callq  9002216 <_end+0x8dff176>
    2215:	f6 ff                	idiv   %bh
    2217:	ff 08                	decl   (%rax)
    2219:	02 00                	add    (%rax),%al
    221b:	00 d6                	add    %dl,%dh
    221d:	f6 ff                	idiv   %bh
    221f:	ff 28                	ljmpq  *(%rax)
    2221:	02 00                	add    (%rax),%al
    2223:	00 0f                	add    %cl,(%rdi)
    2225:	f7 ff                	idiv   %edi
    2227:	ff 48 02             	decl   0x2(%rax)
    222a:	00 00                	add    %al,(%rax)
    222c:	60                   	(bad)  
    222d:	f7 ff                	idiv   %edi
    222f:	ff 68 02             	ljmpq  *0x2(%rax)
    2232:	00 00                	add    %al,(%rax)
    2234:	b5 f7                	mov    $0xf7,%ch
    2236:	ff                   	(bad)  
    2237:	ff 88 02 00 00 24    	decl   0x24000002(%rax)
    223d:	f8                   	clc    
    223e:	ff                   	(bad)  
    223f:	ff a8 02 00 00 51    	ljmpq  *0x51000002(%rax)
    2245:	f8                   	clc    
    2246:	ff                   	(bad)  
    2247:	ff c8                	dec    %eax
    2249:	02 00                	add    (%rax),%al
    224b:	00 7f f8             	add    %bh,-0x8(%rdi)
    224e:	ff                   	(bad)  
    224f:	ff                   	(bad)  
    2250:	e8 02 00 00 ad       	callq  ffffffffad002257 <_end+0xffffffffacdff1b7>
    2255:	f8                   	clc    
    2256:	ff                   	(bad)  
    2257:	ff 08                	decl   (%rax)
    2259:	03 00                	add    (%rax),%eax
    225b:	00 6c f9 ff          	add    %ch,-0x1(%rcx,%rdi,8)
    225f:	ff 28                	ljmpq  *(%rax)
    2261:	03 00                	add    (%rax),%eax
    2263:	00 b3 fa ff ff 48    	add    %dh,0x48fffffa(%rbx)
    2269:	03 00                	add    (%rax),%eax
    226b:	00 fa                	add    %bh,%dl
    226d:	fb                   	sti    
    226e:	ff                   	(bad)  
    226f:	ff 68 03             	ljmpq  *0x3(%rax)
    2272:	00 00                	add    %al,(%rax)
    2274:	41 fd                	rex.B std 
    2276:	ff                   	(bad)  
    2277:	ff 88 03 00 00 88    	decl   -0x77fffffd(%rax)
    227d:	fe                   	(bad)  
    227e:	ff                   	(bad)  
    227f:	ff a8 03 00 00 16    	ljmpq  *0x16000003(%rax)
    2285:	ff                   	(bad)  
    2286:	ff                   	(bad)  
    2287:	ff c8                	dec    %eax
    2289:	03 00                	add    (%rax),%eax
    228b:	00 86 ff ff ff e8    	add    %al,-0x17000001(%rsi)
    2291:	03 00                	add    (%rax),%eax
    2293:	00 c5                	add    %al,%ch
    2295:	ff                   	(bad)  
    2296:	ff                   	(bad)  
    2297:	ff 08                	decl   (%rax)
    2299:	04 00                	add    $0x0,%al
	...

Disassembly of section .eh_frame:

00000000000022a0 <__FRAME_END__-0x350>:
    22a0:	14 00                	adc    $0x0,%al
    22a2:	00 00                	add    %al,(%rax)
    22a4:	00 00                	add    %al,(%rax)
    22a6:	00 00                	add    %al,(%rax)
    22a8:	01 7a 52             	add    %edi,0x52(%rdx)
    22ab:	00 01                	add    %al,(%rcx)
    22ad:	78 10                	js     22bf <_fini+0x103>
    22af:	01 1b                	add    %ebx,(%rbx)
    22b1:	0c 07                	or     $0x7,%al
    22b3:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    22b9:	00 00                	add    %al,(%rax)
    22bb:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22be:	00 00                	add    %al,(%rax)
    22c0:	50                   	push   %rax
    22c1:	ee                   	out    %al,(%dx)
    22c2:	ff                   	(bad)  
    22c3:	ff 00                	incl   (%rax)
    22c5:	01 00                	add    %eax,(%rax)
    22c7:	00 00                	add    %al,(%rax)
    22c9:	0e                   	(bad)  
    22ca:	10 46 0e             	adc    %al,0xe(%rsi)
    22cd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    22d0:	0b 77 08             	or     0x8(%rdi),%esi
    22d3:	80 00 3f             	addb   $0x3f,(%rax)
    22d6:	1a 3b                	sbb    (%rbx),%bh
    22d8:	2a 33                	sub    (%rbx),%dh
    22da:	24 22                	and    $0x22,%al
    22dc:	00 00                	add    %al,(%rax)
    22de:	00 00                	add    %al,(%rax)
    22e0:	24 00                	and    $0x0,%al
    22e2:	00 00                	add    %al,(%rax)
    22e4:	44 00 00             	add    %r8b,(%rax)
    22e7:	00 0d f0 ff ff 8e    	add    %cl,-0x71000010(%rip)        # ffffffff8f0022dd <_end+0xffffffff8edff23d>
    22ed:	00 00                	add    %al,(%rax)
    22ef:	00 00                	add    %al,(%rax)
    22f1:	41 0e                	rex.B (bad) 
    22f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22f9:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    22fd:	84 0c 07             	test   %cl,(%rdi,%rax,1)
    2300:	08 00                	or     %al,(%rax)
    2302:	00 00                	add    %al,(%rax)
    2304:	00 00                	add    %al,(%rax)
    2306:	00 00                	add    %al,(%rax)
    2308:	1c 00                	sbb    $0x0,%al
    230a:	00 00                	add    %al,(%rax)
    230c:	6c                   	insb   (%dx),%es:(%rdi)
    230d:	00 00                	add    %al,(%rax)
    230f:	00 73 f0             	add    %dh,-0x10(%rbx)
    2312:	ff                   	(bad)  
    2313:	ff 50 00             	callq  *0x0(%rax)
    2316:	00 00                	add    %al,(%rax)
    2318:	00 41 0e             	add    %al,0xe(%rcx)
    231b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2321:	02 4b 0c             	add    0xc(%rbx),%cl
    2324:	07                   	(bad)  
    2325:	08 00                	or     %al,(%rax)
    2327:	00 24 00             	add    %ah,(%rax,%rax,1)
    232a:	00 00                	add    %al,(%rax)
    232c:	8c 00                	mov    %es,(%rax)
    232e:	00 00                	add    %al,(%rax)
    2330:	a3 f0 ff ff 8c 00 00 	movabs %eax,0x8cfffff0
    2337:	00 00 
    2339:	41 0e                	rex.B (bad) 
    233b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2341:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    2345:	82                   	(bad)  
    2346:	0c 07                	or     $0x7,%al
    2348:	08 00                	or     %al,(%rax)
    234a:	00 00                	add    %al,(%rax)
    234c:	00 00                	add    %al,(%rax)
    234e:	00 00                	add    %al,(%rax)
    2350:	1c 00                	sbb    $0x0,%al
    2352:	00 00                	add    %al,(%rax)
    2354:	b4 00                	mov    $0x0,%ah
    2356:	00 00                	add    %al,(%rax)
    2358:	07                   	(bad)  
    2359:	f1                   	icebp  
    235a:	ff                   	(bad)  
    235b:	ff 4f 00             	decl   0x0(%rdi)
    235e:	00 00                	add    %al,(%rax)
    2360:	00 41 0e             	add    %al,0xe(%rcx)
    2363:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2369:	02 4a 0c             	add    0xc(%rdx),%cl
    236c:	07                   	(bad)  
    236d:	08 00                	or     %al,(%rax)
    236f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2372:	00 00                	add    %al,(%rax)
    2374:	d4                   	(bad)  
    2375:	00 00                	add    %al,(%rax)
    2377:	00 36                	add    %dh,(%rsi)
    2379:	f1                   	icebp  
    237a:	ff                   	(bad)  
    237b:	ff 0d 02 00 00 00    	decl   0x2(%rip)        # 2383 <_fini+0x1c7>
    2381:	41 0e                	rex.B (bad) 
    2383:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2389:	03 08                	add    (%rax),%ecx
    238b:	02 0c 07             	add    (%rdi,%rax,1),%cl
    238e:	08 00                	or     %al,(%rax)
    2390:	1c 00                	sbb    $0x0,%al
    2392:	00 00                	add    %al,(%rax)
    2394:	f4                   	hlt    
    2395:	00 00                	add    %al,(%rax)
    2397:	00 23                	add    %ah,(%rbx)
    2399:	f3 ff                	repz (bad) 
    239b:	ff 8b 00 00 00 00    	decl   0x0(%rbx)
    23a1:	41 0e                	rex.B (bad) 
    23a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23a9:	02 86 0c 07 08 00    	add    0x8070c(%rsi),%al
    23af:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23b2:	00 00                	add    %al,(%rax)
    23b4:	14 01                	adc    $0x1,%al
    23b6:	00 00                	add    %al,(%rax)
    23b8:	8e f3                	mov    %ebx,%?
    23ba:	ff                   	(bad)  
    23bb:	ff 8b 00 00 00 00    	decl   0x0(%rbx)
    23c1:	41 0e                	rex.B (bad) 
    23c3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23c9:	02 86 0c 07 08 00    	add    0x8070c(%rsi),%al
    23cf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23d2:	00 00                	add    %al,(%rax)
    23d4:	34 01                	xor    $0x1,%al
    23d6:	00 00                	add    %al,(%rax)
    23d8:	f9                   	stc    
    23d9:	f3 ff                	repz (bad) 
    23db:	ff cd                	dec    %ebp
    23dd:	00 00                	add    %al,(%rax)
    23df:	00 00                	add    %al,(%rax)
    23e1:	41 0e                	rex.B (bad) 
    23e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23e9:	02 c8                	add    %al,%cl
    23eb:	0c 07                	or     $0x7,%al
    23ed:	08 00                	or     %al,(%rax)
    23ef:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23f2:	00 00                	add    %al,(%rax)
    23f4:	54                   	push   %rsp
    23f5:	01 00                	add    %eax,(%rax)
    23f7:	00 a6 f4 ff ff 39    	add    %ah,0x39fffff4(%rsi)
    23fd:	00 00                	add    %al,(%rax)
    23ff:	00 00                	add    %al,(%rax)
    2401:	41 0e                	rex.B (bad) 
    2403:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2409:	74 0c                	je     2417 <_fini+0x25b>
    240b:	07                   	(bad)  
    240c:	08 00                	or     %al,(%rax)
    240e:	00 00                	add    %al,(%rax)
    2410:	1c 00                	sbb    $0x0,%al
    2412:	00 00                	add    %al,(%rax)
    2414:	74 01                	je     2417 <_fini+0x25b>
    2416:	00 00                	add    %al,(%rax)
    2418:	bf f4 ff ff 51       	mov    $0x51fffff4,%edi
    241d:	00 00                	add    %al,(%rax)
    241f:	00 00                	add    %al,(%rax)
    2421:	41 0e                	rex.B (bad) 
    2423:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2429:	02 4c 0c 07          	add    0x7(%rsp,%rcx,1),%cl
    242d:	08 00                	or     %al,(%rax)
    242f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2432:	00 00                	add    %al,(%rax)
    2434:	94                   	xchg   %eax,%esp
    2435:	01 00                	add    %eax,(%rax)
    2437:	00 f0                	add    %dh,%al
    2439:	f4                   	hlt    
    243a:	ff                   	(bad)  
    243b:	ff 55 00             	callq  *0x0(%rbp)
    243e:	00 00                	add    %al,(%rax)
    2440:	00 41 0e             	add    %al,0xe(%rcx)
    2443:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2449:	02 50 0c             	add    0xc(%rax),%dl
    244c:	07                   	(bad)  
    244d:	08 00                	or     %al,(%rax)
    244f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2452:	00 00                	add    %al,(%rax)
    2454:	b4 01                	mov    $0x1,%ah
    2456:	00 00                	add    %al,(%rax)
    2458:	25 f5 ff ff 6f       	and    $0x6ffffff5,%eax
    245d:	00 00                	add    %al,(%rax)
    245f:	00 00                	add    %al,(%rax)
    2461:	41 0e                	rex.B (bad) 
    2463:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2469:	02 6a 0c             	add    0xc(%rdx),%ch
    246c:	07                   	(bad)  
    246d:	08 00                	or     %al,(%rax)
    246f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2472:	00 00                	add    %al,(%rax)
    2474:	d4                   	(bad)  
    2475:	01 00                	add    %eax,(%rax)
    2477:	00 74 f5 ff          	add    %dh,-0x1(%rbp,%rsi,8)
    247b:	ff 2d 00 00 00 00    	ljmpq  *0x0(%rip)        # 2481 <_fini+0x2c5>
    2481:	41 0e                	rex.B (bad) 
    2483:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2489:	68 0c 07 08 00       	pushq  $0x8070c
    248e:	00 00                	add    %al,(%rax)
    2490:	1c 00                	sbb    $0x0,%al
    2492:	00 00                	add    %al,(%rax)
    2494:	f4                   	hlt    
    2495:	01 00                	add    %eax,(%rax)
    2497:	00 81 f5 ff ff 2e    	add    %al,0x2efffff5(%rcx)
    249d:	00 00                	add    %al,(%rax)
    249f:	00 00                	add    %al,(%rax)
    24a1:	41 0e                	rex.B (bad) 
    24a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    24a9:	69 0c 07 08 00 00 00 	imul   $0x8,(%rdi,%rax,1),%ecx
    24b0:	1c 00                	sbb    $0x0,%al
    24b2:	00 00                	add    %al,(%rax)
    24b4:	14 02                	adc    $0x2,%al
    24b6:	00 00                	add    %al,(%rax)
    24b8:	8f                   	(bad)  
    24b9:	f5                   	cmc    
    24ba:	ff                   	(bad)  
    24bb:	ff 2e                	ljmpq  *(%rsi)
    24bd:	00 00                	add    %al,(%rax)
    24bf:	00 00                	add    %al,(%rax)
    24c1:	41 0e                	rex.B (bad) 
    24c3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    24c9:	69 0c 07 08 00 00 00 	imul   $0x8,(%rdi,%rax,1),%ecx
    24d0:	1c 00                	sbb    $0x0,%al
    24d2:	00 00                	add    %al,(%rax)
    24d4:	34 02                	xor    $0x2,%al
    24d6:	00 00                	add    %al,(%rax)
    24d8:	9d                   	popfq  
    24d9:	f5                   	cmc    
    24da:	ff                   	(bad)  
    24db:	ff                   	(bad)  
    24dc:	bf 00 00 00 00       	mov    $0x0,%edi
    24e1:	41 0e                	rex.B (bad) 
    24e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    24e9:	02 ba 0c 07 08 00    	add    0x8070c(%rdx),%bh
    24ef:	00 1c 00             	add    %bl,(%rax,%rax,1)
    24f2:	00 00                	add    %al,(%rax)
    24f4:	54                   	push   %rsp
    24f5:	02 00                	add    (%rax),%al
    24f7:	00 3c f6             	add    %bh,(%rsi,%rsi,8)
    24fa:	ff                   	(bad)  
    24fb:	ff 47 01             	incl   0x1(%rdi)
    24fe:	00 00                	add    %al,(%rax)
    2500:	00 41 0e             	add    %al,0xe(%rcx)
    2503:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2509:	03 42 01             	add    0x1(%rdx),%eax
    250c:	0c 07                	or     $0x7,%al
    250e:	08 00                	or     %al,(%rax)
    2510:	1c 00                	sbb    $0x0,%al
    2512:	00 00                	add    %al,(%rax)
    2514:	74 02                	je     2518 <_fini+0x35c>
    2516:	00 00                	add    %al,(%rax)
    2518:	63 f7                	movslq %edi,%esi
    251a:	ff                   	(bad)  
    251b:	ff 47 01             	incl   0x1(%rdi)
    251e:	00 00                	add    %al,(%rax)
    2520:	00 41 0e             	add    %al,0xe(%rcx)
    2523:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2529:	03 42 01             	add    0x1(%rdx),%eax
    252c:	0c 07                	or     $0x7,%al
    252e:	08 00                	or     %al,(%rax)
    2530:	1c 00                	sbb    $0x0,%al
    2532:	00 00                	add    %al,(%rax)
    2534:	94                   	xchg   %eax,%esp
    2535:	02 00                	add    (%rax),%al
    2537:	00 8a f8 ff ff 47    	add    %cl,0x47fffff8(%rdx)
    253d:	01 00                	add    %eax,(%rax)
    253f:	00 00                	add    %al,(%rax)
    2541:	41 0e                	rex.B (bad) 
    2543:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2549:	03 42 01             	add    0x1(%rdx),%eax
    254c:	0c 07                	or     $0x7,%al
    254e:	08 00                	or     %al,(%rax)
    2550:	1c 00                	sbb    $0x0,%al
    2552:	00 00                	add    %al,(%rax)
    2554:	b4 02                	mov    $0x2,%ah
    2556:	00 00                	add    %al,(%rax)
    2558:	b1 f9                	mov    $0xf9,%cl
    255a:	ff                   	(bad)  
    255b:	ff 47 01             	incl   0x1(%rdi)
    255e:	00 00                	add    %al,(%rax)
    2560:	00 41 0e             	add    %al,0xe(%rcx)
    2563:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2569:	03 42 01             	add    0x1(%rdx),%eax
    256c:	0c 07                	or     $0x7,%al
    256e:	08 00                	or     %al,(%rax)
    2570:	1c 00                	sbb    $0x0,%al
    2572:	00 00                	add    %al,(%rax)
    2574:	d4                   	(bad)  
    2575:	02 00                	add    (%rax),%al
    2577:	00 d8                	add    %bl,%al
    2579:	fa                   	cli    
    257a:	ff                   	(bad)  
    257b:	ff 8e 00 00 00 00    	decl   0x0(%rsi)
    2581:	41 0e                	rex.B (bad) 
    2583:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2589:	02 89 0c 07 08 00    	add    0x8070c(%rcx),%cl
    258f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2592:	00 00                	add    %al,(%rax)
    2594:	f4                   	hlt    
    2595:	02 00                	add    (%rax),%al
    2597:	00 46 fb             	add    %al,-0x5(%rsi)
    259a:	ff                   	(bad)  
    259b:	ff 70 00             	pushq  0x0(%rax)
    259e:	00 00                	add    %al,(%rax)
    25a0:	00 41 0e             	add    %al,0xe(%rcx)
    25a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    25a9:	02 6b 0c             	add    0xc(%rbx),%ch
    25ac:	07                   	(bad)  
    25ad:	08 00                	or     %al,(%rax)
    25af:	00 1c 00             	add    %bl,(%rax,%rax,1)
    25b2:	00 00                	add    %al,(%rax)
    25b4:	14 03                	adc    $0x3,%al
    25b6:	00 00                	add    %al,(%rax)
    25b8:	96                   	xchg   %eax,%esi
    25b9:	fb                   	sti    
    25ba:	ff                   	(bad)  
    25bb:	ff                   	(bad)  
    25bc:	3f                   	(bad)  
    25bd:	00 00                	add    %al,(%rax)
    25bf:	00 00                	add    %al,(%rax)
    25c1:	41 0e                	rex.B (bad) 
    25c3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    25c9:	7a 0c                	jp     25d7 <_fini+0x41b>
    25cb:	07                   	(bad)  
    25cc:	08 00                	or     %al,(%rax)
    25ce:	00 00                	add    %al,(%rax)
    25d0:	1c 00                	sbb    $0x0,%al
    25d2:	00 00                	add    %al,(%rax)
    25d4:	34 03                	xor    $0x3,%al
    25d6:	00 00                	add    %al,(%rax)
    25d8:	b5 fb                	mov    $0xfb,%ch
    25da:	ff                   	(bad)  
    25db:	ff 2d 00 00 00 00    	ljmpq  *0x0(%rip)        # 25e1 <_fini+0x425>
    25e1:	41 0e                	rex.B (bad) 
    25e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    25e9:	68 0c 07 08 00       	pushq  $0x8070c
	...

00000000000025f0 <__FRAME_END__>:
    25f0:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000202de0 <__frame_dummy_init_array_entry>:
  202de0:	c0 12 00             	rclb   $0x0,(%rdx)
  202de3:	00 00                	add    %al,(%rax)
  202de5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000202de8 <__do_global_dtors_aux_fini_array_entry>:
  202de8:	80 12 00             	adcb   $0x0,(%rdx)
  202deb:	00 00                	add    %al,(%rax)
  202ded:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000202df0 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000202df8 <_DYNAMIC>:
  202df8:	01 00                	add    %eax,(%rax)
  202dfa:	00 00                	add    %al,(%rax)
  202dfc:	00 00                	add    %al,(%rax)
  202dfe:	00 00                	add    %al,(%rax)
  202e00:	9f                   	lahf   
  202e01:	06                   	(bad)  
  202e02:	00 00                	add    %al,(%rax)
  202e04:	00 00                	add    %al,(%rax)
  202e06:	00 00                	add    %al,(%rax)
  202e08:	01 00                	add    %eax,(%rax)
  202e0a:	00 00                	add    %al,(%rax)
  202e0c:	00 00                	add    %al,(%rax)
  202e0e:	00 00                	add    %al,(%rax)
  202e10:	af                   	scas   %es:(%rdi),%eax
  202e11:	06                   	(bad)  
  202e12:	00 00                	add    %al,(%rax)
  202e14:	00 00                	add    %al,(%rax)
  202e16:	00 00                	add    %al,(%rax)
  202e18:	01 00                	add    %eax,(%rax)
  202e1a:	00 00                	add    %al,(%rax)
  202e1c:	00 00                	add    %al,(%rax)
  202e1e:	00 00                	add    %al,(%rax)
  202e20:	bb 06 00 00 00       	mov    $0x6,%ebx
  202e25:	00 00                	add    %al,(%rax)
  202e27:	00 0c 00             	add    %cl,(%rax,%rax,1)
  202e2a:	00 00                	add    %al,(%rax)
  202e2c:	00 00                	add    %al,(%rax)
  202e2e:	00 00                	add    %al,(%rax)
  202e30:	f0 10 00             	lock adc %al,(%rax)
  202e33:	00 00                	add    %al,(%rax)
  202e35:	00 00                	add    %al,(%rax)
  202e37:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 202e3d <_DYNAMIC+0x45>
  202e3d:	00 00                	add    %al,(%rax)
  202e3f:	00 bc 21 00 00 00 00 	add    %bh,0x0(%rcx,%riz,1)
  202e46:	00 00                	add    %al,(%rax)
  202e48:	19 00                	sbb    %eax,(%rax)
  202e4a:	00 00                	add    %al,(%rax)
  202e4c:	00 00                	add    %al,(%rax)
  202e4e:	00 00                	add    %al,(%rax)
  202e50:	e0 2d                	loopne 202e7f <_DYNAMIC+0x87>
  202e52:	20 00                	and    %al,(%rax)
  202e54:	00 00                	add    %al,(%rax)
  202e56:	00 00                	add    %al,(%rax)
  202e58:	1b 00                	sbb    (%rax),%eax
  202e5a:	00 00                	add    %al,(%rax)
  202e5c:	00 00                	add    %al,(%rax)
  202e5e:	00 00                	add    %al,(%rax)
  202e60:	08 00                	or     %al,(%rax)
  202e62:	00 00                	add    %al,(%rax)
  202e64:	00 00                	add    %al,(%rax)
  202e66:	00 00                	add    %al,(%rax)
  202e68:	1a 00                	sbb    (%rax),%al
  202e6a:	00 00                	add    %al,(%rax)
  202e6c:	00 00                	add    %al,(%rax)
  202e6e:	00 00                	add    %al,(%rax)
  202e70:	e8 2d 20 00 00       	callq  204ea2 <_end+0x1e02>
  202e75:	00 00                	add    %al,(%rax)
  202e77:	00 1c 00             	add    %bl,(%rax,%rax,1)
  202e7a:	00 00                	add    %al,(%rax)
  202e7c:	00 00                	add    %al,(%rax)
  202e7e:	00 00                	add    %al,(%rax)
  202e80:	08 00                	or     %al,(%rax)
  202e82:	00 00                	add    %al,(%rax)
  202e84:	00 00                	add    %al,(%rax)
  202e86:	00 00                	add    %al,(%rax)
  202e88:	f5                   	cmc    
  202e89:	fe                   	(bad)  
  202e8a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  202e8d:	00 00                	add    %al,(%rax)
  202e8f:	00 f0                	add    %dh,%al
  202e91:	01 00                	add    %eax,(%rax)
  202e93:	00 00                	add    %al,(%rax)
  202e95:	00 00                	add    %al,(%rax)
  202e97:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 202e9d <_DYNAMIC+0xa5>
  202e9d:	00 00                	add    %al,(%rax)
  202e9f:	00 40 07             	add    %al,0x7(%rax)
  202ea2:	00 00                	add    %al,(%rax)
  202ea4:	00 00                	add    %al,(%rax)
  202ea6:	00 00                	add    %al,(%rax)
  202ea8:	06                   	(bad)  
  202ea9:	00 00                	add    %al,(%rax)
  202eab:	00 00                	add    %al,(%rax)
  202ead:	00 00                	add    %al,(%rax)
  202eaf:	00 d8                	add    %bl,%al
  202eb1:	02 00                	add    (%rax),%al
  202eb3:	00 00                	add    %al,(%rax)
  202eb5:	00 00                	add    %al,(%rax)
  202eb7:	00 0a                	add    %cl,(%rdx)
  202eb9:	00 00                	add    %al,(%rax)
  202ebb:	00 00                	add    %al,(%rax)
  202ebd:	00 00                	add    %al,(%rax)
  202ebf:	00 f3                	add    %dh,%bl
  202ec1:	06                   	(bad)  
  202ec2:	00 00                	add    %al,(%rax)
  202ec4:	00 00                	add    %al,(%rax)
  202ec6:	00 00                	add    %al,(%rax)
  202ec8:	0b 00                	or     (%rax),%eax
  202eca:	00 00                	add    %al,(%rax)
  202ecc:	00 00                	add    %al,(%rax)
  202ece:	00 00                	add    %al,(%rax)
  202ed0:	18 00                	sbb    %al,(%rax)
  202ed2:	00 00                	add    %al,(%rax)
  202ed4:	00 00                	add    %al,(%rax)
  202ed6:	00 00                	add    %al,(%rax)
  202ed8:	03 00                	add    (%rax),%eax
  202eda:	00 00                	add    %al,(%rax)
  202edc:	00 00                	add    %al,(%rax)
  202ede:	00 00                	add    %al,(%rax)
  202ee0:	00 30                	add    %dh,(%rax)
  202ee2:	20 00                	and    %al,(%rax)
  202ee4:	00 00                	add    %al,(%rax)
  202ee6:	00 00                	add    %al,(%rax)
  202ee8:	02 00                	add    (%rax),%al
  202eea:	00 00                	add    %al,(%rax)
  202eec:	00 00                	add    %al,(%rax)
  202eee:	00 00                	add    %al,(%rax)
  202ef0:	68 01 00 00 00       	pushq  $0x1
  202ef5:	00 00                	add    %al,(%rax)
  202ef7:	00 14 00             	add    %dl,(%rax,%rax,1)
  202efa:	00 00                	add    %al,(%rax)
  202efc:	00 00                	add    %al,(%rax)
  202efe:	00 00                	add    %al,(%rax)
  202f00:	07                   	(bad)  
  202f01:	00 00                	add    %al,(%rax)
  202f03:	00 00                	add    %al,(%rax)
  202f05:	00 00                	add    %al,(%rax)
  202f07:	00 17                	add    %dl,(%rdi)
  202f09:	00 00                	add    %al,(%rax)
  202f0b:	00 00                	add    %al,(%rax)
  202f0d:	00 00                	add    %al,(%rax)
  202f0f:	00 88 0f 00 00 00    	add    %cl,0xf(%rax)
  202f15:	00 00                	add    %al,(%rax)
  202f17:	00 07                	add    %al,(%rdi)
  202f19:	00 00                	add    %al,(%rax)
  202f1b:	00 00                	add    %al,(%rax)
  202f1d:	00 00                	add    %al,(%rax)
  202f1f:	00 c8                	add    %cl,%al
  202f21:	0e                   	(bad)  
  202f22:	00 00                	add    %al,(%rax)
  202f24:	00 00                	add    %al,(%rax)
  202f26:	00 00                	add    %al,(%rax)
  202f28:	08 00                	or     %al,(%rax)
  202f2a:	00 00                	add    %al,(%rax)
  202f2c:	00 00                	add    %al,(%rax)
  202f2e:	00 00                	add    %al,(%rax)
  202f30:	c0 00 00             	rolb   $0x0,(%rax)
  202f33:	00 00                	add    %al,(%rax)
  202f35:	00 00                	add    %al,(%rax)
  202f37:	00 09                	add    %cl,(%rcx)
  202f39:	00 00                	add    %al,(%rax)
  202f3b:	00 00                	add    %al,(%rax)
  202f3d:	00 00                	add    %al,(%rax)
  202f3f:	00 18                	add    %bl,(%rax)
  202f41:	00 00                	add    %al,(%rax)
  202f43:	00 00                	add    %al,(%rax)
  202f45:	00 00                	add    %al,(%rax)
  202f47:	00 fe                	add    %bh,%dh
  202f49:	ff                   	(bad)  
  202f4a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  202f4d:	00 00                	add    %al,(%rax)
  202f4f:	00 98 0e 00 00 00    	add    %bl,0xe(%rax)
  202f55:	00 00                	add    %al,(%rax)
  202f57:	00 ff                	add    %bh,%bh
  202f59:	ff                   	(bad)  
  202f5a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  202f5d:	00 00                	add    %al,(%rax)
  202f5f:	00 01                	add    %al,(%rcx)
  202f61:	00 00                	add    %al,(%rax)
  202f63:	00 00                	add    %al,(%rax)
  202f65:	00 00                	add    %al,(%rax)
  202f67:	00 f0                	add    %dh,%al
  202f69:	ff                   	(bad)  
  202f6a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  202f6d:	00 00                	add    %al,(%rax)
  202f6f:	00 34 0e             	add    %dh,(%rsi,%rcx,1)
  202f72:	00 00                	add    %al,(%rax)
  202f74:	00 00                	add    %al,(%rax)
  202f76:	00 00                	add    %al,(%rax)
  202f78:	f9                   	stc    
  202f79:	ff                   	(bad)  
  202f7a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  202f7d:	00 00                	add    %al,(%rax)
  202f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000202fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000203000 <_GLOBAL_OFFSET_TABLE_>:
  203000:	f8                   	clc    
  203001:	2d 20 00 00 00       	sub    $0x20,%eax
	...
  203016:	00 00                	add    %al,(%rax)
  203018:	26 11 00             	adc    %eax,%es:(%rax)
  20301b:	00 00                	add    %al,(%rax)
  20301d:	00 00                	add    %al,(%rax)
  20301f:	00 36                	add    %dh,(%rsi)
  203021:	11 00                	adc    %eax,(%rax)
  203023:	00 00                	add    %al,(%rax)
  203025:	00 00                	add    %al,(%rax)
  203027:	00 46 11             	add    %al,0x11(%rsi)
  20302a:	00 00                	add    %al,(%rax)
  20302c:	00 00                	add    %al,(%rax)
  20302e:	00 00                	add    %al,(%rax)
  203030:	56                   	push   %rsi
  203031:	11 00                	adc    %eax,(%rax)
  203033:	00 00                	add    %al,(%rax)
  203035:	00 00                	add    %al,(%rax)
  203037:	00 66 11             	add    %ah,0x11(%rsi)
  20303a:	00 00                	add    %al,(%rax)
  20303c:	00 00                	add    %al,(%rax)
  20303e:	00 00                	add    %al,(%rax)
  203040:	76 11                	jbe    203053 <_GLOBAL_OFFSET_TABLE_+0x53>
  203042:	00 00                	add    %al,(%rax)
  203044:	00 00                	add    %al,(%rax)
  203046:	00 00                	add    %al,(%rax)
  203048:	86 11                	xchg   %dl,(%rcx)
  20304a:	00 00                	add    %al,(%rax)
  20304c:	00 00                	add    %al,(%rax)
  20304e:	00 00                	add    %al,(%rax)
  203050:	96                   	xchg   %eax,%esi
  203051:	11 00                	adc    %eax,(%rax)
  203053:	00 00                	add    %al,(%rax)
  203055:	00 00                	add    %al,(%rax)
  203057:	00 a6 11 00 00 00    	add    %ah,0x11(%rsi)
  20305d:	00 00                	add    %al,(%rax)
  20305f:	00 b6 11 00 00 00    	add    %dh,0x11(%rsi)
  203065:	00 00                	add    %al,(%rax)
  203067:	00 c6                	add    %al,%dh
  203069:	11 00                	adc    %eax,(%rax)
  20306b:	00 00                	add    %al,(%rax)
  20306d:	00 00                	add    %al,(%rax)
  20306f:	00 d6                	add    %dl,%dh
  203071:	11 00                	adc    %eax,(%rax)
  203073:	00 00                	add    %al,(%rax)
  203075:	00 00                	add    %al,(%rax)
  203077:	00 e6                	add    %ah,%dh
  203079:	11 00                	adc    %eax,(%rax)
  20307b:	00 00                	add    %al,(%rax)
  20307d:	00 00                	add    %al,(%rax)
  20307f:	00 f6                	add    %dh,%dh
  203081:	11 00                	adc    %eax,(%rax)
  203083:	00 00                	add    %al,(%rax)
  203085:	00 00                	add    %al,(%rax)
  203087:	00 06                	add    %al,(%rsi)
  203089:	12 00                	adc    (%rax),%al
  20308b:	00 00                	add    %al,(%rax)
  20308d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000203090 <__dso_handle>:
  203090:	90                   	nop
  203091:	30 20                	xor    %ah,(%rax)
  203093:	00 00                	add    %al,(%rax)
  203095:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000203098 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x1078>
   a:	74 75                	je     81 <_init-0x106f>
   c:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
   f:	38 2e                	cmp    %ch,(%rsi)
  11:	34 2d                	xor    $0x2d,%al
  13:	32 75 62             	xor    0x62(%rbp),%dh
  16:	75 6e                	jne    86 <_init-0x106a>
  18:	74 75                	je     8f <_init-0x1061>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	33 29                	xor    (%rcx),%ebp
  24:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  27:	38 2e                	cmp    %ch,(%rsi)
  29:	34 00                	xor    $0x0,%al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	f5                   	cmc    
  11:	12 00                	adc    (%rax),%al
  13:	00 00                	add    %al,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	00 c5                	add    %al,%ch
  19:	0e                   	(bad)  
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	61                   	(bad)  
   1:	07                   	(bad)  
   2:	00 00                	add    %al,(%rax)
   4:	04 00                	add    $0x0,%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	87 07                	xchg   %eax,(%rdi)
   e:	00 00                	add    %al,(%rax)
  10:	04 7b                	add    $0x7b,%al
  12:	07                   	(bad)  
  13:	00 00                	add    %al,(%rax)
  15:	49 05 00 00 f5 12    	rex.WB add $0x12f50000,%rax
  1b:	00 00                	add    %al,(%rax)
  1d:	00 00                	add    %al,(%rax)
  1f:	00 00                	add    %al,(%rax)
  21:	c5 0e 00             	(bad)  
	...
  2c:	00 02                	add    %al,(%rdx)
  2e:	01 06                	add    %eax,(%rsi)
  30:	60                   	(bad)  
  31:	04 00                	add    $0x0,%al
  33:	00 02                	add    %al,(%rdx)
  35:	02 05 28 02 00 00    	add    0x228(%rip),%al        # 263 <_init-0xe8d>
  3b:	03 04 05 69 6e 74 00 	add    0x746e69(,%rax,1),%eax
  42:	02 08                	add    (%rax),%cl
  44:	05 db 02 00 00       	add    $0x2db,%eax
  49:	02 01                	add    (%rcx),%al
  4b:	08 5e 04             	or     %bl,0x4(%rsi)
  4e:	00 00                	add    %al,(%rax)
  50:	02 02                	add    (%rdx),%al
  52:	07                   	(bad)  
  53:	96                   	xchg   %eax,%esi
  54:	05 00 00 02 04       	add    $0x4020000,%eax
  59:	07                   	(bad)  
  5a:	35 05 00 00 02       	xor    $0x2000005,%eax
  5f:	08 07                	or     %al,(%rdi)
  61:	30 05 00 00 02 08    	xor    %al,0x8020000(%rip)        # 8020067 <_end+0x7e1cfc7>
  67:	07                   	(bad)  
  68:	61                   	(bad)  
  69:	01 00                	add    %eax,(%rax)
  6b:	00 02                	add    %al,(%rdx)
  6d:	01 06                	add    %eax,(%rsi)
  6f:	67 04 00             	addr32 add $0x0,%al
  72:	00 02                	add    %al,(%rdx)
  74:	08 07                	or     %al,(%rdi)
  76:	2b 05 00 00 02 08    	sub    0x8020000(%rip),%eax        # 802007c <_end+0x7e1cfdc>
  7c:	05 d6 02 00 00       	add    $0x2d6,%eax
  81:	04 50                	add    $0x50,%al
  83:	00 00                	add    %al,(%rax)
  85:	00 04 49             	add    %al,(%rcx,%rcx,2)
  88:	00 00                	add    %al,(%rax)
  8a:	00 05 e4 07 00 00    	add    %al,0x7e4(%rip)        # 874 <_init-0x87c>
  90:	05 16 01 00 00       	add    $0x116,%eax
  95:	06                   	(bad)  
  96:	08 49 00             	or     %cl,0x0(%rcx)
  99:	00 00                	add    %al,(%rax)
  9b:	07                   	(bad)  
  9c:	6e                   	outsb  %ds:(%rsi),(%dx)
  9d:	07                   	(bad)  
  9e:	00 00                	add    %al,(%rax)
  a0:	02 15 8b 00 00 00    	add    0x8b(%rip),%dl        # 131 <_init-0xfbf>
  a6:	07                   	(bad)  
  a7:	c4 02 00 00          	(bad)  
  ab:	02 16                	add    (%rsi),%dl
  ad:	90                   	nop
  ae:	00 00                	add    %al,(%rax)
  b0:	00 06                	add    %al,(%rsi)
  b2:	08 9b 00 00 00 06    	or     %bl,0x6000000(%rbx)
  b8:	08 a6 00 00 00 08    	or     %ah,0x8000000(%rsi)
  be:	cf                   	iret   
  bf:	03 00                	add    (%rax),%eax
  c1:	00 01                	add    %al,(%rcx)
  c3:	05 00 00 00 00       	add    $0x0,%eax
  c8:	3b 00                	cmp    (%rax),%eax
  ca:	00 00                	add    %al,(%rax)
  cc:	f5                   	cmc    
  cd:	12 00                	adc    (%rax),%al
  cf:	00 00                	add    %al,(%rax)
  d1:	00 00                	add    %al,(%rax)
  d3:	00 8e 00 00 00 00    	add    %cl,0x0(%rsi)
  d9:	00 00                	add    %al,(%rax)
  db:	00 01                	add    %al,(%rcx)
  dd:	9c                   	pushfq 
  de:	2e 01 00             	add    %eax,%cs:(%rax)
  e1:	00 09                	add    %cl,(%rcx)
  e3:	68 00 01 05 b7       	pushq  $0xffffffffb7050100
  e8:	00 00                	add    %al,(%rax)
  ea:	00 03                	add    %al,(%rbx)
  ec:	91                   	xchg   %eax,%ecx
  ed:	b8 7f 0a b9 02       	mov    $0x2b90a7f,%eax
  f2:	00 00                	add    %al,(%rax)
  f4:	01 05 81 00 00 00    	add    %eax,0x81(%rip)        # 17b <_init-0xf75>
  fa:	03 91 b4 7f 0a 42    	add    0x420a7fb4(%rcx),%edx
 100:	05 00 00 01 05       	add    $0x5010000,%eax
 105:	81 00 00 00 03 91    	addl   $0x91030000,(%rax)
 10b:	b0 7f                	mov    $0x7f,%al
 10d:	0b 1d 13 00 00 00    	or     0x13(%rip),%ebx        # 126 <_init-0xfca>
 113:	00 00                	add    %al,(%rax)
 115:	00 4b 00             	add    %cl,0x0(%rbx)
 118:	00 00                	add    %al,(%rax)
 11a:	00 00                	add    %al,(%rax)
 11c:	00 00                	add    %al,(%rax)
 11e:	0c 2f                	or     $0x2f,%al
 120:	06                   	(bad)  
 121:	00 00                	add    %al,(%rax)
 123:	01 07                	add    %eax,(%rdi)
 125:	2e 01 00             	add    %eax,%cs:(%rax)
 128:	00 02                	add    %al,(%rdx)
 12a:	91                   	xchg   %eax,%ecx
 12b:	40 00 00             	add    %al,(%rax)
 12e:	0d 49 00 00 00       	or     $0x49,%eax
 133:	3e 01 00             	add    %eax,%ds:(%rax)
 136:	00 0e                	add    %cl,(%rsi)
 138:	65 00 00             	add    %al,%gs:(%rax)
 13b:	00 09                	add    %cl,(%rcx)
 13d:	00 08                	add    %cl,(%rax)
 13f:	5a                   	pop    %rdx
 140:	07                   	(bad)  
 141:	00 00                	add    %al,(%rax)
 143:	01 0a                	add    %ecx,(%rdx)
 145:	50                   	push   %rax
 146:	00 00                	add    %al,(%rax)
 148:	00 3b                	add    %bh,(%rbx)
 14a:	00 00                	add    %al,(%rax)
 14c:	00 83 13 00 00 00    	add    %al,0x13(%rbx)
 152:	00 00                	add    %al,(%rax)
 154:	00 50 00             	add    %dl,0x0(%rax)
 157:	00 00                	add    %al,(%rax)
 159:	00 00                	add    %al,(%rax)
 15b:	00 00                	add    %al,(%rax)
 15d:	01 9c 8c 01 00 00 09 	add    %ebx,0x9000001(%rsp,%rcx,4)
 164:	68 00 01 0a b7       	pushq  $0xffffffffb70a0100
 169:	00 00                	add    %al,(%rax)
 16b:	00 02                	add    %al,(%rdx)
 16d:	91                   	xchg   %eax,%ecx
 16e:	68 0a b9 02 00       	pushq  $0x2b90a
 173:	00 01                	add    %al,(%rcx)
 175:	0a 81 00 00 00 02    	or     0x2000000(%rcx),%al
 17b:	91                   	xchg   %eax,%ecx
 17c:	64 0a 42 05          	or     %fs:0x5(%rdx),%al
 180:	00 00                	add    %al,(%rax)
 182:	01 0a                	add    %ecx,(%rdx)
 184:	95                   	xchg   %eax,%ebp
 185:	00 00                	add    %al,(%rax)
 187:	00 02                	add    %al,(%rdx)
 189:	91                   	xchg   %eax,%ecx
 18a:	58                   	pop    %rax
 18b:	00 08                	add    %cl,(%rax)
 18d:	4c 04 00             	rex.WR add $0x0,%al
 190:	00 01                	add    %al,(%rcx)
 192:	0e                   	(bad)  
 193:	0a 08                	or     (%rax),%cl
 195:	00 00                	add    %al,(%rax)
 197:	3b 00                	cmp    (%rax),%eax
 199:	00 00                	add    %al,(%rax)
 19b:	d3 13                	rcll   %cl,(%rbx)
 19d:	00 00                	add    %al,(%rax)
 19f:	00 00                	add    %al,(%rax)
 1a1:	00 00                	add    %al,(%rax)
 1a3:	8c 00                	mov    %es,(%rax)
 1a5:	00 00                	add    %al,(%rax)
 1a7:	00 00                	add    %al,(%rax)
 1a9:	00 00                	add    %al,(%rax)
 1ab:	01 9c fd 01 00 00 09 	add    %ebx,0x9000001(%rbp,%rdi,8)
 1b2:	68 00 01 0e b7       	pushq  $0xffffffffb70e0100
 1b7:	00 00                	add    %al,(%rax)
 1b9:	00 03                	add    %al,(%rbx)
 1bb:	91                   	xchg   %eax,%ecx
 1bc:	b8 7f 0a b9 02       	mov    $0x2b90a7f,%eax
 1c1:	00 00                	add    %al,(%rax)
 1c3:	01 0e                	add    %ecx,(%rsi)
 1c5:	86 00                	xchg   %al,(%rax)
 1c7:	00 00                	add    %al,(%rax)
 1c9:	03 91 b4 7f 0a 42    	add    0x420a7fb4(%rcx),%edx
 1cf:	05 00 00 01 0e       	add    $0xe010000,%eax
 1d4:	86 00                	xchg   %al,(%rax)
 1d6:	00 00                	add    %al,(%rax)
 1d8:	03 91 b0 7f 0b f9    	add    -0x6f48050(%rcx),%edx
 1de:	13 00                	adc    (%rax),%eax
 1e0:	00 00                	add    %al,(%rax)
 1e2:	00 00                	add    %al,(%rax)
 1e4:	00 4b 00             	add    %cl,0x0(%rbx)
 1e7:	00 00                	add    %al,(%rax)
 1e9:	00 00                	add    %al,(%rax)
 1eb:	00 00                	add    %al,(%rax)
 1ed:	0c 2f                	or     $0x2f,%al
 1ef:	06                   	(bad)  
 1f0:	00 00                	add    %al,(%rax)
 1f2:	01 10                	add    %edx,(%rax)
 1f4:	2e 01 00             	add    %eax,%cs:(%rax)
 1f7:	00 02                	add    %al,(%rdx)
 1f9:	91                   	xchg   %eax,%ecx
 1fa:	40 00 00             	add    %al,(%rax)
 1fd:	08 3f                	or     %bh,(%rdi)
 1ff:	08 00                	or     %al,(%rax)
 201:	00 01                	add    %al,(%rcx)
 203:	13 6c 02 00          	adc    0x0(%rdx,%rax,1),%ebp
 207:	00 3b                	add    %bh,(%rbx)
 209:	00 00                	add    %al,(%rax)
 20b:	00 5f 14             	add    %bl,0x14(%rdi)
 20e:	00 00                	add    %al,(%rax)
 210:	00 00                	add    %al,(%rax)
 212:	00 00                	add    %al,(%rax)
 214:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 217:	00 00                	add    %al,(%rax)
 219:	00 00                	add    %al,(%rax)
 21b:	00 01                	add    %al,(%rcx)
 21d:	9c                   	pushfq 
 21e:	4b 02 00             	rex.WXB add (%r8),%al
 221:	00 09                	add    %cl,(%rcx)
 223:	68 00 01 13 b7       	pushq  $0xffffffffb7130100
 228:	00 00                	add    %al,(%rax)
 22a:	00 02                	add    %al,(%rdx)
 22c:	91                   	xchg   %eax,%ecx
 22d:	68 0a b9 02 00       	pushq  $0x2b90a
 232:	00 01                	add    %al,(%rcx)
 234:	13 86 00 00 00 02    	adc    0x2000000(%rsi),%eax
 23a:	91                   	xchg   %eax,%ecx
 23b:	64 0a 42 05          	or     %fs:0x5(%rdx),%al
 23f:	00 00                	add    %al,(%rax)
 241:	01 13                	add    %edx,(%rbx)
 243:	95                   	xchg   %eax,%ebp
 244:	00 00                	add    %al,(%rax)
 246:	00 02                	add    %al,(%rdx)
 248:	91                   	xchg   %eax,%ecx
 249:	58                   	pop    %rax
 24a:	00 08                	add    %cl,(%rax)
 24c:	b2 05                	mov    $0x5,%dl
 24e:	00 00                	add    %al,(%rax)
 250:	01 17                	add    %edx,(%rdi)
 252:	e3 03                	jrcxz  257 <_init-0xe99>
 254:	00 00                	add    %al,(%rax)
 256:	3b 00                	cmp    (%rax),%eax
 258:	00 00                	add    %al,(%rax)
 25a:	ae                   	scas   %es:(%rdi),%al
 25b:	14 00                	adc    $0x0,%al
 25d:	00 00                	add    %al,(%rax)
 25f:	00 00                	add    %al,(%rax)
 261:	00 0d 02 00 00 00    	add    %cl,0x2(%rip)        # 269 <_init-0xe87>
 267:	00 00                	add    %al,(%rax)
 269:	00 01                	add    %al,(%rcx)
 26b:	9c                   	pushfq 
 26c:	7d 02                	jge    270 <_init-0xe80>
 26e:	00 00                	add    %al,(%rax)
 270:	09 68 00             	or     %ebp,0x0(%rax)
 273:	01 17                	add    %edx,(%rdi)
 275:	b7 00                	mov    $0x0,%bh
 277:	00 00                	add    %al,(%rax)
 279:	02 91 68 00 08 31    	add    0x31080068(%rcx),%dl
 27f:	00 00                	add    %al,(%rax)
 281:	00 01                	add    %al,(%rcx)
 283:	3f                   	(bad)  
 284:	d4                   	(bad)  
 285:	06                   	(bad)  
 286:	00 00                	add    %al,(%rax)
 288:	3b 00                	cmp    (%rax),%eax
 28a:	00 00                	add    %al,(%rax)
 28c:	bb 16 00 00 00       	mov    $0x16,%ebx
 291:	00 00                	add    %al,(%rax)
 293:	00 8b 00 00 00 00    	add    %cl,0x0(%rbx)
 299:	00 00                	add    %al,(%rax)
 29b:	00 01                	add    %al,(%rcx)
 29d:	9c                   	pushfq 
 29e:	bd 02 00 00 09       	mov    $0x9000002,%ebp
 2a3:	68 00 01 3f b7       	pushq  $0xffffffffb73f0100
 2a8:	00 00                	add    %al,(%rax)
 2aa:	00 02                	add    %al,(%rdx)
 2ac:	91                   	xchg   %eax,%ecx
 2ad:	68 0a a9 05 00       	pushq  $0x5a90a
 2b2:	00 01                	add    %al,(%rcx)
 2b4:	3f                   	(bad)  
 2b5:	86 00                	xchg   %al,(%rax)
 2b7:	00 00                	add    %al,(%rax)
 2b9:	02 91 64 00 08 51    	add    0x51080064(%rcx),%dl
 2bf:	06                   	(bad)  
 2c0:	00 00                	add    %al,(%rax)
 2c2:	01 4c 0d 03          	add    %ecx,0x3(%rbp,%rcx,1)
 2c6:	00 00                	add    %al,(%rax)
 2c8:	3b 00                	cmp    (%rax),%eax
 2ca:	00 00                	add    %al,(%rax)
 2cc:	46 17                	rex.RX (bad) 
 2ce:	00 00                	add    %al,(%rax)
 2d0:	00 00                	add    %al,(%rax)
 2d2:	00 00                	add    %al,(%rax)
 2d4:	8b 00                	mov    (%rax),%eax
 2d6:	00 00                	add    %al,(%rax)
 2d8:	00 00                	add    %al,(%rax)
 2da:	00 00                	add    %al,(%rax)
 2dc:	01 9c fd 02 00 00 09 	add    %ebx,0x9000002(%rbp,%rdi,8)
 2e3:	68 00 01 4c b7       	pushq  $0xffffffffb74c0100
 2e8:	00 00                	add    %al,(%rax)
 2ea:	00 02                	add    %al,(%rdx)
 2ec:	91                   	xchg   %eax,%ecx
 2ed:	68 0a a9 05 00       	pushq  $0x5a90a
 2f2:	00 01                	add    %al,(%rcx)
 2f4:	4c 86 00             	rex.WR xchg %r8b,(%rax)
 2f7:	00 00                	add    %al,(%rax)
 2f9:	02 91 64 00 08 a6    	add    -0x59f7ff9c(%rcx),%dl
 2ff:	04 00                	add    $0x0,%al
 301:	00 01                	add    %al,(%rcx)
 303:	59                   	pop    %rcx
 304:	97                   	xchg   %eax,%edi
 305:	03 00                	add    (%rax),%eax
 307:	00 3b                	add    %bh,(%rbx)
 309:	00 00                	add    %al,(%rax)
 30b:	00 d1                	add    %dl,%cl
 30d:	17                   	(bad)  
 30e:	00 00                	add    %al,(%rax)
 310:	00 00                	add    %al,(%rax)
 312:	00 00                	add    %al,(%rax)
 314:	cd 00                	int    $0x0
 316:	00 00                	add    %al,(%rax)
 318:	00 00                	add    %al,(%rax)
 31a:	00 00                	add    %al,(%rax)
 31c:	01 9c 5b 03 00 00 09 	add    %ebx,0x9000003(%rbx,%rbx,2)
 323:	68 00 01 59 5b       	pushq  $0x5b590100
 328:	03 00                	add    (%rax),%eax
 32a:	00 02                	add    %al,(%rdx)
 32c:	91                   	xchg   %eax,%ecx
 32d:	58                   	pop    %rax
 32e:	0b dd                	or     %ebp,%ebx
 330:	17                   	(bad)  
 331:	00 00                	add    %al,(%rax)
 333:	00 00                	add    %al,(%rax)
 335:	00 00                	add    %al,(%rax)
 337:	bf 00 00 00 00       	mov    $0x0,%edi
 33c:	00 00                	add    %al,(%rax)
 33e:	00 0f                	add    %cl,(%rdi)
 340:	72 00                	jb     342 <_init-0xdae>
 342:	01 5b 3b             	add    %ebx,0x3b(%rbx)
 345:	00 00                	add    %al,(%rax)
 347:	00 02                	add    %al,(%rdx)
 349:	91                   	xchg   %eax,%ecx
 34a:	68 0c 90 03 00       	pushq  $0x3900c
 34f:	00 01                	add    %al,(%rcx)
 351:	63 3b                	movslq (%rbx),%edi
 353:	00 00                	add    %al,(%rax)
 355:	00 02                	add    %al,(%rdx)
 357:	91                   	xchg   %eax,%ecx
 358:	6c                   	insb   (%dx),%es:(%rdi)
 359:	00 00                	add    %al,(%rax)
 35b:	06                   	(bad)  
 35c:	08 b7 00 00 00 08    	or     %dh,0x8000000(%rdi)
 362:	5b                   	pop    %rbx
 363:	02 00                	add    (%rax),%al
 365:	00 01                	add    %al,(%rcx)
 367:	7d 9b                	jge    304 <_init-0xdec>
 369:	01 00                	add    %eax,(%rax)
 36b:	00 3b                	add    %bh,(%rbx)
 36d:	00 00                	add    %al,(%rax)
 36f:	00 9e 18 00 00 00    	add    %bl,0x18(%rsi)
 375:	00 00                	add    %al,(%rax)
 377:	00 39                	add    %bh,(%rcx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 00                	add    %al,(%rax)
 37d:	00 00                	add    %al,(%rax)
 37f:	00 01                	add    %al,(%rcx)
 381:	9c                   	pushfq 
 382:	b1 03                	mov    $0x3,%cl
 384:	00 00                	add    %al,(%rax)
 386:	09 68 00             	or     %ebp,0x0(%rax)
 389:	01 7d b7             	add    %edi,-0x49(%rbp)
 38c:	00 00                	add    %al,(%rax)
 38e:	00 02                	add    %al,(%rdx)
 390:	91                   	xchg   %eax,%ecx
 391:	58                   	pop    %rax
 392:	0b aa 18 00 00 00    	or     0x18(%rdx),%ebp
 398:	00 00                	add    %al,(%rax)
 39a:	00 2b                	add    %ch,(%rbx)
 39c:	00 00                	add    %al,(%rax)
 39e:	00 00                	add    %al,(%rax)
 3a0:	00 00                	add    %al,(%rax)
 3a2:	00 0f                	add    %cl,(%rdi)
 3a4:	72 00                	jb     3a6 <_init-0xd4a>
 3a6:	01 7f 3b             	add    %edi,0x3b(%rdi)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 02                	add    %al,(%rdx)
 3ad:	91                   	xchg   %eax,%ecx
 3ae:	6c                   	insb   (%dx),%es:(%rdi)
 3af:	00 00                	add    %al,(%rax)
 3b1:	08 d1                	or     %dl,%cl
 3b3:	07                   	(bad)  
 3b4:	00 00                	add    %al,(%rax)
 3b6:	01 85 c8 00 00 00    	add    %eax,0xc8(%rbp)
 3bc:	3b 00                	cmp    (%rax),%eax
 3be:	00 00                	add    %al,(%rax)
 3c0:	d7                   	xlat   %ds:(%rbx)
 3c1:	18 00                	sbb    %al,(%rax)
 3c3:	00 00                	add    %al,(%rax)
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 51 00             	add    %dl,0x0(%rcx)
 3ca:	00 00                	add    %al,(%rax)
 3cc:	00 00                	add    %al,(%rax)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	01 9c 11 04 00 00 09 	add    %ebx,0x9000004(%rcx,%rdx,1)
 3d7:	68 00 01 85 b7       	pushq  $0xffffffffb7850100
 3dc:	00 00                	add    %al,(%rax)
 3de:	00 02                	add    %al,(%rdx)
 3e0:	91                   	xchg   %eax,%ecx
 3e1:	58                   	pop    %rax
 3e2:	0a 8b 05 00 00 01    	or     0x1000005(%rbx),%cl
 3e8:	85 11                	test   %edx,(%rcx)
 3ea:	04 00                	add    $0x0,%al
 3ec:	00 02                	add    %al,(%rdx)
 3ee:	91                   	xchg   %eax,%ecx
 3ef:	50                   	push   %rax
 3f0:	0b e7                	or     %edi,%esp
 3f2:	18 00                	sbb    %al,(%rax)
 3f4:	00 00                	add    %al,(%rax)
 3f6:	00 00                	add    %al,(%rax)
 3f8:	00 3f                	add    %bh,(%rdi)
 3fa:	00 00                	add    %al,(%rax)
 3fc:	00 00                	add    %al,(%rax)
 3fe:	00 00                	add    %al,(%rax)
 400:	00 0c 39             	add    %cl,(%rcx,%rdi,1)
 403:	08 00                	or     %al,(%rax)
 405:	00 01                	add    %al,(%rcx)
 407:	87 b1 00 00 00 02    	xchg   %esi,0x2000000(%rcx)
 40d:	91                   	xchg   %eax,%ecx
 40e:	68 00 00 06 08       	pushq  $0x8060000
 413:	57                   	push   %rdi
 414:	00 00                	add    %al,(%rax)
 416:	00 08                	add    %cl,(%rax)
 418:	78 03                	js     41d <_init-0xcd3>
 41a:	00 00                	add    %al,(%rax)
 41c:	01 8f f5 01 00 00    	add    %ecx,0x1f5(%rdi)
 422:	3b 00                	cmp    (%rax),%eax
 424:	00 00                	add    %al,(%rax)
 426:	28 19                	sub    %bl,(%rcx)
 428:	00 00                	add    %al,(%rax)
 42a:	00 00                	add    %al,(%rax)
 42c:	00 00                	add    %al,(%rax)
 42e:	55                   	push   %rbp
 42f:	00 00                	add    %al,(%rax)
 431:	00 00                	add    %al,(%rax)
 433:	00 00                	add    %al,(%rax)
 435:	00 01                	add    %al,(%rcx)
 437:	9c                   	pushfq 
 438:	49 04 00             	rex.WB add $0x0,%al
 43b:	00 09                	add    %cl,(%rcx)
 43d:	68 00 01 8f b7       	pushq  $0xffffffffb78f0100
 442:	00 00                	add    %al,(%rax)
 444:	00 02                	add    %al,(%rdx)
 446:	91                   	xchg   %eax,%ecx
 447:	68 00 08 42 07       	pushq  $0x7420800
 44c:	00 00                	add    %al,(%rax)
 44e:	01 96 b6 04 00 00    	add    %edx,0x4b6(%rsi)
 454:	3b 00                	cmp    (%rax),%eax
 456:	00 00                	add    %al,(%rax)
 458:	7d 19                	jge    473 <_init-0xc7d>
 45a:	00 00                	add    %al,(%rax)
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	6f                   	outsl  %ds:(%rsi),(%dx)
 461:	00 00                	add    %al,(%rax)
 463:	00 00                	add    %al,(%rax)
 465:	00 00                	add    %al,(%rax)
 467:	00 01                	add    %al,(%rcx)
 469:	9c                   	pushfq 
 46a:	89 04 00             	mov    %eax,(%rax,%rax,1)
 46d:	00 09                	add    %cl,(%rcx)
 46f:	68 00 01 96 b7       	pushq  $0xffffffffb7960100
 474:	00 00                	add    %al,(%rax)
 476:	00 02                	add    %al,(%rdx)
 478:	91                   	xchg   %eax,%ecx
 479:	68 0a d1 02 00       	pushq  $0x2d10a
 47e:	00 01                	add    %al,(%rcx)
 480:	96                   	xchg   %eax,%esi
 481:	86 00                	xchg   %al,(%rax)
 483:	00 00                	add    %al,(%rax)
 485:	02 91 64 00 08 f9    	add    -0x6f7ff9c(%rcx),%dl
 48b:	02 00                	add    (%rax),%al
 48d:	00 01                	add    %al,(%rcx)
 48f:	9e                   	sahf   
 490:	48 03 00             	add    (%rax),%rax
 493:	00 3b                	add    %bh,(%rbx)
 495:	00 00                	add    %al,(%rax)
 497:	00 ec                	add    %ch,%ah
 499:	19 00                	sbb    %eax,(%rax)
 49b:	00 00                	add    %al,(%rax)
 49d:	00 00                	add    %al,(%rax)
 49f:	00 2d 00 00 00 00    	add    %ch,0x0(%rip)        # 4a5 <_init-0xc4b>
 4a5:	00 00                	add    %al,(%rax)
 4a7:	00 01                	add    %al,(%rcx)
 4a9:	9c                   	pushfq 
 4aa:	c9                   	leaveq 
 4ab:	04 00                	add    $0x0,%al
 4ad:	00 09                	add    %cl,(%rcx)
 4af:	68 00 01 9e b7       	pushq  $0xffffffffb79e0100
 4b4:	00 00                	add    %al,(%rax)
 4b6:	00 02                	add    %al,(%rdx)
 4b8:	91                   	xchg   %eax,%ecx
 4b9:	68 0a d1 02 00       	pushq  $0x2d10a
 4be:	00 01                	add    %al,(%rcx)
 4c0:	9e                   	sahf   
 4c1:	86 00                	xchg   %al,(%rax)
 4c3:	00 00                	add    %al,(%rax)
 4c5:	02 91 64 00 08 e4    	add    -0x1bf7ff9c(%rcx),%dl
 4cb:	02 00                	add    (%rax),%al
 4cd:	00 01                	add    %al,(%rcx)
 4cf:	a3 70 06 00 00 3b 00 	movabs %eax,0x3b00000670
 4d6:	00 00 
 4d8:	19 1a                	sbb    %ebx,(%rdx)
 4da:	00 00                	add    %al,(%rax)
 4dc:	00 00                	add    %al,(%rax)
 4de:	00 00                	add    %al,(%rax)
 4e0:	2e 00 00             	add    %al,%cs:(%rax)
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 01                	add    %al,(%rcx)
 4e9:	9c                   	pushfq 
 4ea:	09 05 00 00 09 68    	or     %eax,0x68090000(%rip)        # 680904f0 <_end+0x67e8d450>
 4f0:	00 01                	add    %al,(%rcx)
 4f2:	a3 b7 00 00 00 02 91 	movabs %eax,0xa689102000000b7
 4f9:	68 0a 
 4fb:	bf 02 00 00 01       	mov    $0x1000002,%edi
 500:	a3 81 00 00 00 02 91 	movabs %eax,0x64910200000081
 507:	64 00 
 509:	08 32                	or     %dh,(%rdx)
 50b:	02 00                	add    (%rax),%al
 50d:	00 01                	add    %al,(%rcx)
 50f:	a8 6a                	test   $0x6a,%al
 511:	01 00                	add    %eax,(%rax)
 513:	00 3b                	add    %bh,(%rbx)
 515:	00 00                	add    %al,(%rax)
 517:	00 47 1a             	add    %al,0x1a(%rdi)
 51a:	00 00                	add    %al,(%rax)
 51c:	00 00                	add    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	2e 00 00             	add    %al,%cs:(%rax)
 523:	00 00                	add    %al,(%rax)
 525:	00 00                	add    %al,(%rax)
 527:	00 01                	add    %al,(%rcx)
 529:	9c                   	pushfq 
 52a:	49 05 00 00 09 68    	rex.WB add $0x68090000,%rax
 530:	00 01                	add    %al,(%rcx)
 532:	a8 b7                	test   $0xb7,%al
 534:	00 00                	add    %al,(%rax)
 536:	00 02                	add    %al,(%rdx)
 538:	91                   	xchg   %eax,%ecx
 539:	68 0a 91 05 00       	pushq  $0x5910a
 53e:	00 01                	add    %al,(%rcx)
 540:	a8 81                	test   $0x81,%al
 542:	00 00                	add    %al,(%rax)
 544:	00 02                	add    %al,(%rdx)
 546:	91                   	xchg   %eax,%ecx
 547:	64 00 08             	add    %cl,%fs:(%rax)
 54a:	9c                   	pushfq 
 54b:	02 00                	add    (%rax),%al
 54d:	00 01                	add    %al,(%rcx)
 54f:	ad                   	lods   %ds:(%rsi),%eax
 550:	c5 05 00             	(bad)  
 553:	00 3b                	add    %bh,(%rbx)
 555:	00 00                	add    %al,(%rax)
 557:	00 75 1a             	add    %dh,0x1a(%rbp)
 55a:	00 00                	add    %al,(%rax)
 55c:	00 00                	add    %al,(%rax)
 55e:	00 00                	add    %al,(%rax)
 560:	bf 00 00 00 00       	mov    $0x0,%edi
 565:	00 00                	add    %al,(%rax)
 567:	00 01                	add    %al,(%rcx)
 569:	9c                   	pushfq 
 56a:	97                   	xchg   %eax,%edi
 56b:	05 00 00 09 68       	add    $0x68090000,%eax
 570:	00 01                	add    %al,(%rcx)
 572:	ad                   	lods   %ds:(%rsi),%eax
 573:	b7 00                	mov    $0x0,%bh
 575:	00 00                	add    %al,(%rax)
 577:	02 91 68 0a 45 06    	add    0x6450a68(%rcx),%dl
 57d:	00 00                	add    %al,(%rax)
 57f:	01 ad 97 05 00 00    	add    %ebp,0x597(%rbp)
 585:	02 91 64 0a c3 03    	add    0x3c30a64(%rcx),%dl
 58b:	00 00                	add    %al,(%rax)
 58d:	01 ad 97 05 00 00    	add    %ebp,0x597(%rbp)
 593:	02 91 60 00 04 9c    	add    -0x63fbffa0(%rcx),%dl
 599:	05 00 00 02 01       	add    $0x1020000,%eax
 59e:	02 b4 02 00 00 08 f2 	add    -0xdf80000(%rdx,%rax,1),%dh
 5a5:	07                   	(bad)  
 5a6:	00 00                	add    %al,(%rax)
 5a8:	01 bb f8 00 00 00    	add    %edi,0xf8(%rbx)
 5ae:	3b 00                	cmp    (%rax),%eax
 5b0:	00 00                	add    %al,(%rax)
 5b2:	34 1b                	xor    $0x1b,%al
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 00                	add    %al,(%rax)
 5b8:	00 00                	add    %al,(%rax)
 5ba:	47 01 00             	rex.RXB add %r8d,(%r8)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 00                	add    %al,(%rax)
 5c1:	00 01                	add    %al,(%rcx)
 5c3:	9c                   	pushfq 
 5c4:	d5                   	(bad)  
 5c5:	05 00 00 09 68       	add    $0x68090000,%eax
 5ca:	00 01                	add    %al,(%rcx)
 5cc:	bb b7 00 00 00       	mov    $0xb7,%ebx
 5d1:	02 91 68 00 08 0f    	add    0xf080068(%rcx),%dl
 5d7:	07                   	(bad)  
 5d8:	00 00                	add    %al,(%rax)
 5da:	01 cf                	add    %ecx,%edi
 5dc:	a1 06 00 00 3b 00 00 	movabs 0x7b0000003b000006,%eax
 5e3:	00 7b 
 5e5:	1c 00                	sbb    $0x0,%al
 5e7:	00 00                	add    %al,(%rax)
 5e9:	00 00                	add    %al,(%rax)
 5eb:	00 47 01             	add    %al,0x1(%rdi)
 5ee:	00 00                	add    %al,(%rax)
 5f0:	00 00                	add    %al,(%rax)
 5f2:	00 00                	add    %al,(%rax)
 5f4:	01 9c 07 06 00 00 09 	add    %ebx,0x9000006(%rdi,%rax,1)
 5fb:	68 00 01 cf b7       	pushq  $0xffffffffb7cf0100
 600:	00 00                	add    %al,(%rax)
 602:	00 02                	add    %al,(%rdx)
 604:	91                   	xchg   %eax,%ecx
 605:	68 00 08 27 07       	pushq  $0x7270800
 60a:	00 00                	add    %al,(%rax)
 60c:	01 e3                	add    %esp,%ebx
 60e:	ea                   	(bad)  
 60f:	04 00                	add    $0x0,%al
 611:	00 3b                	add    %bh,(%rbx)
 613:	00 00                	add    %al,(%rax)
 615:	00 c2                	add    %al,%dl
 617:	1d 00 00 00 00       	sbb    $0x0,%eax
 61c:	00 00                	add    %al,(%rax)
 61e:	47 01 00             	rex.RXB add %r8d,(%r8)
 621:	00 00                	add    %al,(%rax)
 623:	00 00                	add    %al,(%rax)
 625:	00 01                	add    %al,(%rcx)
 627:	9c                   	pushfq 
 628:	39 06                	cmp    %eax,(%rsi)
 62a:	00 00                	add    %al,(%rax)
 62c:	09 68 00             	or     %ebp,0x0(%rax)
 62f:	01 e3                	add    %esp,%ebx
 631:	b7 00                	mov    $0x0,%bh
 633:	00 00                	add    %al,(%rax)
 635:	02 91 68 00 08 c7    	add    -0x38f7ff98(%rcx),%dl
 63b:	01 00                	add    %eax,(%rax)
 63d:	00 01                	add    %al,(%rcx)
 63f:	f7 fa                	idiv   %edx
 641:	05 00 00 3b 00       	add    $0x3b0000,%eax
 646:	00 00                	add    %al,(%rax)
 648:	09 1f                	or     %ebx,(%rdi)
 64a:	00 00                	add    %al,(%rax)
 64c:	00 00                	add    %al,(%rax)
 64e:	00 00                	add    %al,(%rax)
 650:	47 01 00             	rex.RXB add %r8d,(%r8)
 653:	00 00                	add    %al,(%rax)
 655:	00 00                	add    %al,(%rax)
 657:	00 01                	add    %al,(%rcx)
 659:	9c                   	pushfq 
 65a:	6b 06 00             	imul   $0x0,(%rsi),%eax
 65d:	00 09                	add    %cl,(%rcx)
 65f:	68 00 01 f7 b7       	pushq  $0xffffffffb7f70100
 664:	00 00                	add    %al,(%rax)
 666:	00 02                	add    %al,(%rdx)
 668:	91                   	xchg   %eax,%ecx
 669:	68 00 10 47 02       	pushq  $0x2471000
 66e:	00 00                	add    %al,(%rax)
 670:	01 0b                	add    %ecx,(%rbx)
 672:	01 76 04             	add    %esi,0x4(%rsi)
 675:	00 00                	add    %al,(%rax)
 677:	3b 00                	cmp    (%rax),%eax
 679:	00 00                	add    %al,(%rax)
 67b:	50                   	push   %rax
 67c:	20 00                	and    %al,(%rax)
 67e:	00 00                	add    %al,(%rax)
 680:	00 00                	add    %al,(%rax)
 682:	00 8e 00 00 00 00    	add    %cl,0x0(%rsi)
 688:	00 00                	add    %al,(%rax)
 68a:	00 01                	add    %al,(%rcx)
 68c:	9c                   	pushfq 
 68d:	ae                   	scas   %es:(%rdi),%al
 68e:	06                   	(bad)  
 68f:	00 00                	add    %al,(%rax)
 691:	11 68 00             	adc    %ebp,0x0(%rax)
 694:	01 0b                	add    %ecx,(%rbx)
 696:	01 b7 00 00 00 02    	add    %esi,0x2000000(%rdi)
 69c:	91                   	xchg   %eax,%ecx
 69d:	68 12 41 04 00       	pushq  $0x44112
 6a2:	00 01                	add    %al,(%rcx)
 6a4:	0b 01                	or     (%rcx),%eax
 6a6:	86 00                	xchg   %al,(%rax)
 6a8:	00 00                	add    %al,(%rax)
 6aa:	02 91 64 00 10 e1    	add    -0x1eefff9c(%rcx),%dl
 6b0:	01 00                	add    %eax,(%rax)
 6b2:	00 01                	add    %al,(%rcx)
 6b4:	19 01                	sbb    %eax,(%rcx)
 6b6:	11 04 00             	adc    %eax,(%rax,%rax,1)
 6b9:	00 3b                	add    %bh,(%rbx)
 6bb:	00 00                	add    %al,(%rax)
 6bd:	00 de                	add    %bl,%dh
 6bf:	20 00                	and    %al,(%rax)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 70 00             	add    %dh,0x0(%rax)
 6c8:	00 00                	add    %al,(%rax)
 6ca:	00 00                	add    %al,(%rax)
 6cc:	00 00                	add    %al,(%rax)
 6ce:	01 9c f1 06 00 00 11 	add    %ebx,0x11000006(%rcx,%rsi,8)
 6d5:	68 00 01 19 01       	pushq  $0x1190100
 6da:	b7 00                	mov    $0x0,%bh
 6dc:	00 00                	add    %al,(%rax)
 6de:	02 91 68 12 20 05    	add    0x5201268(%rcx),%dl
 6e4:	00 00                	add    %al,(%rax)
 6e6:	01 19                	add    %ebx,(%rcx)
 6e8:	01 86 00 00 00 02    	add    %eax,0x2000000(%rsi)
 6ee:	91                   	xchg   %eax,%ecx
 6ef:	64 00 10             	add    %dl,%fs:(%rax)
 6f2:	34 06                	xor    $0x6,%al
 6f4:	00 00                	add    %al,(%rax)
 6f6:	01 25 01 82 00 00    	add    %esp,0x8201(%rip)        # 88fd <__FRAME_END__+0x630d>
 6fc:	00 3b                	add    %bh,(%rbx)
 6fe:	00 00                	add    %al,(%rax)
 700:	00 4e 21             	add    %cl,0x21(%rsi)
 703:	00 00                	add    %al,(%rax)
 705:	00 00                	add    %al,(%rax)
 707:	00 00                	add    %al,(%rax)
 709:	3f                   	(bad)  
 70a:	00 00                	add    %al,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	00 01                	add    %al,(%rcx)
 712:	9c                   	pushfq 
 713:	25 07 00 00 11       	and    $0x11000007,%eax
 718:	68 00 01 25 01       	pushq  $0x1250100
 71d:	b7 00                	mov    $0x0,%bh
 71f:	00 00                	add    %al,(%rax)
 721:	02 91 68 00 13 ae    	add    -0x51ecff98(%rcx),%dl
 727:	00 00                	add    %al,(%rax)
 729:	00 01                	add    %al,(%rcx)
 72b:	2b 01                	sub    (%rcx),%eax
 72d:	2b 01                	sub    (%rcx),%eax
 72f:	00 00                	add    %al,(%rax)
 731:	3b 00                	cmp    (%rax),%eax
 733:	00 00                	add    %al,(%rax)
 735:	8d 21                	lea    (%rcx),%esp
 737:	00 00                	add    %al,(%rax)
 739:	00 00                	add    %al,(%rax)
 73b:	00 00                	add    %al,(%rax)
 73d:	2d 00 00 00 00       	sub    $0x0,%eax
 742:	00 00                	add    %al,(%rax)
 744:	00 01                	add    %al,(%rcx)
 746:	9c                   	pushfq 
 747:	11 68 00             	adc    %ebp,0x0(%rax)
 74a:	01 2b                	add    %ebp,(%rbx)
 74c:	01 b7 00 00 00 02    	add    %esi,0x2000000(%rdi)
 752:	91                   	xchg   %eax,%ecx
 753:	68 12 6c 04 00       	pushq  $0x46c12
 758:	00 01                	add    %al,(%rcx)
 75a:	2b 01                	sub    (%rcx),%eax
 75c:	86 00                	xchg   %al,(%rax)
 75e:	00 00                	add    %al,(%rax)
 760:	02                   	.byte 0x2
 761:	91                   	xchg   %eax,%ecx
 762:	64 00 00             	add    %al,%fs:(%rax)

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x2eae276>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	11 01                	adc    %eax,(%rcx)
   d:	12 07                	adc    (%rdi),%al
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 24 00             	add    (%rax,%rax,1),%ah
  16:	0b 0b                	or     (%rbx),%ecx
  18:	3e 0b 03             	or     %ds:(%rbx),%eax
  1b:	0e                   	(bad)  
  1c:	00 00                	add    %al,(%rax)
  1e:	03 24 00             	add    (%rax,%rax,1),%esp
  21:	0b 0b                	or     (%rbx),%ecx
  23:	3e 0b 03             	or     %ds:(%rbx),%eax
  26:	08 00                	or     %al,(%rax)
  28:	00 04 26             	add    %al,(%rsi,%riz,1)
  2b:	00 49 13             	add    %cl,0x13(%rcx)
  2e:	00 00                	add    %al,(%rax)
  30:	05 13 00 03 0e       	add    $0xe030013,%eax
  35:	3c 19                	cmp    $0x19,%al
  37:	00 00                	add    %al,(%rax)
  39:	06                   	(bad)  
  3a:	0f 00 0b             	str    (%rbx)
  3d:	0b 49 13             	or     0x13(%rcx),%ecx
  40:	00 00                	add    %al,(%rax)
  42:	07                   	(bad)  
  43:	16                   	(bad)  
  44:	00 03                	add    %al,(%rbx)
  46:	0e                   	(bad)  
  47:	3a 0b                	cmp    (%rbx),%cl
  49:	3b 0b                	cmp    (%rbx),%ecx
  4b:	49 13 00             	adc    (%r8),%rax
  4e:	00 08                	add    %cl,(%rax)
  50:	2e 01 3f             	add    %edi,%cs:(%rdi)
  53:	19 03                	sbb    %eax,(%rbx)
  55:	0e                   	(bad)  
  56:	3a 0b                	cmp    (%rbx),%cl
  58:	3b 0b                	cmp    (%rbx),%ecx
  5a:	6e                   	outsb  %ds:(%rsi),(%dx)
  5b:	0e                   	(bad)  
  5c:	49 13 11             	adc    (%r9),%rdx
  5f:	01 12                	add    %edx,(%rdx)
  61:	07                   	(bad)  
  62:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
  69:	00 00                	add    %al,(%rax)
  6b:	09 05 00 03 08 3a    	or     %eax,0x3a080300(%rip)        # 3a080371 <_end+0x39e7d2d1>
  71:	0b 3b                	or     (%rbx),%edi
  73:	0b 49 13             	or     0x13(%rcx),%ecx
  76:	02 18                	add    (%rax),%bl
  78:	00 00                	add    %al,(%rax)
  7a:	0a 05 00 03 0e 3a    	or     0x3a0e0300(%rip),%al        # 3a0e0380 <_end+0x39edd2e0>
  80:	0b 3b                	or     (%rbx),%edi
  82:	0b 49 13             	or     0x13(%rcx),%ecx
  85:	02 18                	add    (%rax),%bl
  87:	00 00                	add    %al,(%rax)
  89:	0b 0b                	or     (%rbx),%ecx
  8b:	01 11                	add    %edx,(%rcx)
  8d:	01 12                	add    %edx,(%rdx)
  8f:	07                   	(bad)  
  90:	00 00                	add    %al,(%rax)
  92:	0c 34                	or     $0x34,%al
  94:	00 03                	add    %al,(%rbx)
  96:	0e                   	(bad)  
  97:	3a 0b                	cmp    (%rbx),%cl
  99:	3b 0b                	cmp    (%rbx),%ecx
  9b:	49 13 02             	adc    (%r10),%rax
  9e:	18 00                	sbb    %al,(%rax)
  a0:	00 0d 01 01 49 13    	add    %cl,0x13490101(%rip)        # 134901a7 <_end+0x1328d107>
  a6:	01 13                	add    %edx,(%rbx)
  a8:	00 00                	add    %al,(%rax)
  aa:	0e                   	(bad)  
  ab:	21 00                	and    %eax,(%rax)
  ad:	49 13 2f             	adc    (%r15),%rbp
  b0:	0b 00                	or     (%rax),%eax
  b2:	00 0f                	add    %cl,(%rdi)
  b4:	34 00                	xor    $0x0,%al
  b6:	03 08                	add    (%rax),%ecx
  b8:	3a 0b                	cmp    (%rbx),%cl
  ba:	3b 0b                	cmp    (%rbx),%ecx
  bc:	49 13 02             	adc    (%r10),%rax
  bf:	18 00                	sbb    %al,(%rax)
  c1:	00 10                	add    %dl,(%rax)
  c3:	2e 01 3f             	add    %edi,%cs:(%rdi)
  c6:	19 03                	sbb    %eax,(%rbx)
  c8:	0e                   	(bad)  
  c9:	3a 0b                	cmp    (%rbx),%cl
  cb:	3b 05 6e 0e 49 13    	cmp    0x13490e6e(%rip),%eax        # 13490f3f <_end+0x1328de9f>
  d1:	11 01                	adc    %eax,(%rcx)
  d3:	12 07                	adc    (%rdi),%al
  d5:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
  dc:	00 00                	add    %al,(%rax)
  de:	11 05 00 03 08 3a    	adc    %eax,0x3a080300(%rip)        # 3a0803e4 <_end+0x39e7d344>
  e4:	0b 3b                	or     (%rbx),%edi
  e6:	05 49 13 02 18       	add    $0x18021349,%eax
  eb:	00 00                	add    %al,(%rax)
  ed:	12 05 00 03 0e 3a    	adc    0x3a0e0300(%rip),%al        # 3a0e03f3 <_end+0x39edd353>
  f3:	0b 3b                	or     (%rbx),%edi
  f5:	05 49 13 02 18       	add    $0x18021349,%eax
  fa:	00 00                	add    %al,(%rax)
  fc:	13 2e                	adc    (%rsi),%ebp
  fe:	01 3f                	add    %edi,(%rdi)
 100:	19 03                	sbb    %eax,(%rbx)
 102:	0e                   	(bad)  
 103:	3a 0b                	cmp    (%rbx),%cl
 105:	3b 05 6e 0e 49 13    	cmp    0x13490e6e(%rip),%eax        # 13490f79 <_end+0x1328ded9>
 10b:	11 01                	adc    %eax,(%rcx)
 10d:	12 07                	adc    (%rdi),%al
 10f:	40 18 96 42 19 00 00 	sbb    %dl,0x1942(%rsi)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	35 02 00 00 02       	xor    $0x2000002,%eax
   5:	00 8c 00 00 00 01 01 	add    %cl,0x1010000(%rax,%rax,1)
   c:	fb                   	sti    
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	2f                   	(bad)  
  1c:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  21:	6e                   	outsb  %ds:(%rsi),(%dx)
  22:	78 62                	js     86 <_init-0x106a>
  24:	2f                   	(bad)  
  25:	44                   	rex.R
  26:	65                   	gs
  27:	73 6b                	jae    94 <_init-0x105c>
  29:	74 6f                	je     9a <_init-0x1056>
  2b:	70 2f                	jo     5c <_init-0x1094>
  2d:	55                   	push   %rbp
  2e:	53                   	push   %rbx
  2f:	42                   	rex.X
  30:	43 61                	rex.XB (bad) 
  32:	6d                   	insl   (%dx),%es:(%rdi)
  33:	65                   	gs
  34:	72 61                	jb     97 <_init-0x1059>
  36:	2f                   	(bad)  
  37:	55                   	push   %rbp
  38:	53                   	push   %rbx
  39:	42 33 30             	rex.X xor (%rax),%esi
  3c:	2f                   	(bad)  
  3d:	46 58                	rex.RX pop %rax
  3f:	33 5f 53             	xor    0x53(%rdi),%ebx
  42:	44                   	rex.R
  43:	4b 5f                	rex.WXB pop %r15
  45:	4c 69 6e 75 78 2f 46 	imul   $0x58462f78,0x75(%rsi),%r13
  4c:	58 
  4d:	33 5f 53             	xor    0x53(%rdi),%ebx
  50:	44                   	rex.R
  51:	4b 5f                	rex.WXB pop %r15
  53:	4c 69 6e 75 78 5f 76 	imul   $0x31765f78,0x75(%rsi),%r13
  5a:	31 
  5b:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  5e:	33 2f                	xor    (%rdi),%ebp
  60:	63 79 75             	movslq 0x75(%rcx),%edi
  63:	73 62                	jae    c7 <_init-0x1029>
  65:	5f                   	pop    %rdi
  66:	6c                   	insb   (%dx),%es:(%rdi)
  67:	69 6e 75 78 5f 31 2e 	imul   $0x2e315f78,0x75(%rsi),%ebp
  6e:	30 2e                	xor    %ch,(%rsi)
  70:	34 2f                	xor    $0x2f,%al
  72:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  79:	00 00                	add    %al,(%rax)
  7b:	43 71 55             	rex.XB jno d3 <_init-0x101d>
  7e:	33 43 61             	xor    0x61(%rbx),%eax
  81:	6d                   	insl   (%dx),%es:(%rdi)
  82:	2e 63 70 70          	movslq %cs:0x70(%rax),%esi
  86:	00 00                	add    %al,(%rax)
  88:	00 00                	add    %al,(%rax)
  8a:	63 79 75             	movslq 0x75(%rcx),%edi
  8d:	73 62                	jae    f1 <_init-0xfff>
  8f:	2e                   	cs
  90:	68 00 01 00 00       	pushq  $0x100
  95:	00 00                	add    %al,(%rax)
  97:	09 02                	or     %eax,(%rdx)
  99:	f5                   	cmc    
  9a:	12 00                	adc    (%rax),%al
  9c:	00 00                	add    %al,(%rax)
  9e:	00 00                	add    %al,(%rax)
  a0:	00 17                	add    %dl,(%rdi)
  a2:	08 82 e5 08 21 02    	or     %al,0x22108e5(%rdx)
  a8:	39 13                	cmp    %edx,(%rbx)
  aa:	08 a0 08 59 02 38    	or     %ah,0x38025908(%rax)
  b0:	13 30                	adc    (%rax),%esi
  b2:	08 66 e5             	or     %ah,-0x1b(%rsi)
  b5:	08 21                	or     %ah,(%rcx)
  b7:	02 39                	add    (%rcx),%bh
  b9:	13 08                	adc    (%rax),%ecx
  bb:	a0 08 4b 02 38 13 30 	movabs 0x8bd301338024b08,%al
  c2:	bd 08 
  c4:	59                   	pop    %rcx
  c5:	08 59 08             	or     %bl,0x8(%rcx)
  c8:	59                   	pop    %rcx
  c9:	08 59 08             	or     %bl,0x8(%rcx)
  cc:	5a                   	pop    %rdx
  cd:	08 59 08             	or     %bl,0x8(%rcx)
  d0:	5a                   	pop    %rdx
  d1:	08 59 08             	or     %bl,0x8(%rcx)
  d4:	5a                   	pop    %rdx
  d5:	08 59 08             	or     %bl,0x8(%rcx)
  d8:	59                   	pop    %rcx
  d9:	08 59 08             	or     %bl,0x8(%rcx)
  dc:	5a                   	pop    %rdx
  dd:	08 59 08             	or     %bl,0x8(%rcx)
  e0:	5a                   	pop    %rdx
  e1:	08 59 08             	or     %bl,0x8(%rcx)
  e4:	5a                   	pop    %rdx
  e5:	08 5a 08             	or     %bl,0x8(%rdx)
  e8:	5a                   	pop    %rdx
  e9:	08 5a 08             	or     %bl,0x8(%rdx)
  ec:	5a                   	pop    %rdx
  ed:	08 5a 08             	or     %bl,0x8(%rdx)
  f0:	59                   	pop    %rcx
  f1:	59                   	pop    %rcx
  f2:	30 08                	xor    %cl,(%rax)
  f4:	13 67 08             	adc    0x8(%rdi),%esp
  f7:	75 67                	jne    160 <_init-0xf90>
  f9:	08 75 67             	or     %dh,0x67(%rbp)
  fc:	08 75 67             	or     %dh,0x67(%rbp)
  ff:	08 77 30             	or     %dh,0x30(%rdi)
 102:	08 13                	or     %dl,(%rbx)
 104:	67 08 75 67          	or     %dh,0x67(%ebp)
 108:	08 75 67             	or     %dh,0x67(%rbp)
 10b:	08 75 67             	or     %dh,0x67(%rbp)
 10e:	08 76 31             	or     %dh,0x31(%rsi)
 111:	bb 83 67 9f 68       	mov    $0x689f6783,%ebx
 116:	59                   	pop    %rcx
 117:	a0 76 af 08 13 bc 59 	movabs 0x87659bc1308af76,%al
 11e:	76 08 
 120:	67 68 59 76 08 67    	addr32 pushq $0x67087659
 126:	68 59 77 59 30       	pushq  $0x30597759
 12b:	bb 08 3d 67 75       	mov    $0x75673d08,%ebx
 130:	59                   	pop    %rcx
 131:	59                   	pop    %rcx
 132:	30 f3                	xor    %dh,%bl
 134:	83 f3 75             	xor    $0x75,%ebx
 137:	75 08                	jne    141 <_init-0xfaf>
 139:	3e                   	ds
 13a:	59                   	pop    %rcx
 13b:	30 bb 08 59 08 59    	xor    %bh,0x59085908(%rbx)
 141:	08 59 59             	or     %bl,0x59(%rcx)
 144:	30 08                	xor    %cl,(%rax)
 146:	13 08                	adc    (%rax),%ecx
 148:	59                   	pop    %rcx
 149:	08 59 08             	or     %bl,0x8(%rcx)
 14c:	59                   	pop    %rcx
 14d:	08 4b 59             	or     %cl,0x59(%rbx)
 150:	30 08                	xor    %cl,(%rax)
 152:	13 08                	adc    (%rax),%ecx
 154:	4b 59                	rex.WXB pop %r9
 156:	30 08                	xor    %cl,(%rax)
 158:	21 08                	and    %ecx,(%rax)
 15a:	4b 59                	rex.WXB pop %r9
 15c:	30 08                	xor    %cl,(%rax)
 15e:	21 08                	and    %ecx,(%rax)
 160:	4b 59                	rex.WXB pop %r9
 162:	30 08                	xor    %cl,(%rax)
 164:	59                   	pop    %rcx
 165:	00 02                	add    %al,(%rdx)
 167:	04 01                	add    $0x1,%al
 169:	06                   	(bad)  
 16a:	66                   	data16
 16b:	06                   	(bad)  
 16c:	67 08 75 00          	or     %dh,0x0(%ebp)
 170:	02 04 01             	add    (%rcx,%rax,1),%al
 173:	06                   	(bad)  
 174:	66                   	data16
 175:	06                   	(bad)  
 176:	ad                   	lods   %ds:(%rsi),%eax
 177:	08 75 00             	or     %dh,0x0(%rbp)
 17a:	02 04 01             	add    (%rcx,%rax,1),%al
 17d:	06                   	(bad)  
 17e:	ac                   	lods   %ds:(%rsi),%al
 17f:	06                   	(bad)  
 180:	67 08 75 00          	or     %dh,0x0(%ebp)
 184:	02 04 01             	add    (%rcx,%rax,1),%al
 187:	06                   	(bad)  
 188:	ac                   	lods   %ds:(%rsi),%al
 189:	06                   	(bad)  
 18a:	ad                   	lods   %ds:(%rsi),%eax
 18b:	08 5b 59             	or     %bl,0x59(%rbx)
 18e:	30 bb 08 59 08 59    	xor    %bh,0x59085908(%rbx)
 194:	08 59 08             	or     %bl,0x8(%rcx)
 197:	59                   	pop    %rcx
 198:	08 59 08             	or     %bl,0x8(%rcx)
 19b:	59                   	pop    %rcx
 19c:	08 59 08             	or     %bl,0x8(%rcx)
 19f:	59                   	pop    %rcx
 1a0:	08 5a 08             	or     %bl,0x8(%rdx)
 1a3:	59                   	pop    %rcx
 1a4:	08 59 08             	or     %bl,0x8(%rcx)
 1a7:	59                   	pop    %rcx
 1a8:	08 59 08             	or     %bl,0x8(%rcx)
 1ab:	5a                   	pop    %rdx
 1ac:	59                   	pop    %rcx
 1ad:	30 bb 08 59 08 59    	xor    %bh,0x59085908(%rbx)
 1b3:	08 59 08             	or     %bl,0x8(%rcx)
 1b6:	59                   	pop    %rcx
 1b7:	08 59 08             	or     %bl,0x8(%rcx)
 1ba:	59                   	pop    %rcx
 1bb:	08 59 08             	or     %bl,0x8(%rcx)
 1be:	59                   	pop    %rcx
 1bf:	08 5a 08             	or     %bl,0x8(%rdx)
 1c2:	59                   	pop    %rcx
 1c3:	08 59 08             	or     %bl,0x8(%rcx)
 1c6:	59                   	pop    %rcx
 1c7:	08 59 08             	or     %bl,0x8(%rcx)
 1ca:	5a                   	pop    %rdx
 1cb:	59                   	pop    %rcx
 1cc:	30 bb 08 59 08 59    	xor    %bh,0x59085908(%rbx)
 1d2:	08 59 08             	or     %bl,0x8(%rcx)
 1d5:	59                   	pop    %rcx
 1d6:	08 59 08             	or     %bl,0x8(%rcx)
 1d9:	59                   	pop    %rcx
 1da:	08 59 08             	or     %bl,0x8(%rcx)
 1dd:	59                   	pop    %rcx
 1de:	08 5a 08             	or     %bl,0x8(%rdx)
 1e1:	59                   	pop    %rcx
 1e2:	08 59 08             	or     %bl,0x8(%rcx)
 1e5:	59                   	pop    %rcx
 1e6:	08 59 08             	or     %bl,0x8(%rcx)
 1e9:	5a                   	pop    %rdx
 1ea:	59                   	pop    %rcx
 1eb:	30 bb 08 59 08 59    	xor    %bh,0x59085908(%rbx)
 1f1:	08 59 08             	or     %bl,0x8(%rcx)
 1f4:	59                   	pop    %rcx
 1f5:	08 59 08             	or     %bl,0x8(%rcx)
 1f8:	59                   	pop    %rcx
 1f9:	08 59 08             	or     %bl,0x8(%rcx)
 1fc:	59                   	pop    %rcx
 1fd:	08 5a 08             	or     %bl,0x8(%rdx)
 200:	59                   	pop    %rcx
 201:	08 59 08             	or     %bl,0x8(%rcx)
 204:	59                   	pop    %rcx
 205:	08 59 08             	or     %bl,0x8(%rcx)
 208:	5a                   	pop    %rdx
 209:	59                   	pop    %rcx
 20a:	30 08                	xor    %cl,(%rax)
 20c:	13 67 08             	adc    0x8(%rdi),%esp
 20f:	75 67                	jne    278 <_init-0xe78>
 211:	08 75 67             	or     %dh,0x67(%rbp)
 214:	08 75 67             	or     %dh,0x67(%rbp)
 217:	08 5b 59             	or     %bl,0x59(%rbx)
 21a:	30 08                	xor    %cl,(%rax)
 21c:	13 67 08             	adc    0x8(%rdi),%esp
 21f:	75 67                	jne    288 <_init-0xe68>
 221:	08 75 67             	or     %dh,0x67(%rbp)
 224:	08 5b 59             	or     %bl,0x59(%rbx)
 227:	30 bb 08 59 08 59    	xor    %bh,0x59085908(%rbx)
 22d:	59                   	pop    %rcx
 22e:	30 08                	xor    %cl,(%rax)
 230:	13 08                	adc    (%rax),%ecx
 232:	4b 59                	rex.WXB pop %r9
 234:	02 02                	add    (%rdx),%al
 236:	00 01                	add    %al,(%rcx)
 238:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	5f                   	pop    %rdi
   1:	5a                   	pop    %rdx
   2:	31 39                	xor    %edi,(%rcx)
   4:	43 71 55             	rex.XB jno 5c <_init-0x1094>
   7:	33 43 61             	xor    0x61(%rbx),%eax
   a:	6d                   	insl   (%dx),%es:(%rdi)
   b:	5f                   	pop    %rdi
   c:	57                   	push   %rdi
   d:	72 53                	jb     62 <_init-0x108e>
   f:	65 6e                	outsb  %gs:(%rsi),(%dx)
  11:	73 6f                	jae    82 <_init-0x106e>
  13:	72 52                	jb     67 <_init-0x1089>
  15:	65                   	gs
  16:	67 50                	addr32 push %rax
  18:	32 30                	xor    (%rax),%dh
  1a:	6c                   	insb   (%dx),%es:(%rdi)
  1b:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
  22:	65                   	gs
  23:	76 69                	jbe    8e <_init-0x1062>
  25:	63 65 5f             	movslq 0x5f(%rbp),%esp
  28:	68 61 6e 64 6c       	pushq  $0x6c646e61
  2d:	65                   	gs
  2e:	74 74                	je     a4 <_init-0x104c>
  30:	00 43 71             	add    %al,0x71(%rbx)
  33:	55                   	push   %rbp
  34:	33 43 61             	xor    0x61(%rbx),%eax
  37:	6d                   	insl   (%dx),%es:(%rdi)
  38:	5f                   	pop    %rdi
  39:	53                   	push   %rbx
  3a:	65                   	gs
  3b:	74 41                	je     7e <_init-0x1072>
  3d:	6e                   	outsb  %ds:(%rsi),(%dx)
  3e:	61                   	(bad)  
  3f:	6c                   	insb   (%dx),%es:(%rdi)
  40:	6f                   	outsl  %ds:(%rsi),(%dx)
  41:	67 47 61             	addr32 rex.RXB (bad) 
  44:	69 6e 5f 41 75 74 6f 	imul   $0x6f747541,0x5f(%rsi),%ebp
  4b:	54                   	push   %rsp
  4c:	72 69                	jb     b7 <_init-0x1039>
  4e:	67 00 5f 5a          	add    %bl,0x5a(%edi)
  52:	31 39                	xor    %edi,(%rcx)
  54:	43 71 55             	rex.XB jno ac <_init-0x1044>
  57:	33 43 61             	xor    0x61(%rbx),%eax
  5a:	6d                   	insl   (%dx),%es:(%rdi)
  5b:	5f                   	pop    %rdi
  5c:	52                   	push   %rdx
  5d:	64                   	fs
  5e:	53                   	push   %rbx
  5f:	65 6e                	outsb  %gs:(%rsi),(%dx)
  61:	73 6f                	jae    d2 <_init-0x101e>
  63:	72 52                	jb     b7 <_init-0x1039>
  65:	65                   	gs
  66:	67 50                	addr32 push %rax
  68:	32 30                	xor    (%rax),%dh
  6a:	6c                   	insb   (%dx),%es:(%rdi)
  6b:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
  72:	65                   	gs
  73:	76 69                	jbe    de <_init-0x1012>
  75:	63 65 5f             	movslq 0x5f(%rbp),%esp
  78:	68 61 6e 64 6c       	pushq  $0x6c646e61
  7d:	65                   	gs
  7e:	74 50                	je     d0 <_init-0x1020>
  80:	68 00 5f 5a 31       	pushq  $0x315a5f00
  85:	36                   	ss
  86:	43 71 55             	rex.XB jno de <_init-0x1012>
  89:	33 43 61             	xor    0x61(%rbx),%eax
  8c:	6d                   	insl   (%dx),%es:(%rdi)
  8d:	5f                   	pop    %rdi
  8e:	53                   	push   %rbx
  8f:	74 61                	je     f2 <_init-0xffe>
  91:	72 74                	jb     107 <_init-0xfe9>
  93:	43 61                	rex.XB (bad) 
  95:	70 50                	jo     e7 <_init-0x1009>
  97:	32 30                	xor    (%rax),%dh
  99:	6c                   	insb   (%dx),%es:(%rdi)
  9a:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
  a1:	65                   	gs
  a2:	76 69                	jbe    10d <_init-0xfe3>
  a4:	63 65 5f             	movslq 0x5f(%rbp),%esp
  a7:	68 61 6e 64 6c       	pushq  $0x6c646e61
  ac:	65 00 43 71          	add    %al,%gs:0x71(%rbx)
  b0:	55                   	push   %rbp
  b1:	33 43 61             	xor    0x61(%rbx),%eax
  b4:	6d                   	insl   (%dx),%es:(%rdi)
  b5:	5f                   	pop    %rdi
  b6:	53                   	push   %rbx
  b7:	65 6e                	outsb  %gs:(%rsi),(%dx)
  b9:	64                   	fs
  ba:	55                   	push   %rbp
  bb:	73 62                	jae    11f <_init-0xfd1>
  bd:	53                   	push   %rbx
  be:	70 65                	jo     125 <_init-0xfcb>
  c0:	65 64 32 46 70       	gs xor %fs:%gs:0x70(%rsi),%al
  c5:	67 61                	addr32 (bad) 
  c7:	00 5f 5a             	add    %bl,0x5a(%rdi)
  ca:	31 38                	xor    %edi,(%rax)
  cc:	43 71 55             	rex.XB jno 124 <_init-0xfcc>
  cf:	33 43 61             	xor    0x61(%rbx),%eax
  d2:	6d                   	insl   (%dx),%es:(%rdi)
  d3:	5f                   	pop    %rdi
  d4:	43 68 65 63 6b 53    	rex.XB pushq $0x536b6365
  da:	70 65                	jo     141 <_init-0xfaf>
  dc:	65                   	gs
  dd:	64                   	fs
  de:	50                   	push   %rax
  df:	32 30                	xor    (%rax),%dh
  e1:	6c                   	insb   (%dx),%es:(%rdi)
  e2:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
  e9:	65                   	gs
  ea:	76 69                	jbe    155 <_init-0xf9b>
  ec:	63 65 5f             	movslq 0x5f(%rbp),%esp
  ef:	68 61 6e 64 6c       	pushq  $0x6c646e61
  f4:	65                   	gs
  f5:	50                   	push   %rax
  f6:	6a 00                	pushq  $0x0
  f8:	5f                   	pop    %rdi
  f9:	5a                   	pop    %rdx
  fa:	32 33                	xor    (%rbx),%dh
  fc:	43 71 55             	rex.XB jno 154 <_init-0xf9c>
  ff:	33 43 61             	xor    0x61(%rbx),%eax
 102:	6d                   	insl   (%dx),%es:(%rdi)
 103:	5f                   	pop    %rdi
 104:	52                   	push   %rdx
 105:	65                   	gs
 106:	73 6f                	jae    177 <_init-0xf79>
 108:	6c                   	insb   (%dx),%es:(%rdi)
 109:	75 5f                	jne    16a <_init-0xf86>
 10b:	31 32                	xor    %esi,(%rdx)
 10d:	38 30                	cmp    %dh,(%rax)
 10f:	78 37                	js     148 <_init-0xfa8>
 111:	32 30                	xor    (%rax),%dh
 113:	50                   	push   %rax
 114:	32 30                	xor    (%rax),%dh
 116:	6c                   	insb   (%dx),%es:(%rdi)
 117:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 11e:	65                   	gs
 11f:	76 69                	jbe    18a <_init-0xf66>
 121:	63 65 5f             	movslq 0x5f(%rbp),%esp
 124:	68 61 6e 64 6c       	pushq  $0x6c646e61
 129:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 12d:	32 35 43 71 55 33    	xor    0x33557143(%rip),%dh        # 33557276 <_end+0x333541d6>
 133:	43 61                	rex.XB (bad) 
 135:	6d                   	insl   (%dx),%es:(%rdi)
 136:	5f                   	pop    %rdi
 137:	53                   	push   %rbx
 138:	65 6e                	outsb  %gs:(%rsi),(%dx)
 13a:	64                   	fs
 13b:	55                   	push   %rbp
 13c:	73 62                	jae    1a0 <_init-0xf50>
 13e:	53                   	push   %rbx
 13f:	70 65                	jo     1a6 <_init-0xf4a>
 141:	65 64 32 46 70       	gs xor %fs:%gs:0x70(%rsi),%al
 146:	67 61                	addr32 (bad) 
 148:	50                   	push   %rax
 149:	32 30                	xor    (%rax),%dh
 14b:	6c                   	insb   (%dx),%es:(%rdi)
 14c:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 153:	65                   	gs
 154:	76 69                	jbe    1bf <_init-0xf31>
 156:	63 65 5f             	movslq 0x5f(%rbp),%esp
 159:	68 61 6e 64 6c       	pushq  $0x6c646e61
 15e:	65                   	gs
 15f:	68 00 73 69 7a       	pushq  $0x7a697300
 164:	65                   	gs
 165:	74 79                	je     1e0 <_init-0xf10>
 167:	70 65                	jo     1ce <_init-0xf22>
 169:	00 5f 5a             	add    %bl,0x5a(%rdi)
 16c:	32 30                	xor    (%rax),%dh
 16e:	43 71 55             	rex.XB jno 1c6 <_init-0xf2a>
 171:	33 43 61             	xor    0x61(%rbx),%eax
 174:	6d                   	insl   (%dx),%es:(%rdi)
 175:	5f                   	pop    %rdi
 176:	53                   	push   %rbx
 177:	65                   	gs
 178:	74 47                	je     1c1 <_init-0xf2f>
 17a:	61                   	(bad)  
 17b:	69 6e 56 61 6c 75 65 	imul   $0x65756c61,0x56(%rsi),%ebp
 182:	50                   	push   %rax
 183:	32 30                	xor    (%rax),%dh
 185:	6c                   	insb   (%dx),%es:(%rdi)
 186:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 18d:	65                   	gs
 18e:	76 69                	jbe    1f9 <_init-0xef7>
 190:	63 65 5f             	movslq 0x5f(%rbp),%esp
 193:	68 61 6e 64 6c       	pushq  $0x6c646e61
 198:	65                   	gs
 199:	74 00                	je     19b <_init-0xf55>
 19b:	5f                   	pop    %rdi
 19c:	5a                   	pop    %rdx
 19d:	31 36                	xor    %esi,(%rsi)
 19f:	43 71 55             	rex.XB jno 1f7 <_init-0xef9>
 1a2:	33 43 61             	xor    0x61(%rbx),%eax
 1a5:	6d                   	insl   (%dx),%es:(%rdi)
 1a6:	5f                   	pop    %rdi
 1a7:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 1a9:	6f                   	outsl  %ds:(%rsi),(%dx)
 1aa:	73 65                	jae    211 <_init-0xedf>
 1ac:	55                   	push   %rbp
 1ad:	53                   	push   %rbx
 1ae:	42 50                	rex.X push %rax
 1b0:	32 30                	xor    (%rax),%dh
 1b2:	6c                   	insb   (%dx),%es:(%rdi)
 1b3:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 1ba:	65                   	gs
 1bb:	76 69                	jbe    226 <_init-0xeca>
 1bd:	63 65 5f             	movslq 0x5f(%rbp),%esp
 1c0:	68 61 6e 64 6c       	pushq  $0x6c646e61
 1c5:	65 00 43 71          	add    %al,%gs:0x71(%rbx)
 1c9:	55                   	push   %rbp
 1ca:	33 43 61             	xor    0x61(%rbx),%eax
 1cd:	6d                   	insl   (%dx),%es:(%rdi)
 1ce:	5f                   	pop    %rdi
 1cf:	52                   	push   %rdx
 1d0:	65                   	gs
 1d1:	73 6f                	jae    242 <_init-0xeae>
 1d3:	6c                   	insb   (%dx),%es:(%rdi)
 1d4:	75 5f                	jne    235 <_init-0xebb>
 1d6:	36                   	ss
 1d7:	34 30                	xor    $0x30,%al
 1d9:	78 34                	js     20f <_init-0xee1>
 1db:	38 30                	cmp    %dh,(%rax)
 1dd:	62                   	(bad)  
 1de:	69 6e 00 43 71 55 33 	imul   $0x33557143,0x0(%rsi),%ebp
 1e5:	43 61                	rex.XB (bad) 
 1e7:	6d                   	insl   (%dx),%es:(%rdi)
 1e8:	5f                   	pop    %rdi
 1e9:	53                   	push   %rbx
 1ea:	65                   	gs
 1eb:	74 42                	je     22f <_init-0xec1>
 1ed:	69 74 44 65 70 74 68 	imul   $0x687470,0x65(%rsp,%rax,2),%esi
 1f4:	00 
 1f5:	5f                   	pop    %rdi
 1f6:	5a                   	pop    %rdx
 1f7:	32 33                	xor    (%rbx),%dh
 1f9:	43 71 55             	rex.XB jno 251 <_init-0xe9f>
 1fc:	33 43 61             	xor    0x61(%rbx),%eax
 1ff:	6d                   	insl   (%dx),%es:(%rdi)
 200:	5f                   	pop    %rdi
 201:	53                   	push   %rbx
 202:	65                   	gs
 203:	74 41                	je     246 <_init-0xeaa>
 205:	75 74                	jne    27b <_init-0xe75>
 207:	6f                   	outsl  %ds:(%rsi),(%dx)
 208:	54                   	push   %rsp
 209:	72 69                	jb     274 <_init-0xe7c>
 20b:	67 4d 6f             	rex.WRB outsl %ds:(%esi),(%dx)
 20e:	64                   	fs
 20f:	65                   	gs
 210:	50                   	push   %rax
 211:	32 30                	xor    (%rax),%dh
 213:	6c                   	insb   (%dx),%es:(%rdi)
 214:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 21b:	65                   	gs
 21c:	76 69                	jbe    287 <_init-0xe69>
 21e:	63 65 5f             	movslq 0x5f(%rbp),%esp
 221:	68 61 6e 64 6c       	pushq  $0x6c646e61
 226:	65 00 73 68          	add    %dh,%gs:0x68(%rbx)
 22a:	6f                   	outsl  %ds:(%rsi),(%dx)
 22b:	72 74                	jb     2a1 <_init-0xe4f>
 22d:	20 69 6e             	and    %ch,0x6e(%rcx)
 230:	74 00                	je     232 <_init-0xebe>
 232:	43 71 55             	rex.XB jno 28a <_init-0xe66>
 235:	33 43 61             	xor    0x61(%rbx),%eax
 238:	6d                   	insl   (%dx),%es:(%rdi)
 239:	5f                   	pop    %rdi
 23a:	53                   	push   %rbx
 23b:	65                   	gs
 23c:	74 47                	je     285 <_init-0xe6b>
 23e:	61                   	(bad)  
 23f:	69 6e 56 61 6c 75 65 	imul   $0x65756c61,0x56(%rsi),%ebp
 246:	00 43 71             	add    %al,0x71(%rbx)
 249:	55                   	push   %rbp
 24a:	33 43 61             	xor    0x61(%rbx),%eax
 24d:	6d                   	insl   (%dx),%es:(%rdi)
 24e:	5f                   	pop    %rdi
 24f:	53                   	push   %rbx
 250:	65                   	gs
 251:	74 50                	je     2a3 <_init-0xe4d>
 253:	72 6f                	jb     2c4 <_init-0xe2c>
 255:	63 54 79 70          	movslq 0x70(%rcx,%rdi,2),%edx
 259:	65 00 43 71          	add    %al,%gs:0x71(%rbx)
 25d:	55                   	push   %rbp
 25e:	33 43 61             	xor    0x61(%rbx),%eax
 261:	6d                   	insl   (%dx),%es:(%rdi)
 262:	5f                   	pop    %rdi
 263:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 265:	6f                   	outsl  %ds:(%rsi),(%dx)
 266:	73 65                	jae    2cd <_init-0xe23>
 268:	55                   	push   %rbp
 269:	53                   	push   %rbx
 26a:	42 00 5f 5a          	rex.X add %bl,0x5a(%rdi)
 26e:	31 37                	xor    %esi,(%rdi)
 270:	43 71 55             	rex.XB jno 2c8 <_init-0xe28>
 273:	33 43 61             	xor    0x61(%rbx),%eax
 276:	6d                   	insl   (%dx),%es:(%rdi)
 277:	5f                   	pop    %rdi
 278:	52                   	push   %rdx
 279:	64                   	fs
 27a:	46 70 67             	rex.RX jo 2e4 <_init-0xe0c>
 27d:	61                   	(bad)  
 27e:	52                   	push   %rdx
 27f:	65                   	gs
 280:	67 50                	addr32 push %rax
 282:	32 30                	xor    (%rax),%dh
 284:	6c                   	insb   (%dx),%es:(%rdi)
 285:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 28c:	65                   	gs
 28d:	76 69                	jbe    2f8 <_init-0xdf8>
 28f:	63 65 5f             	movslq 0x5f(%rbp),%esp
 292:	68 61 6e 64 6c       	pushq  $0x6c646e61
 297:	65                   	gs
 298:	68 50 68 00 43       	pushq  $0x43006850
 29d:	71 55                	jno    2f4 <_init-0xdfc>
 29f:	33 43 61             	xor    0x61(%rbx),%eax
 2a2:	6d                   	insl   (%dx),%es:(%rdi)
 2a3:	5f                   	pop    %rdi
 2a4:	53                   	push   %rbx
 2a5:	65                   	gs
 2a6:	74 41                	je     2e9 <_init-0xe07>
 2a8:	75 74                	jne    31e <_init-0xdd2>
 2aa:	6f                   	outsl  %ds:(%rsi),(%dx)
 2ab:	47 61                	rex.RXB (bad) 
 2ad:	69 6e 45 78 70 6f 00 	imul   $0x6f7078,0x45(%rsi),%ebp
 2b4:	62                   	(bad)  
 2b5:	6f                   	outsl  %ds:(%rsi),(%dx)
 2b6:	6f                   	outsl  %ds:(%rsi),(%dx)
 2b7:	6c                   	insb   (%dx),%es:(%rdi)
 2b8:	00 69 41             	add    %ch,0x41(%rcx)
 2bb:	64                   	fs
 2bc:	64                   	fs
 2bd:	72 00                	jb     2bf <_init-0xe31>
 2bf:	65                   	gs
 2c0:	78 70                	js     332 <_init-0xdbe>
 2c2:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c3:	00 63 79             	add    %ah,0x79(%rbx)
 2c6:	75 73                	jne    33b <_init-0xdb5>
 2c8:	62                   	(bad)  
 2c9:	5f                   	pop    %rdi
 2ca:	68 61 6e 64 6c       	pushq  $0x6c646e61
 2cf:	65 00 66 72          	add    %ah,%gs:0x72(%rsi)
 2d3:	65                   	gs
 2d4:	71 00                	jno    2d6 <_init-0xe1a>
 2d6:	6c                   	insb   (%dx),%es:(%rdi)
 2d7:	6f                   	outsl  %ds:(%rsi),(%dx)
 2d8:	6e                   	outsb  %ds:(%rsi),(%dx)
 2d9:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 2de:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 2e2:	74 00                	je     2e4 <_init-0xe0c>
 2e4:	43 71 55             	rex.XB jno 33c <_init-0xdb4>
 2e7:	33 43 61             	xor    0x61(%rbx),%eax
 2ea:	6d                   	insl   (%dx),%es:(%rdi)
 2eb:	5f                   	pop    %rdi
 2ec:	53                   	push   %rbx
 2ed:	65                   	gs
 2ee:	74 45                	je     335 <_init-0xdbb>
 2f0:	78 70                	js     362 <_init-0xd8e>
 2f2:	6f                   	outsl  %ds:(%rsi),(%dx)
 2f3:	56                   	push   %rsi
 2f4:	61                   	(bad)  
 2f5:	6c                   	insb   (%dx),%es:(%rdi)
 2f6:	75 65                	jne    35d <_init-0xd93>
 2f8:	00 43 71             	add    %al,0x71(%rbx)
 2fb:	55                   	push   %rbp
 2fc:	33 43 61             	xor    0x61(%rbx),%eax
 2ff:	6d                   	insl   (%dx),%es:(%rdi)
 300:	5f                   	pop    %rdi
 301:	53                   	push   %rbx
 302:	65                   	gs
 303:	74 46                	je     34b <_init-0xda5>
 305:	70 67                	jo     36e <_init-0xd82>
 307:	61                   	(bad)  
 308:	46 72 65             	rex.RX jb 370 <_init-0xd80>
 30b:	71 00                	jno    30d <_init-0xde3>
 30d:	5f                   	pop    %rdi
 30e:	5a                   	pop    %rdx
 30f:	33 30                	xor    (%rax),%esi
 311:	43 71 55             	rex.XB jno 369 <_init-0xd87>
 314:	33 43 61             	xor    0x61(%rbx),%eax
 317:	6d                   	insl   (%dx),%es:(%rdi)
 318:	5f                   	pop    %rdi
 319:	53                   	push   %rbx
 31a:	65                   	gs
 31b:	74 41                	je     35e <_init-0xd92>
 31d:	6e                   	outsb  %ds:(%rsi),(%dx)
 31e:	61                   	(bad)  
 31f:	6c                   	insb   (%dx),%es:(%rdi)
 320:	6f                   	outsl  %ds:(%rsi),(%dx)
 321:	67 47 61             	addr32 rex.RXB (bad) 
 324:	69 6e 5f 46 70 67 61 	imul   $0x61677046,0x5f(%rsi),%ebp
 32b:	54                   	push   %rsp
 32c:	72 69                	jb     397 <_init-0xd59>
 32e:	67 50                	addr32 push %rax
 330:	32 30                	xor    (%rax),%dh
 332:	6c                   	insb   (%dx),%es:(%rdi)
 333:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 33a:	65                   	gs
 33b:	76 69                	jbe    3a6 <_init-0xd4a>
 33d:	63 65 5f             	movslq 0x5f(%rbp),%esp
 340:	68 61 6e 64 6c       	pushq  $0x6c646e61
 345:	65                   	gs
 346:	68 00 5f 5a 31       	pushq  $0x315a5f00
 34b:	39 43 71             	cmp    %eax,0x71(%rbx)
 34e:	55                   	push   %rbp
 34f:	33 43 61             	xor    0x61(%rbx),%eax
 352:	6d                   	insl   (%dx),%es:(%rdi)
 353:	5f                   	pop    %rdi
 354:	53                   	push   %rbx
 355:	65                   	gs
 356:	74 46                	je     39e <_init-0xd52>
 358:	70 67                	jo     3c1 <_init-0xd2f>
 35a:	61                   	(bad)  
 35b:	46 72 65             	rex.RX jb 3c3 <_init-0xd2d>
 35e:	71 50                	jno    3b0 <_init-0xd40>
 360:	32 30                	xor    (%rax),%dh
 362:	6c                   	insb   (%dx),%es:(%rdi)
 363:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 36a:	65                   	gs
 36b:	76 69                	jbe    3d6 <_init-0xd1a>
 36d:	63 65 5f             	movslq 0x5f(%rbp),%esp
 370:	68 61 6e 64 6c       	pushq  $0x6c646e61
 375:	65                   	gs
 376:	68 00 43 71 55       	pushq  $0x55714300
 37b:	33 43 61             	xor    0x61(%rbx),%eax
 37e:	6d                   	insl   (%dx),%es:(%rdi)
 37f:	5f                   	pop    %rdi
 380:	53                   	push   %rbx
 381:	65                   	gs
 382:	74 41                	je     3c5 <_init-0xd2b>
 384:	75 74                	jne    3fa <_init-0xcf6>
 386:	6f                   	outsl  %ds:(%rsi),(%dx)
 387:	54                   	push   %rsp
 388:	72 69                	jb     3f3 <_init-0xcfd>
 38a:	67 4d 6f             	rex.WRB outsl %ds:(%esi),(%dx)
 38d:	64 65 00 75 73       	fs add %dh,%fs:%gs:0x73(%rbp)
 392:	62                   	(bad)  
 393:	4e 75 6d             	rex.WRX jne 403 <_init-0xced>
 396:	00 5f 5a             	add    %bl,0x5a(%rdi)
 399:	31 35 43 71 55 33    	xor    %esi,0x33557143(%rip)        # 335574e2 <_end+0x33354442>
 39f:	43 61                	rex.XB (bad) 
 3a1:	6d                   	insl   (%dx),%es:(%rdi)
 3a2:	5f                   	pop    %rdi
 3a3:	4f 70 65             	rex.WRXB jo 40b <_init-0xce5>
 3a6:	6e                   	outsb  %ds:(%rsi),(%dx)
 3a7:	55                   	push   %rbp
 3a8:	53                   	push   %rbx
 3a9:	42 50                	rex.X push %rax
 3ab:	50                   	push   %rax
 3ac:	32 30                	xor    (%rax),%dh
 3ae:	6c                   	insb   (%dx),%es:(%rdi)
 3af:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 3b6:	65                   	gs
 3b7:	76 69                	jbe    422 <_init-0xcce>
 3b9:	63 65 5f             	movslq 0x5f(%rbp),%esp
 3bc:	68 61 6e 64 6c       	pushq  $0x6c646e61
 3c1:	65 00 62 49          	add    %ah,%gs:0x49(%rdx)
 3c5:	73 41                	jae    408 <_init-0xce8>
 3c7:	75 74                	jne    43d <_init-0xcb3>
 3c9:	6f                   	outsl  %ds:(%rsi),(%dx)
 3ca:	45 78 70             	rex.RB js 43d <_init-0xcb3>
 3cd:	6f                   	outsl  %ds:(%rsi),(%dx)
 3ce:	00 43 71             	add    %al,0x71(%rbx)
 3d1:	55                   	push   %rbp
 3d2:	33 43 61             	xor    0x61(%rbx),%eax
 3d5:	6d                   	insl   (%dx),%es:(%rdi)
 3d6:	5f                   	pop    %rdi
 3d7:	57                   	push   %rdi
 3d8:	72 53                	jb     42d <_init-0xcc3>
 3da:	65 6e                	outsb  %gs:(%rsi),(%dx)
 3dc:	73 6f                	jae    44d <_init-0xca3>
 3de:	72 52                	jb     432 <_init-0xcbe>
 3e0:	65 67 00 5f 5a       	add    %bl,%gs:0x5a(%edi)
 3e5:	31 38                	xor    %edi,(%rax)
 3e7:	43 71 55             	rex.XB jno 43f <_init-0xcb1>
 3ea:	33 43 61             	xor    0x61(%rbx),%eax
 3ed:	6d                   	insl   (%dx),%es:(%rdi)
 3ee:	5f                   	pop    %rdi
 3ef:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
 3f1:	69 74 53 65 6e 73 6f 	imul   $0x726f736e,0x65(%rbx,%rdx,2),%esi
 3f8:	72 
 3f9:	50                   	push   %rax
 3fa:	32 30                	xor    (%rax),%dh
 3fc:	6c                   	insb   (%dx),%es:(%rdi)
 3fd:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 404:	65                   	gs
 405:	76 69                	jbe    470 <_init-0xc80>
 407:	63 65 5f             	movslq 0x5f(%rbp),%esp
 40a:	68 61 6e 64 6c       	pushq  $0x6c646e61
 40f:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 413:	31 39                	xor    %edi,(%rcx)
 415:	43 71 55             	rex.XB jno 46d <_init-0xc83>
 418:	33 43 61             	xor    0x61(%rbx),%eax
 41b:	6d                   	insl   (%dx),%es:(%rdi)
 41c:	5f                   	pop    %rdi
 41d:	53                   	push   %rbx
 41e:	65                   	gs
 41f:	74 42                	je     463 <_init-0xc8d>
 421:	69 74 44 65 70 74 68 	imul   $0x50687470,0x65(%rsp,%rax,2),%esi
 428:	50 
 429:	32 30                	xor    (%rax),%dh
 42b:	6c                   	insb   (%dx),%es:(%rdi)
 42c:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 433:	65                   	gs
 434:	76 69                	jbe    49f <_init-0xc51>
 436:	63 65 5f             	movslq 0x5f(%rbp),%esp
 439:	68 61 6e 64 6c       	pushq  $0x6c646e61
 43e:	65                   	gs
 43f:	68 00 63 68 50       	pushq  $0x50686300
 444:	72 6f                	jb     4b5 <_init-0xc3b>
 446:	63 54 79 70          	movslq 0x70(%rcx,%rdi,2),%edx
 44a:	65 00 43 71          	add    %al,%gs:0x71(%rbx)
 44e:	55                   	push   %rbp
 44f:	33 43 61             	xor    0x61(%rbx),%eax
 452:	6d                   	insl   (%dx),%es:(%rdi)
 453:	5f                   	pop    %rdi
 454:	57                   	push   %rdi
 455:	72 46                	jb     49d <_init-0xc53>
 457:	70 67                	jo     4c0 <_init-0xc30>
 459:	61                   	(bad)  
 45a:	52                   	push   %rdx
 45b:	65 67 00 75 6e       	add    %dh,%gs:0x6e(%ebp)
 460:	73 69                	jae    4cb <_init-0xc25>
 462:	67 6e                	outsb  %ds:(%esi),(%dx)
 464:	65 64 20 63 68       	gs and %ah,%fs:%gs:0x68(%rbx)
 469:	61                   	(bad)  
 46a:	72 00                	jb     46c <_init-0xc84>
 46c:	73 70                	jae    4de <_init-0xc12>
 46e:	65                   	gs
 46f:	65                   	gs
 470:	64                   	fs
 471:	54                   	push   %rsp
 472:	79 70                	jns    4e4 <_init-0xc0c>
 474:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 478:	31 39                	xor    %edi,(%rcx)
 47a:	43 71 55             	rex.XB jno 4d2 <_init-0xc1e>
 47d:	33 43 61             	xor    0x61(%rbx),%eax
 480:	6d                   	insl   (%dx),%es:(%rdi)
 481:	5f                   	pop    %rdi
 482:	53                   	push   %rbx
 483:	65                   	gs
 484:	74 50                	je     4d6 <_init-0xc1a>
 486:	72 6f                	jb     4f7 <_init-0xbf9>
 488:	63 54 79 70          	movslq 0x70(%rcx,%rdi,2),%edx
 48c:	65                   	gs
 48d:	50                   	push   %rax
 48e:	32 30                	xor    (%rax),%dh
 490:	6c                   	insb   (%dx),%es:(%rdi)
 491:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 498:	65                   	gs
 499:	76 69                	jbe    504 <_init-0xbec>
 49b:	63 65 5f             	movslq 0x5f(%rbp),%esp
 49e:	68 61 6e 64 6c       	pushq  $0x6c646e61
 4a3:	65                   	gs
 4a4:	68 00 43 71 55       	pushq  $0x55714300
 4a9:	33 43 61             	xor    0x61(%rbx),%eax
 4ac:	6d                   	insl   (%dx),%es:(%rdi)
 4ad:	5f                   	pop    %rdi
 4ae:	4f 70 65             	rex.WRXB jo 516 <_init-0xbda>
 4b1:	6e                   	outsb  %ds:(%rsi),(%dx)
 4b2:	55                   	push   %rbp
 4b3:	53                   	push   %rbx
 4b4:	42 00 5f 5a          	rex.X add %bl,0x5a(%rdi)
 4b8:	32 33                	xor    (%rbx),%dh
 4ba:	43 71 55             	rex.XB jno 512 <_init-0xbde>
 4bd:	33 43 61             	xor    0x61(%rbx),%eax
 4c0:	6d                   	insl   (%dx),%es:(%rdi)
 4c1:	5f                   	pop    %rdi
 4c2:	53                   	push   %rbx
 4c3:	65                   	gs
 4c4:	74 46                	je     50c <_init-0xbe4>
 4c6:	70 67                	jo     52f <_init-0xbc1>
 4c8:	61                   	(bad)  
 4c9:	54                   	push   %rsp
 4ca:	72 69                	jb     535 <_init-0xbbb>
 4cc:	67 4d 6f             	rex.WRB outsl %ds:(%esi),(%dx)
 4cf:	64                   	fs
 4d0:	65                   	gs
 4d1:	50                   	push   %rax
 4d2:	32 30                	xor    (%rax),%dh
 4d4:	6c                   	insb   (%dx),%es:(%rdi)
 4d5:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 4dc:	65                   	gs
 4dd:	76 69                	jbe    548 <_init-0xba8>
 4df:	63 65 5f             	movslq 0x5f(%rbp),%esp
 4e2:	68 61 6e 64 6c       	pushq  $0x6c646e61
 4e7:	65                   	gs
 4e8:	68 00 5f 5a 32       	pushq  $0x325a5f00
 4ed:	36                   	ss
 4ee:	43 71 55             	rex.XB jno 546 <_init-0xbaa>
 4f1:	33 43 61             	xor    0x61(%rbx),%eax
 4f4:	6d                   	insl   (%dx),%es:(%rdi)
 4f5:	5f                   	pop    %rdi
 4f6:	52                   	push   %rdx
 4f7:	65                   	gs
 4f8:	73 6f                	jae    569 <_init-0xb87>
 4fa:	6c                   	insb   (%dx),%es:(%rdi)
 4fb:	75 5f                	jne    55c <_init-0xb94>
 4fd:	36                   	ss
 4fe:	34 30                	xor    $0x30,%al
 500:	78 34                	js     536 <_init-0xbba>
 502:	38 30                	cmp    %dh,(%rax)
 504:	53                   	push   %rbx
 505:	6b 69 70 50          	imul   $0x50,0x70(%rcx),%ebp
 509:	32 30                	xor    (%rax),%dh
 50b:	6c                   	insb   (%dx),%es:(%rdi)
 50c:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 513:	65                   	gs
 514:	76 69                	jbe    57f <_init-0xb71>
 516:	63 65 5f             	movslq 0x5f(%rbp),%esp
 519:	68 61 6e 64 6c       	pushq  $0x6c646e61
 51e:	65 00 63 68          	add    %ah,%gs:0x68(%rbx)
 522:	42 69 74 44 65 70 74 	imul   $0x687470,0x65(%rsp,%r8,2),%esi
 529:	68 00 
 52b:	6c                   	insb   (%dx),%es:(%rdi)
 52c:	6f                   	outsl  %ds:(%rsi),(%dx)
 52d:	6e                   	outsb  %ds:(%rsi),(%dx)
 52e:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 533:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 537:	73 69                	jae    5a2 <_init-0xb4e>
 539:	67 6e                	outsb  %ds:(%esi),(%dx)
 53b:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
 540:	74 00                	je     542 <_init-0xbae>
 542:	69 56 61 6c 75 65 00 	imul   $0x65756c,0x61(%rsi),%edx
 549:	2f                   	(bad)  
 54a:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
 54f:	6e                   	outsb  %ds:(%rsi),(%dx)
 550:	78 62                	js     5b4 <_init-0xb3c>
 552:	2f                   	(bad)  
 553:	44                   	rex.R
 554:	65                   	gs
 555:	73 6b                	jae    5c2 <_init-0xb2e>
 557:	74 6f                	je     5c8 <_init-0xb28>
 559:	70 2f                	jo     58a <_init-0xb66>
 55b:	55                   	push   %rbp
 55c:	53                   	push   %rbx
 55d:	42                   	rex.X
 55e:	43 61                	rex.XB (bad) 
 560:	6d                   	insl   (%dx),%es:(%rdi)
 561:	65                   	gs
 562:	72 61                	jb     5c5 <_init-0xb2b>
 564:	2f                   	(bad)  
 565:	55                   	push   %rbp
 566:	53                   	push   %rbx
 567:	42 33 30             	rex.X xor (%rax),%esi
 56a:	2f                   	(bad)  
 56b:	4d 79 4c             	rex.WRB jns 5ba <_init-0xb36>
 56e:	69 6e 75 78 55 73 62 	imul   $0x62735578,0x75(%rsi),%ebp
 575:	53                   	push   %rbx
 576:	64 6b 44 65 6d 6f    	imul   $0x6f,%fs:0x6d(%rbp,%riz,2),%eax
 57c:	2f                   	(bad)  
 57d:	43 71 55             	rex.XB jno 5d5 <_init-0xb1b>
 580:	33 43 61             	xor    0x61(%rbx),%eax
 583:	6d                   	insl   (%dx),%es:(%rdi)
 584:	65                   	gs
 585:	72 61                	jb     5e8 <_init-0xb08>
 587:	41 50                	push   %r8
 589:	49 00 73 70          	rex.WB add %sil,0x70(%r11)
 58d:	65 65 64 00 67 61    	gs gs add %ah,%fs:%gs:0x61(%rdi)
 593:	69 6e 00 73 68 6f 72 	imul   $0x726f6873,0x0(%rsi),%ebp
 59a:	74 20                	je     5bc <_init-0xb34>
 59c:	75 6e                	jne    60c <_init-0xae4>
 59e:	73 69                	jae    609 <_init-0xae7>
 5a0:	67 6e                	outsb  %ds:(%esi),(%dx)
 5a2:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
 5a7:	74 00                	je     5a9 <_init-0xb47>
 5a9:	67 61                	addr32 (bad) 
 5ab:	69 6e 54 79 70 65 00 	imul   $0x657079,0x54(%rsi),%ebp
 5b2:	43 71 55             	rex.XB jno 60a <_init-0xae6>
 5b5:	33 43 61             	xor    0x61(%rbx),%eax
 5b8:	6d                   	insl   (%dx),%es:(%rdi)
 5b9:	5f                   	pop    %rdi
 5ba:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
 5bc:	69 74 53 65 6e 73 6f 	imul   $0x726f736e,0x65(%rbx,%rdx,2),%esi
 5c3:	72 
 5c4:	00 5f 5a             	add    %bl,0x5a(%rdi)
 5c7:	32 33                	xor    (%rbx),%dh
 5c9:	43 71 55             	rex.XB jno 621 <_init-0xacf>
 5cc:	33 43 61             	xor    0x61(%rbx),%eax
 5cf:	6d                   	insl   (%dx),%es:(%rdi)
 5d0:	5f                   	pop    %rdi
 5d1:	53                   	push   %rbx
 5d2:	65                   	gs
 5d3:	74 41                	je     616 <_init-0xada>
 5d5:	75 74                	jne    64b <_init-0xaa5>
 5d7:	6f                   	outsl  %ds:(%rsi),(%dx)
 5d8:	47 61                	rex.RXB (bad) 
 5da:	69 6e 45 78 70 6f 50 	imul   $0x506f7078,0x45(%rsi),%ebp
 5e1:	32 30                	xor    (%rax),%dh
 5e3:	6c                   	insb   (%dx),%es:(%rdi)
 5e4:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 5eb:	65                   	gs
 5ec:	76 69                	jbe    657 <_init-0xa99>
 5ee:	63 65 5f             	movslq 0x5f(%rbp),%esp
 5f1:	68 61 6e 64 6c       	pushq  $0x6c646e61
 5f6:	65                   	gs
 5f7:	62 62                	(bad)  
 5f9:	00 5f 5a             	add    %bl,0x5a(%rdi)
 5fc:	32 35 43 71 55 33    	xor    0x33557143(%rip),%dh        # 33557745 <_end+0x333546a5>
 602:	43 61                	rex.XB (bad) 
 604:	6d                   	insl   (%dx),%es:(%rdi)
 605:	5f                   	pop    %rdi
 606:	52                   	push   %rdx
 607:	65                   	gs
 608:	73 6f                	jae    679 <_init-0xa77>
 60a:	6c                   	insb   (%dx),%es:(%rdi)
 60b:	75 5f                	jne    66c <_init-0xa84>
 60d:	36                   	ss
 60e:	34 30                	xor    $0x30,%al
 610:	78 34                	js     646 <_init-0xaaa>
 612:	38 30                	cmp    %dh,(%rax)
 614:	62                   	(bad)  
 615:	69 6e 50 32 30 6c 69 	imul   $0x696c3032,0x50(%rsi),%ebp
 61c:	62                   	(bad)  
 61d:	75 73                	jne    692 <_init-0xa5e>
 61f:	62                   	(bad)  
 620:	5f                   	pop    %rdi
 621:	64                   	fs
 622:	65                   	gs
 623:	76 69                	jbe    68e <_init-0xa62>
 625:	63 65 5f             	movslq 0x5f(%rbp),%esp
 628:	68 61 6e 64 6c       	pushq  $0x6c646e61
 62d:	65 00 64 61 74       	add    %ah,%gs:0x74(%rcx,%riz,2)
 632:	61                   	(bad)  
 633:	00 43 71             	add    %al,0x71(%rbx)
 636:	55                   	push   %rbp
 637:	33 43 61             	xor    0x61(%rbx),%eax
 63a:	6d                   	insl   (%dx),%es:(%rdi)
 63b:	5f                   	pop    %rdi
 63c:	53                   	push   %rbx
 63d:	74 61                	je     6a0 <_init-0xa50>
 63f:	72 74                	jb     6b5 <_init-0xa3b>
 641:	43 61                	rex.XB (bad) 
 643:	70 00                	jo     645 <_init-0xaab>
 645:	62                   	(bad)  
 646:	49 73 41             	rex.WB jae 68a <_init-0xa66>
 649:	75 74                	jne    6bf <_init-0xa31>
 64b:	6f                   	outsl  %ds:(%rsi),(%dx)
 64c:	47 61                	rex.RXB (bad) 
 64e:	69 6e 00 43 71 55 33 	imul   $0x33557143,0x0(%rsi),%ebp
 655:	43 61                	rex.XB (bad) 
 657:	6d                   	insl   (%dx),%es:(%rdi)
 658:	5f                   	pop    %rdi
 659:	53                   	push   %rbx
 65a:	65                   	gs
 65b:	74 41                	je     69e <_init-0xa52>
 65d:	6e                   	outsb  %ds:(%rsi),(%dx)
 65e:	61                   	(bad)  
 65f:	6c                   	insb   (%dx),%es:(%rdi)
 660:	6f                   	outsl  %ds:(%rsi),(%dx)
 661:	67 47 61             	addr32 rex.RXB (bad) 
 664:	69 6e 5f 46 70 67 61 	imul   $0x61677046,0x5f(%rsi),%ebp
 66b:	54                   	push   %rsp
 66c:	72 69                	jb     6d7 <_init-0xa19>
 66e:	67 00 5f 5a          	add    %bl,0x5a(%edi)
 672:	32 30                	xor    (%rax),%dh
 674:	43 71 55             	rex.XB jno 6cc <_init-0xa24>
 677:	33 43 61             	xor    0x61(%rbx),%eax
 67a:	6d                   	insl   (%dx),%es:(%rdi)
 67b:	5f                   	pop    %rdi
 67c:	53                   	push   %rbx
 67d:	65                   	gs
 67e:	74 45                	je     6c5 <_init-0xa2b>
 680:	78 70                	js     6f2 <_init-0x9fe>
 682:	6f                   	outsl  %ds:(%rsi),(%dx)
 683:	56                   	push   %rsi
 684:	61                   	(bad)  
 685:	6c                   	insb   (%dx),%es:(%rdi)
 686:	75 65                	jne    6ed <_init-0xa03>
 688:	50                   	push   %rax
 689:	32 30                	xor    (%rax),%dh
 68b:	6c                   	insb   (%dx),%es:(%rdi)
 68c:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 693:	65                   	gs
 694:	76 69                	jbe    6ff <_init-0x9f1>
 696:	63 65 5f             	movslq 0x5f(%rbp),%esp
 699:	68 61 6e 64 6c       	pushq  $0x6c646e61
 69e:	65                   	gs
 69f:	74 00                	je     6a1 <_init-0xa4f>
 6a1:	5f                   	pop    %rdi
 6a2:	5a                   	pop    %rdx
 6a3:	32 33                	xor    (%rbx),%dh
 6a5:	43 71 55             	rex.XB jno 6fd <_init-0x9f3>
 6a8:	33 43 61             	xor    0x61(%rbx),%eax
 6ab:	6d                   	insl   (%dx),%es:(%rdi)
 6ac:	5f                   	pop    %rdi
 6ad:	52                   	push   %rdx
 6ae:	65                   	gs
 6af:	73 6f                	jae    720 <_init-0x9d0>
 6b1:	6c                   	insb   (%dx),%es:(%rdi)
 6b2:	75 5f                	jne    713 <_init-0x9dd>
 6b4:	31 32                	xor    %esi,(%rdx)
 6b6:	38 30                	cmp    %dh,(%rax)
 6b8:	78 39                	js     6f3 <_init-0x9fd>
 6ba:	36 30 50 32          	xor    %dl,%ss:0x32(%rax)
 6be:	30 6c 69 62          	xor    %ch,0x62(%rcx,%rbp,2)
 6c2:	75 73                	jne    737 <_init-0x9b9>
 6c4:	62                   	(bad)  
 6c5:	5f                   	pop    %rdi
 6c6:	64                   	fs
 6c7:	65                   	gs
 6c8:	76 69                	jbe    733 <_init-0x9bd>
 6ca:	63 65 5f             	movslq 0x5f(%rbp),%esp
 6cd:	68 61 6e 64 6c       	pushq  $0x6c646e61
 6d2:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 6d6:	33 30                	xor    (%rax),%esi
 6d8:	43 71 55             	rex.XB jno 730 <_init-0x9c0>
 6db:	33 43 61             	xor    0x61(%rbx),%eax
 6de:	6d                   	insl   (%dx),%es:(%rdi)
 6df:	5f                   	pop    %rdi
 6e0:	53                   	push   %rbx
 6e1:	65                   	gs
 6e2:	74 41                	je     725 <_init-0x9cb>
 6e4:	6e                   	outsb  %ds:(%rsi),(%dx)
 6e5:	61                   	(bad)  
 6e6:	6c                   	insb   (%dx),%es:(%rdi)
 6e7:	6f                   	outsl  %ds:(%rsi),(%dx)
 6e8:	67 47 61             	addr32 rex.RXB (bad) 
 6eb:	69 6e 5f 41 75 74 6f 	imul   $0x6f747541,0x5f(%rsi),%ebp
 6f2:	54                   	push   %rsp
 6f3:	72 69                	jb     75e <_init-0x992>
 6f5:	67 50                	addr32 push %rax
 6f7:	32 30                	xor    (%rax),%dh
 6f9:	6c                   	insb   (%dx),%es:(%rdi)
 6fa:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 701:	65                   	gs
 702:	76 69                	jbe    76d <_init-0x983>
 704:	63 65 5f             	movslq 0x5f(%rbp),%esp
 707:	68 61 6e 64 6c       	pushq  $0x6c646e61
 70c:	65                   	gs
 70d:	68 00 43 71 55       	pushq  $0x55714300
 712:	33 43 61             	xor    0x61(%rbx),%eax
 715:	6d                   	insl   (%dx),%es:(%rdi)
 716:	5f                   	pop    %rdi
 717:	52                   	push   %rdx
 718:	65                   	gs
 719:	73 6f                	jae    78a <_init-0x966>
 71b:	6c                   	insb   (%dx),%es:(%rdi)
 71c:	75 5f                	jne    77d <_init-0x973>
 71e:	31 32                	xor    %esi,(%rdx)
 720:	38 30                	cmp    %dh,(%rax)
 722:	78 39                	js     75d <_init-0x993>
 724:	36 30 00             	xor    %al,%ss:(%rax)
 727:	43 71 55             	rex.XB jno 77f <_init-0x971>
 72a:	33 43 61             	xor    0x61(%rbx),%eax
 72d:	6d                   	insl   (%dx),%es:(%rdi)
 72e:	5f                   	pop    %rdi
 72f:	52                   	push   %rdx
 730:	65                   	gs
 731:	73 6f                	jae    7a2 <_init-0x94e>
 733:	6c                   	insb   (%dx),%es:(%rdi)
 734:	75 5f                	jne    795 <_init-0x95b>
 736:	36                   	ss
 737:	34 30                	xor    $0x30,%al
 739:	78 34                	js     76f <_init-0x981>
 73b:	38 30                	cmp    %dh,(%rax)
 73d:	53                   	push   %rbx
 73e:	6b 69 70 00          	imul   $0x0,0x70(%rcx),%ebp
 742:	43 71 55             	rex.XB jno 79a <_init-0x956>
 745:	33 43 61             	xor    0x61(%rbx),%eax
 748:	6d                   	insl   (%dx),%es:(%rdi)
 749:	5f                   	pop    %rdi
 74a:	53                   	push   %rbx
 74b:	65                   	gs
 74c:	74 46                	je     794 <_init-0x95c>
 74e:	70 67                	jo     7b7 <_init-0x939>
 750:	61                   	(bad)  
 751:	54                   	push   %rsp
 752:	72 69                	jb     7bd <_init-0x933>
 754:	67 4d 6f             	rex.WRB outsl %ds:(%esi),(%dx)
 757:	64 65 00 43 71       	fs add %al,%fs:%gs:0x71(%rbx)
 75c:	55                   	push   %rbp
 75d:	33 43 61             	xor    0x61(%rbx),%eax
 760:	6d                   	insl   (%dx),%es:(%rdi)
 761:	5f                   	pop    %rdi
 762:	52                   	push   %rdx
 763:	64                   	fs
 764:	53                   	push   %rbx
 765:	65 6e                	outsb  %gs:(%rsi),(%dx)
 767:	73 6f                	jae    7d8 <_init-0x918>
 769:	72 52                	jb     7bd <_init-0x933>
 76b:	65 67 00 63 79       	add    %ah,%gs:0x79(%ebx)
 770:	75 73                	jne    7e5 <_init-0x90b>
 772:	62                   	(bad)  
 773:	5f                   	pop    %rdi
 774:	64                   	fs
 775:	65                   	gs
 776:	76 69                	jbe    7e1 <_init-0x90f>
 778:	63 65 00             	movslq 0x0(%rbp),%esp
 77b:	43 71 55             	rex.XB jno 7d3 <_init-0x91d>
 77e:	33 43 61             	xor    0x61(%rbx),%eax
 781:	6d                   	insl   (%dx),%es:(%rdi)
 782:	2e 63 70 70          	movslq %cs:0x70(%rax),%esi
 786:	00 47 4e             	add    %al,0x4e(%rdi)
 789:	55                   	push   %rbp
 78a:	20 43 2b             	and    %al,0x2b(%rbx)
 78d:	2b 20                	sub    (%rax),%esp
 78f:	34 2e                	xor    $0x2e,%al
 791:	38 2e                	cmp    %ch,(%rsi)
 793:	34 20                	xor    $0x20,%al
 795:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
 79a:	65                   	gs
 79b:	3d 67 65 6e 65       	cmp    $0x656e6567,%eax
 7a0:	72 69                	jb     80b <_init-0x8e5>
 7a2:	63 20                	movslq (%rax),%esp
 7a4:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 7a9:	68 3d 78 38 36       	pushq  $0x3638783d
 7ae:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 7b3:	67 20 2d 4f 30 20 2d 	and    %ch,0x2d20304f(%eip)        # 2d203809 <_end+0x2d000769>
 7ba:	66 50                	push   %ax
 7bc:	49                   	rex.WB
 7bd:	43 20 2d 66 73 74 61 	rex.XB and %bpl,0x61747366(%rip)        # 61747b2a <_end+0x61544a8a>
 7c4:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
 7c7:	70 72                	jo     83b <_init-0x8b5>
 7c9:	6f                   	outsl  %ds:(%rsi),(%dx)
 7ca:	74 65                	je     831 <_init-0x8bf>
 7cc:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
 7d0:	00 43 71             	add    %al,0x71(%rbx)
 7d3:	55                   	push   %rbp
 7d4:	33 43 61             	xor    0x61(%rbx),%eax
 7d7:	6d                   	insl   (%dx),%es:(%rdi)
 7d8:	5f                   	pop    %rdi
 7d9:	43 68 65 63 6b 53    	rex.XB pushq $0x536b6365
 7df:	70 65                	jo     846 <_init-0x8aa>
 7e1:	65 64 00 6c 69 62    	gs add %ch,%fs:%gs:0x62(%rcx,%rbp,2)
 7e7:	75 73                	jne    85c <_init-0x894>
 7e9:	62                   	(bad)  
 7ea:	5f                   	pop    %rdi
 7eb:	64                   	fs
 7ec:	65                   	gs
 7ed:	76 69                	jbe    858 <_init-0x898>
 7ef:	63 65 00             	movslq 0x0(%rbp),%esp
 7f2:	43 71 55             	rex.XB jno 84a <_init-0x8a6>
 7f5:	33 43 61             	xor    0x61(%rbx),%eax
 7f8:	6d                   	insl   (%dx),%es:(%rdi)
 7f9:	5f                   	pop    %rdi
 7fa:	52                   	push   %rdx
 7fb:	65                   	gs
 7fc:	73 6f                	jae    86d <_init-0x883>
 7fe:	6c                   	insb   (%dx),%es:(%rdi)
 7ff:	75 5f                	jne    860 <_init-0x890>
 801:	31 32                	xor    %esi,(%rdx)
 803:	38 30                	cmp    %dh,(%rax)
 805:	78 37                	js     83e <_init-0x8b2>
 807:	32 30                	xor    (%rax),%dh
 809:	00 5f 5a             	add    %bl,0x5a(%rdi)
 80c:	31 37                	xor    %esi,(%rdi)
 80e:	43 71 55             	rex.XB jno 866 <_init-0x88a>
 811:	33 43 61             	xor    0x61(%rbx),%eax
 814:	6d                   	insl   (%dx),%es:(%rdi)
 815:	5f                   	pop    %rdi
 816:	57                   	push   %rdi
 817:	72 46                	jb     85f <_init-0x891>
 819:	70 67                	jo     882 <_init-0x86e>
 81b:	61                   	(bad)  
 81c:	52                   	push   %rdx
 81d:	65                   	gs
 81e:	67 50                	addr32 push %rax
 820:	32 30                	xor    (%rax),%dh
 822:	6c                   	insb   (%dx),%es:(%rdi)
 823:	69 62 75 73 62 5f 64 	imul   $0x645f6273,0x75(%rdx),%esp
 82a:	65                   	gs
 82b:	76 69                	jbe    896 <_init-0x85a>
 82d:	63 65 5f             	movslq 0x5f(%rbp),%esp
 830:	68 61 6e 64 6c       	pushq  $0x6c646e61
 835:	65                   	gs
 836:	68 68 00 68 5f       	pushq  $0x5f680068
 83b:	64                   	fs
 83c:	65                   	gs
 83d:	76 00                	jbe    83f <_init-0x8b1>
 83f:	43 71 55             	rex.XB jno 897 <_init-0x859>
 842:	33 43 61             	xor    0x61(%rbx),%eax
 845:	6d                   	insl   (%dx),%es:(%rdi)
 846:	5f                   	pop    %rdi
 847:	52                   	push   %rdx
 848:	64                   	fs
 849:	46 70 67             	rex.RX jo 8b3 <_init-0x83d>
 84c:	61                   	(bad)  
 84d:	52                   	push   %rdx
 84e:	65                   	gs
 84f:	67                   	addr32
	...
