#ifndef _AR0135_H_
#define _AR0135_H_

/****************************************************************************************\
 * This is the header file for the Caiqi usb camera for Linux/Mac						*
 *                                                                                	*
 * Author              :        nxb     											* 												
 * License             :        GPL Ver 2.0                                       	*
 * Copyright           :        Caiqi Electronics Inc.								*
 * Date written        :        Oct 12, 2017                                    	*
 * Modification Notes  :                                                          	*
 *    1. nxb, Oct 12, 2017                                  						*
 *       Add documentation.                                          				*
 *                      															*
 *                                                                                	*
 \***************************************************************************************/
#include <stdio.h>
#include <string>
#include <list>

#include "Types.h"
#include "cyusb.h"
#include "tagSensor.h"


//extern tagSensor sensor_AR0135;

void AR0135_RegisterSensor(list<tagSensor>& sensorList);

static cq_int32_t AR0135_WrSensorReg(cyusb_handle *pUsbHandle, const cq_uint32_t iAddr, const cq_uint32_t iValue);
static cq_int32_t AR0135_RdSensorReg(cyusb_handle *pUsbHandle, const cq_uint32_t iAddr, cq_uint8_t &	iValue);
static cq_int32_t AR0135_WrFpgaReg(cyusb_handle *pUsbHandle, const cq_uint32_t iAddr, const cq_uint32_t iValue);
static cq_int32_t AR0135_RdFpgaReg(cyusb_handle *pUsbHandle, const cq_uint32_t iAddr, cq_uint8_t &iValue);

static cq_int32_t AR0135_SetAnalogGain(cyusb_handle *pUsbHandle, const cq_uint32_t chTrigType, const cq_uint32_t chGainType);
static cq_int32_t AR0135_InitSensor(cyusb_handle *pUsbHandle);
static cq_int32_t AR0135_SetFpgaTrigFreq(cyusb_handle *pUsbHandle, const cq_uint32_t iFreqVal);
static cq_int32_t AR0135_SetTrigMode(cyusb_handle *pUsbHandle, const cq_uint32_t chTrigType);
static cq_int32_t AR0135_SetExpoValue(cyusb_handle *pUsbHandle, const cq_uint32_t iExpoVal);
static cq_int32_t AR0135_SetGainValue(cyusb_handle *pUsbHandle, const cq_uint32_t iGainVal);
static cq_int32_t AR0135_SetAutoGainExpo(cyusb_handle *pUsbHandle, const cq_bool_t bIsAutoGain, const cq_bool_t bIsAutoExpo);
static cq_int32_t AR0135_SetResolution(cyusb_handle *pUsbHandle, const cq_uint32_t chResoluType);
static cq_int32_t AR0135_SetMirrorType(cyusb_handle *pUsbHandle, const cq_uint32_t chMirrorType);
static cq_int32_t AR0135_SetBitDepth(cyusb_handle *pUsbHandle, const cq_uint32_t chBitDepthType);


static cq_int32_t AR0135_StartCap(cyusb_handle *pUsbHandle);
static cq_int32_t AR0135_StopCap(cyusb_handle *pUsbHandle);
static cq_int32_t AR0135_SendUsbSpeed2Fpga(cyusb_handle *pUsbHandle, const cq_uint32_t chSpeedType);





#endif // _AR0135_H_
